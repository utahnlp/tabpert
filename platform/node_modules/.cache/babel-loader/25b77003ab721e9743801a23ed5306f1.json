{"ast":null,"code":"var _jsxFileName = \"/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/View.js\";\nimport React, { Component } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { getListStyle, getItemStyle } from \"./Colours\";\nimport { IconButton, TextareaAutosize } from \"@material-ui/core\";\nimport HypothesisModal from \"./HypothesisModal\";\nimport KeyModal from \"./KeyModal\";\nconst grid = 5; // for dark mode\n// const bgcolors_dict = {\n//   original: \"#DEB2F4\",\n//   A: \"#A4CDF0\",\n//   B: \"#A2DCE2\",\n//   C: \"#F9D3BC\",\n//   trash: \"#ccc5b4\",\n//   add: \"#ccc5b4\",\n// };\n// for light mode\n\nconst bgcolors_dict = {\n  original: \"#ca76f5\",\n  A: \"#5ca1db\",\n  B: \"#56d3e3\",\n  C: \"#ffae7d\",\n  trash: \"#ccc5b4\",\n  add: \"#ccc5b4\"\n};\nconst rowcolor = \"#edf1f2\";\nconst hypotheses_dark_colour = \"#92d5e6\";\nconst hypotheses_light_colour = \"#e1edf0\";\n\nclass View extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRows = this.tableRows.bind(this);\n    this.showView = this.showView.bind(this);\n    this.hypothesesDisplay = this.hypothesesDisplay.bind(this);\n    this.getDefaultState = this.getDefaultState.bind(this);\n    this.state = this.getDefaultState();\n  }\n\n  getDefaultState() {\n    let a = new Array(9).fill(0);\n    let b = new Array(9).fill(0);\n    let c = new Array(9).fill(0);\n    let a_rows = new Array(Object.keys(this.props.A).length).fill(0);\n    let b_rows = new Array(Object.keys(this.props.B).length).fill(0);\n    let c_rows = new Array(Object.keys(this.props.C).length).fill(0);\n    let state_var = {\n      A: a,\n      B: b,\n      C: c,\n      A_keys: a_rows,\n      B_keys: b_rows,\n      C_keys: c_rows\n    };\n    return state_var;\n  }\n\n  getListStyle(isDraggingOver, type) {\n    const bgcolor = bgcolors_dict[type];\n    return {\n      background: isDraggingOver ? \"#f5eef8\" : bgcolor,\n      padding: grid,\n      minWidth: \"250px\",\n      minHeight: \"50px\"\n    };\n  }\n\n  getItemStyle(isDragging, draggableStyle) {\n    return {\n      // some basic styles to make the items look a bit nicer\n      userSelect: \"none\",\n      padding: grid * 2,\n      margin: `0 0 ${grid}px 0`,\n      // change background colour if dragging\n      background: isDragging ? \"lightgreen\" : rowcolor,\n      // styles we need to apply on draggables\n      ...draggableStyle\n    };\n  }\n\n  tableRows(pairs, type, name = \"draggable\", editable = true, checkboxes = false, hypo) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, Object.keys(pairs).map((key, key_idx) => {\n      var checkbox = key; // console.log(\"$$$$$$$$$$$$$$\");\n      // console.log(this.props);\n      // console.log(type, hypo);\n\n      if (checkboxes === true) {\n        checkbox = /*#__PURE__*/React.createElement(Form, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check, {\n          custom: true,\n          type: \"checkbox\",\n          defaultChecked: this.props[type.toLowerCase() + \"h\"][hypo][2].includes(key) ? true : false,\n          id: type + \"_check_\" + key,\n          label: key,\n          className: \"checkbox label\",\n          onChange: () => {\n            this.props.handleRowChange(type, key, hypo);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(Container, {\n        style: {\n          marginBottom: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: type + \"_\" + key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef,\n        style: this.getListStyle(snapshot.isDraggingOver, type)\n      }, provided.droppableProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }), !checkboxes && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"inline-block\",\n          whiteSpace: \"nowrap\",\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }\n      }, checkbox), \" \", /*#__PURE__*/React.createElement(IconButton, {\n        size: \"small\",\n        style: {\n          marginLeft: \"auto\"\n        },\n        onClick: () => {\n          var newState = this.getDefaultState();\n          newState[type + \"_keys\"][key_idx] = 1;\n          this.setState(newState);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }\n      }, type !== \"original\" && /*#__PURE__*/React.createElement(EditIcon, {\n        className: \"float-right\",\n        style: {\n          width: \"15px\",\n          height: \"15px\",\n          opacity: \"0.5\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 33\n        }\n      })), type !== \"original\" && /*#__PURE__*/React.createElement(KeyModal, {\n        show: this.state[type + \"_keys\"][key_idx],\n        onHide: () => this.setState(this.getDefaultState()),\n        onDelete: (type, key) => {\n          this.props.deleteSection(type, key);\n        },\n        onEdit: new_key => {\n          this.props.editSectionName(type, key, new_key);\n        },\n        section_name: key,\n        type: type,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 31\n        }\n      }))), checkboxes && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          backgroundColor: bgcolors_dict[type],\n          marginLeft: \"20px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 27\n        }\n      }, checkbox)), pairs[key].map((value, id) => {\n        // console.log(\"value is ^^^^^\");\n        // console.log(value);\n        return /*#__PURE__*/React.createElement(Draggable, {\n          draggableId: type + \"_\" + key + \"_\" + id,\n          index: id,\n          className: \"draggable\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 27\n          }\n        }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          style: this.getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n          style: {\n            marginLeft: \"20px\",\n            background: \"transparent\",\n            resize: \"none\",\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n            borderColor: \"rgba(0, 0, 0, 0)\"\n          },\n          name: name,\n          id: \"item_\" + type + \"_\" + key + \"_\" + id,\n          value: type === \"original\" ? value : Object.keys(value)[0],\n          onChange: e => this.props.handleChange(e, \"item_\" + type + \"_\" + key + \"_\" + id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 35\n          }\n        }))));\n      }))));\n    })), type !== \"original\" && !checkboxes && /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        var lastIdx = this.props.addSection(type, \"New Section Name\");\n        var newState = this.getDefaultState();\n        newState[type + \"_keys\"][lastIdx] = 1;\n        this.setState(newState);\n      },\n      className: \"text-white ml-auto float-right\",\n      style: {\n        alignContent: \"right\",\n        fontSize: \"15px\",\n        marginRight: \"-16px\",\n        marginTop: \"-15px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, \"Add section\", /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n  hypothesesDisplay(hypo, hypo_info, type, idx) {\n    var stylecolor = idx % 2 ? {\n      backgroundColor: hypotheses_light_colour\n    } : {\n      backgroundColor: hypotheses_dark_colour\n    };\n    var showModal = /*#__PURE__*/React.createElement(React.Fragment, null); // console.log(type, hypo_info, type, idx);\n\n    if (type !== \"original\") {\n      // console.log(\"~~~~~~~~~~~~~~~\");\n      // console.log(this.props[type.toLowerCase() + \"h\"][hypo]);\n      // console.log(hypo);\n      // console.log(\"show modal is \");\n      // console.log(type == \"original\" ? false : this.state[type][idx]);\n      showModal = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n        size: \"small\",\n        style: {\n          marginRight: \"-15px\"\n        },\n        onClick: () => {\n          if (type == \"original\") return;\n          var newState = this.getDefaultState();\n          newState[type][idx] = 1;\n          this.setState(newState); // console.log(\"^^^^^^^^^we changed the state!\");\n          // console.log(newState[type][idx]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(HypothesisModal, {\n        show: type == \"original\" ? false : this.state[type][idx],\n        onHide: () => this.setState(this.getDefaultState()),\n        hypo: hypo,\n        idx: idx,\n        type: type,\n        table: this.tableRows(this.props[type], type, \"non-draggable\", false, true, hypo),\n        strategies: this.props[type.toLowerCase() + \"h\"][hypo][1],\n        rows: this.props[type.toLowerCase() + \"h\"][hypo][2],\n        handleStrategyChange: this.props.handleStrategyChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(Row, {\n      className: \"align-items-center ml-2\",\n      style: stylecolor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-icon-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"align-items-center\",\n      style: {\n        height: \"100%\",\n        width: \"30px\",\n        marginLeft: \"7px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 13\n      }\n    }, type == \"original\" && /*#__PURE__*/React.createElement(\"select\", {\n      defaultValue: hypo_info,\n      className: \"disabled-dropdown-arrow text-align-center pl-2\",\n      id: \"label_\" + type + idx,\n      style: {\n        border: \"0px\",\n        backgroundColor: \"white\",\n        width: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: hypo_info,\n      className: \"text-align-center pl-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 19\n      }\n    }, hypo_info)), type !== \"original\" && /*#__PURE__*/React.createElement(\"select\", {\n      style: {\n        border: \"0px\",\n        backgroundColor: \"white\"\n      },\n      defaultValue: this.props[type.toLowerCase() + \"h\"][hypo][0],\n      id: \"label_\" + type + idx,\n      onChange: e => this.props.handleLabelChange(e, type, idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"E\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 19\n      }\n    }, \"E\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"N\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 19\n      }\n    }, \"N\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 19\n      }\n    }, \"C\"))), /*#__PURE__*/React.createElement(Row, {\n      style: {\n        paddingTop: \"7px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 13\n      }\n    }, showModal)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n      className: \"input-with-icon\",\n      id: \"hypothesis_\" + type + idx,\n      type: \"textarea\",\n      defaultValue: hypo,\n      style: {\n        resize: \"none\",\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\n        borderColor: \"rgba(0, 0, 0, 0)\"\n      },\n      onChange: e => this.props.handleHypothesisChange(e, type, hypo),\n      contentEditable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  showView(type) {\n    const ohy = Object.keys(this.props.oh).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, this.props.oh[hypo], \"original\", idx);\n    });\n    var ah_items = Object.keys(this.props.ah).map(key => [key, this.props.ah[key]]);\n    ah_items.sort((first, second) => second[1][3] - first[1][3]); // console.log(ah_items);\n\n    const ahy = ah_items.map((hypo, idx) => {\n      // console.log(hypo);\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"A\", idx);\n    });\n    var bh_items = Object.keys(this.props.bh).map(key => [key, this.props.bh[key]]);\n    bh_items.sort((first, second) => second[1][3] - first[1][3]);\n    const bhy = bh_items.map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"B\", idx);\n    });\n    var ch_items = Object.keys(this.props.ch).map(key => [key, this.props.ch[key]]);\n    ch_items.sort((first, second) => second[1][3] - first[1][3]);\n    const chy = ch_items.map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"C\", idx);\n    });\n\n    if (type === \"drag\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          marginBottom: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 17\n        }\n      }, \"Original Table\")), this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          marginBottom: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 17\n        }\n      }, \"Table A\")), this.tableRows(this.props.A, \"A\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          marginBottom: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 17\n        }\n      }, \"Table B\")), this.tableRows(this.props.B, \"B\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          marginBottom: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 17\n        }\n      }, \"Table C\")), this.tableRows(this.props.C, \"C\"))), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          width: \"100%\",\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 17\n        }\n      }, \"Original Hypotheses\")), ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 17\n        }\n      }, \"Table A Hypotheses\")), ahy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 17\n        }\n      }, \"Table B Hypotheses\")), bhy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 17\n        }\n      }, \"Table C Hypotheses\")), chy)));\n    } else if (type === \"focusA\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 17\n        }\n      }, \"Original Table\")), this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 17\n        }\n      }, \"Table A\")), this.tableRows(this.props.A, \"A\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 17\n        }\n      }, \"Original Hypotheses\")), ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 17\n        }\n      }, \"Table A Hypotheses\")), ahy)));\n    } else if (type === \"focusB\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 17\n        }\n      }, \"Original Table\")), this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 17\n        }\n      }, \"Table B\")), this.tableRows(this.props.B, \"B\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 17\n        }\n      }, \"Original Hypotheses\")), ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 17\n        }\n      }, \"Table B Hypotheses\")), bhy)));\n    } else if (type === \"focusC\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 17\n        }\n      }, \"Original Table\")), this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 17\n        }\n      }, \"Table C\")), this.tableRows(this.props.C, \"C\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 17\n        }\n      }, \"Original Hypotheses\")), ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 17\n        }\n      }, \"Table C Hypotheses\")), chy)));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.showView(this.props.type));\n  }\n\n}\n\nView.defaultProps = {\n  A: {},\n  B: {},\n  C: {},\n  oh: {},\n  ah: {},\n  bh: {},\n  ch: {}\n};\nexport default View;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/View.js"],"names":["React","Component","Droppable","Draggable","Container","Row","Col","Form","Button","AddIcon","EditIcon","getListStyle","getItemStyle","IconButton","TextareaAutosize","HypothesisModal","KeyModal","grid","bgcolors_dict","original","A","B","C","trash","add","rowcolor","hypotheses_dark_colour","hypotheses_light_colour","View","constructor","props","tableRows","bind","showView","hypothesesDisplay","getDefaultState","state","a","Array","fill","b","c","a_rows","Object","keys","length","b_rows","c_rows","state_var","A_keys","B_keys","C_keys","isDraggingOver","type","bgcolor","background","padding","minWidth","minHeight","isDragging","draggableStyle","userSelect","margin","pairs","name","editable","checkboxes","hypo","map","key","key_idx","checkbox","toLowerCase","includes","handleRowChange","marginBottom","provided","snapshot","innerRef","droppableProps","display","whiteSpace","width","marginLeft","newState","setState","height","opacity","deleteSection","new_key","editSectionName","backgroundColor","value","id","draggableProps","dragHandleProps","style","resize","borderColor","e","handleChange","lastIdx","addSection","alignContent","fontSize","marginRight","marginTop","hypo_info","idx","stylecolor","showModal","handleStrategyChange","paddingTop","border","handleLabelChange","handleHypothesisChange","ohy","oh","ah_items","ah","sort","first","second","ahy","bh_items","bh","bhy","ch_items","ch","chy","paddingRight","render","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { getListStyle, getItemStyle } from \"./Colours\";\nimport { IconButton, TextareaAutosize } from \"@material-ui/core\";\nimport HypothesisModal from \"./HypothesisModal\";\nimport KeyModal from \"./KeyModal\";\n\nconst grid = 5;\n// for dark mode\n// const bgcolors_dict = {\n//   original: \"#DEB2F4\",\n//   A: \"#A4CDF0\",\n//   B: \"#A2DCE2\",\n//   C: \"#F9D3BC\",\n//   trash: \"#ccc5b4\",\n//   add: \"#ccc5b4\",\n// };\n\n// for light mode\nconst bgcolors_dict = {\n  original: \"#ca76f5\",\n  A: \"#5ca1db\",\n  B: \"#56d3e3\",\n  C: \"#ffae7d\",\n  trash: \"#ccc5b4\",\n  add: \"#ccc5b4\",\n};\nconst rowcolor = \"#edf1f2\";\nconst hypotheses_dark_colour = \"#92d5e6\";\nconst hypotheses_light_colour = \"#e1edf0\";\nclass View extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRows = this.tableRows.bind(this);\n    this.showView = this.showView.bind(this);\n    this.hypothesesDisplay = this.hypothesesDisplay.bind(this);\n    this.getDefaultState = this.getDefaultState.bind(this);\n    this.state = this.getDefaultState();\n  }\n\n  getDefaultState() {\n    let a = new Array(9).fill(0);\n    let b = new Array(9).fill(0);\n    let c = new Array(9).fill(0);\n\n    let a_rows = new Array(Object.keys(this.props.A).length).fill(0);\n    let b_rows = new Array(Object.keys(this.props.B).length).fill(0);\n    let c_rows = new Array(Object.keys(this.props.C).length).fill(0);\n\n    let state_var = {\n      A: a,\n      B: b,\n      C: c,\n      A_keys: a_rows,\n      B_keys: b_rows,\n      C_keys: c_rows,\n    };\n    return state_var;\n  }\n  getListStyle(isDraggingOver, type) {\n    const bgcolor = bgcolors_dict[type];\n    return {\n      background: isDraggingOver ? \"#f5eef8\" : bgcolor,\n      padding: grid,\n      minWidth: \"250px\",\n      minHeight: \"50px\",\n    };\n  }\n  getItemStyle(isDragging, draggableStyle) {\n    return {\n      // some basic styles to make the items look a bit nicer\n      userSelect: \"none\",\n      padding: grid * 2,\n      margin: `0 0 ${grid}px 0`,\n\n      // change background colour if dragging\n      background: isDragging ? \"lightgreen\" : rowcolor,\n\n      // styles we need to apply on draggables\n      ...draggableStyle,\n    };\n  }\n  tableRows(\n    pairs,\n    type,\n    name = \"draggable\",\n    editable = true,\n    checkboxes = false,\n    hypo\n  ) {\n    return (\n      <>\n        {\" \"}\n        <Container>\n          {Object.keys(pairs).map((key, key_idx) => {\n            var checkbox = key;\n            // console.log(\"$$$$$$$$$$$$$$\");\n            // console.log(this.props);\n            // console.log(type, hypo);\n            if (checkboxes === true) {\n              checkbox = (\n                <Form>\n                  <Form.Check\n                    custom\n                    type={\"checkbox\"}\n                    defaultChecked={\n                      this.props[type.toLowerCase() + \"h\"][hypo][2].includes(\n                        key\n                      )\n                        ? true\n                        : false\n                    }\n                    id={type + \"_check_\" + key}\n                    label={key}\n                    className=\"checkbox label\"\n                    onChange={() => {\n                      this.props.handleRowChange(type, key, hypo);\n                    }}\n                  />\n                </Form>\n              );\n            }\n\n            return (\n              <Container style={{ marginBottom: \"20px\" }}>\n                <Droppable droppableId={type + \"_\" + key}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      style={this.getListStyle(snapshot.isDraggingOver, type)}\n                      {...provided.droppableProps}\n                    >\n                      {!checkboxes && (\n                        <div\n                          style={{\n                            display: \"inline-block\",\n                            whiteSpace: \"nowrap\",\n                            width: \"100%\",\n                          }}\n                        >\n                          {\" \"}\n                          <center>\n                            <strong>{checkbox}</strong>{\" \"}\n                            <IconButton\n                              size=\"small\"\n                              style={{ marginLeft: \"auto\" }}\n                              onClick={() => {\n                                var newState = this.getDefaultState();\n                                newState[type + \"_keys\"][key_idx] = 1;\n                                this.setState(newState);\n                              }}\n                            >\n                              {type !== \"original\" && (\n                                <EditIcon\n                                  className=\"float-right\"\n                                  style={{\n                                    width: \"15px\",\n                                    height: \"15px\",\n                                    opacity: \"0.5\",\n                                  }}\n                                />\n                              )}\n                            </IconButton>\n                            {type !== \"original\" && (\n                              <KeyModal\n                                show={this.state[type + \"_keys\"][key_idx]}\n                                onHide={() =>\n                                  this.setState(this.getDefaultState())\n                                }\n                                onDelete={(type, key) => {\n                                  this.props.deleteSection(type, key);\n                                }}\n                                onEdit={(new_key) => {\n                                  this.props.editSectionName(\n                                    type,\n                                    key,\n                                    new_key\n                                  );\n                                }}\n                                section_name={key}\n                                type={type}\n                              />\n                            )}\n                          </center>\n                        </div>\n                      )}\n                      {checkboxes && (\n                        <div\n                          style={{\n                            backgroundColor: bgcolors_dict[type],\n                            marginLeft: \"20px\",\n                          }}\n                        >\n                          <strong>{checkbox}</strong>\n                        </div>\n                      )}\n                      {pairs[key].map((value, id) => {\n                        // console.log(\"value is ^^^^^\");\n                        // console.log(value);\n                        return (\n                          <Draggable\n                            draggableId={type + \"_\" + key + \"_\" + id}\n                            index={id}\n                            className=\"draggable\"\n                          >\n                            {(provided, snapshot) => (\n                              <div\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                style={this.getItemStyle(\n                                  snapshot.isDragging,\n                                  provided.draggableProps.style\n                                )}\n                              >\n                                <Row>\n                                  <TextareaAutosize\n                                    style={{\n                                      marginLeft: \"20px\",\n                                      background: \"transparent\",\n                                      resize: \"none\",\n                                      backgroundColor: \"rgba(0, 0, 0, 0)\",\n                                      borderColor: \"rgba(0, 0, 0, 0)\",\n                                    }}\n                                    name={name}\n                                    id={\"item_\" + type + \"_\" + key + \"_\" + id}\n                                    value={\n                                      type === \"original\"\n                                        ? value\n                                        : Object.keys(value)[0]\n                                    }\n                                    onChange={(e) =>\n                                      this.props.handleChange(\n                                        e,\n                                        \"item_\" + type + \"_\" + key + \"_\" + id\n                                      )\n                                    }\n                                  />\n                                </Row>\n                              </div>\n                            )}\n                          </Draggable>\n                        );\n                      })}\n                    </div>\n                  )}\n                </Droppable>\n              </Container>\n            );\n          })}\n        </Container>\n        {type !== \"original\" && !checkboxes && (\n          <Container>\n            {\" \"}\n            <Row>\n              <div className=\"float-right\" style={{ width: \"100%\" }}>\n                <Button\n                  onClick={() => {\n                    var lastIdx = this.props.addSection(\n                      type,\n                      \"New Section Name\"\n                    );\n                    var newState = this.getDefaultState();\n                    newState[type + \"_keys\"][lastIdx] = 1;\n                    this.setState(newState);\n                  }}\n                  className=\"text-white ml-auto float-right\"\n                  style={{\n                    alignContent: \"right\",\n                    fontSize: \"15px\",\n                    marginRight: \"-16px\",\n                    marginTop: \"-15px\",\n                  }}\n                >\n                  Add section\n                  <AddIcon />\n                </Button>\n              </div>\n            </Row>\n          </Container>\n        )}\n      </>\n    );\n  }\n\n  hypothesesDisplay(hypo, hypo_info, type, idx) {\n    var stylecolor =\n      idx % 2\n        ? { backgroundColor: hypotheses_light_colour }\n        : { backgroundColor: hypotheses_dark_colour };\n\n    var showModal = <></>;\n    // console.log(type, hypo_info, type, idx);\n    if (type !== \"original\") {\n      // console.log(\"~~~~~~~~~~~~~~~\");\n      // console.log(this.props[type.toLowerCase() + \"h\"][hypo]);\n      // console.log(hypo);\n      // console.log(\"show modal is \");\n      // console.log(type == \"original\" ? false : this.state[type][idx]);\n      showModal = (\n        <>\n          <IconButton\n            size=\"small\"\n            style={{ marginRight: \"-15px\" }}\n            onClick={() => {\n              if (type == \"original\") return;\n              var newState = this.getDefaultState();\n              newState[type][idx] = 1;\n              this.setState(newState);\n              // console.log(\"^^^^^^^^^we changed the state!\");\n              // console.log(newState[type][idx]);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n          <HypothesisModal\n            show={type == \"original\" ? false : this.state[type][idx]}\n            onHide={() => this.setState(this.getDefaultState())}\n            hypo={hypo}\n            idx={idx}\n            type={type}\n            table={this.tableRows(\n              this.props[type],\n              type,\n              \"non-draggable\",\n              false,\n              true,\n              hypo\n            )}\n            strategies={this.props[type.toLowerCase() + \"h\"][hypo][1]}\n            rows={this.props[type.toLowerCase() + \"h\"][hypo][2]}\n            handleStrategyChange={this.props.handleStrategyChange}\n          />\n        </>\n      );\n    }\n    return (\n      <Row className=\"align-items-center ml-2\" style={stylecolor}>\n        <div className=\"input-icon-wrap\">\n          <Col\n            className=\"align-items-center\"\n            style={{ height: \"100%\", width: \"30px\", marginLeft: \"7px\" }}\n          >\n            <Row style={{ paddingTop: \"20px\" }}>\n              {type == \"original\" && (\n                <select\n                  defaultValue={hypo_info}\n                  className=\"disabled-dropdown-arrow text-align-center pl-2\"\n                  id={\"label_\" + type + idx}\n                  style={{\n                    border: \"0px\",\n                    backgroundColor: \"white\",\n                    width: \"40px\",\n                  }}\n                >\n                  <option value={hypo_info} className=\"text-align-center pl-2\">\n                    {hypo_info}\n                  </option>\n                </select>\n              )}\n              {type !== \"original\" && (\n                <select\n                  style={{ border: \"0px\", backgroundColor: \"white\" }}\n                  defaultValue={this.props[type.toLowerCase() + \"h\"][hypo][0]}\n                  id={\"label_\" + type + idx}\n                  onChange={(e) => this.props.handleLabelChange(e, type, idx)}\n                >\n                  <option value=\"E\">E</option>\n                  <option value=\"N\">N</option>\n                  <option value=\"C\">C</option>\n                </select>\n              )}\n            </Row>\n            <Row style={{ paddingTop: \"7px\" }}>{showModal}</Row>\n          </Col>\n          <Col>\n            <TextareaAutosize\n              className=\"input-with-icon\"\n              id={\"hypothesis_\" + type + idx}\n              type=\"textarea\"\n              defaultValue={hypo}\n              style={{\n                resize: \"none\",\n                backgroundColor: \"rgba(0, 0, 0, 0)\",\n                borderColor: \"rgba(0, 0, 0, 0)\",\n              }}\n              onChange={(e) => this.props.handleHypothesisChange(e, type, hypo)}\n              contentEditable\n            />\n          </Col>\n        </div>\n      </Row>\n    );\n  }\n\n  showView(type) {\n    const ohy = Object.keys(this.props.oh).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, this.props.oh[hypo], \"original\", idx);\n    });\n    var ah_items = Object.keys(this.props.ah).map((key) => [\n      key,\n      this.props.ah[key],\n    ]);\n    ah_items.sort((first, second) => second[1][3] - first[1][3]);\n    // console.log(ah_items);\n    const ahy = ah_items.map((hypo, idx) => {\n      // console.log(hypo);\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"A\", idx);\n    });\n    var bh_items = Object.keys(this.props.bh).map((key) => [\n      key,\n      this.props.bh[key],\n    ]);\n    bh_items.sort((first, second) => second[1][3] - first[1][3]);\n    const bhy = bh_items.map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"B\", idx);\n    });\n    var ch_items = Object.keys(this.props.ch).map((key) => [\n      key,\n      this.props.ch[key],\n    ]);\n    ch_items.sort((first, second) => second[1][3] - first[1][3]);\n    const chy = ch_items.map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"C\", idx);\n    });\n    if (type === \"drag\") {\n      return (\n        <>\n          <Row>\n            <Col md={3} style={{ marginBottom: \"15px\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Table</h5>\n              </Row>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={3} style={{ marginBottom: \"15px\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table A</h5>\n              </Row>\n              {this.tableRows(this.props.A, \"A\")}\n            </Col>\n            <Col md={3} style={{ marginBottom: \"15px\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table B</h5>\n              </Row>\n              {this.tableRows(this.props.B, \"B\")}\n            </Col>\n            <Col md={3} style={{ marginBottom: \"15px\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table C</h5>\n              </Row>\n              {this.tableRows(this.props.C, \"C\")}\n            </Col>\n          </Row>\n          <Row style={{ marginLeft: \"10px\" }}>\n            <Col md={3} style={{ width: \"100%\", paddingRight: \"10px\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h6>Original Hypotheses</h6>\n              </Row>\n              {ohy}\n            </Col>\n            <Col md={3} style={{ width: \"100%\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h6>Table A Hypotheses</h6>\n              </Row>\n              {ahy}\n            </Col>\n            <Col md={3} style={{ width: \"100%\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h6>Table B Hypotheses</h6>\n              </Row>\n              {bhy}\n            </Col>\n            <Col md={3} style={{ width: \"100%\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h6>Table C Hypotheses</h6>\n              </Row>\n              {chy}\n            </Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusA\") {\n      return (\n        <>\n          <Row className=\"mt-3\">\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Table</h5>\n              </Row>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table A</h5>\n              </Row>\n              {this.tableRows(this.props.A, \"A\")}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Hypotheses</h5>\n              </Row>\n              {ohy}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table A Hypotheses</h5>\n              </Row>\n              {ahy}\n            </Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusB\") {\n      return (\n        <>\n          <Row className=\"mt-3\">\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Table</h5>\n              </Row>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table B</h5>\n              </Row>\n              {this.tableRows(this.props.B, \"B\")}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Hypotheses</h5>\n              </Row>\n              {ohy}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table B Hypotheses</h5>\n              </Row>\n              {bhy}\n            </Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusC\") {\n      return (\n        <>\n          <Row className=\"mt-3\">\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Table</h5>\n              </Row>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table C</h5>\n              </Row>\n              {this.tableRows(this.props.C, \"C\")}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Hypotheses</h5>\n              </Row>\n              {ohy}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table C Hypotheses</h5>\n              </Row>\n              {chy}\n            </Col>\n          </Row>\n        </>\n      );\n    }\n  }\n\n  render() {\n    return <>{this.showView(this.props.type)}</>;\n  }\n}\n\nView.defaultProps = {\n  A: {},\n  B: {},\n  C: {},\n  oh: {},\n  ah: {},\n  bh: {},\n  ch: {},\n};\n\nexport default View;\n"]},"metadata":{},"sourceType":"module"}