{"ast":null,"code":"export const header_tabs = {\n  main: \"#0C79FA\",\n  A: \"#0C79FA\",\n  B: \"#0C79FA\",\n  C: \"#0C79FA\"\n};\nconst grid = 5; // for dark mode\n\nconst bgcolors_dict = {\n  original: \"#DEB2F4\",\n  A: \"#A4CDF0\",\n  B: \"#A2DCE2\",\n  C: \"#F9D3BC\",\n  trash: \"#ccc5b4\",\n  add: \"#ccc5b4\"\n}; // for light mode\n// const bgcolors_dict = {\n//   original: \"#ca76f5\",\n//   A: \"#5ca1db\",\n//   B: \"#56d3e3\",\n//   C: \"#ffae7d\",\n//   trash: \"#ccc5b4\",\n//   add: \"#ccc5b4\",\n// };\n\nconst rowcolor = \"#edf1f2\";\nconst hypotheses_dark_colour = \"#92d5e6\";\nconst hypotheses_light_colour = \"#e1edf0\";\nexport function getListStyle(isDraggingOver, type) {\n  const bgcolor = bgcolors_dict[type];\n  return {\n    background: isDraggingOver ? \"#f5eef8\" : bgcolor,\n    padding: grid,\n    minWidth: \"250px\",\n    minHeight: \"50px\"\n  };\n}\nexport function getItemStyle(isDragging, draggableStyle) {\n  return {\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : rowcolor,\n    // styles we need to apply on draggables\n    ...draggableStyle\n  };\n}","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/Colours.js"],"names":["header_tabs","main","A","B","C","grid","bgcolors_dict","original","trash","add","rowcolor","hypotheses_dark_colour","hypotheses_light_colour","getListStyle","isDraggingOver","type","bgcolor","background","padding","minWidth","minHeight","getItemStyle","isDragging","draggableStyle","userSelect","margin"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG;AACzBC,EAAAA,IAAI,EAAE,SADmB;AAEzBC,EAAAA,CAAC,EAAE,SAFsB;AAGzBC,EAAAA,CAAC,EAAE,SAHsB;AAIzBC,EAAAA,CAAC,EAAE;AAJsB,CAApB;AAOP,MAAMC,IAAI,GAAG,CAAb,C,CAEA;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,SADU;AAEpBL,EAAAA,CAAC,EAAE,SAFiB;AAGpBC,EAAAA,CAAC,EAAE,SAHiB;AAIpBC,EAAAA,CAAC,EAAE,SAJiB;AAKpBI,EAAAA,KAAK,EAAE,SALa;AAMpBC,EAAAA,GAAG,EAAE;AANe,CAAtB,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,SAAjB;AACA,MAAMC,sBAAsB,GAAG,SAA/B;AACA,MAAMC,uBAAuB,GAAG,SAAhC;AAEA,OAAO,SAASC,YAAT,CAAsBC,cAAtB,EAAsCC,IAAtC,EAA4C;AACjD,QAAMC,OAAO,GAAGV,aAAa,CAACS,IAAD,CAA7B;AACA,SAAO;AACLE,IAAAA,UAAU,EAAEH,cAAc,GAAG,SAAH,GAAeE,OADpC;AAELE,IAAAA,OAAO,EAAEb,IAFJ;AAGLc,IAAAA,QAAQ,EAAE,OAHL;AAILC,IAAAA,SAAS,EAAE;AAJN,GAAP;AAMD;AAED,OAAO,SAASC,YAAT,CAAsBC,UAAtB,EAAkCC,cAAlC,EAAkD;AACvD,SAAO;AACL;AACAC,IAAAA,UAAU,EAAE,MAFP;AAGLN,IAAAA,OAAO,EAAEb,IAAI,GAAG,CAHX;AAILoB,IAAAA,MAAM,EAAG,OAAMpB,IAAK,MAJf;AAML;AACAY,IAAAA,UAAU,EAAEK,UAAU,GAAG,YAAH,GAAkBZ,QAPnC;AASL;AACA,OAAGa;AAVE,GAAP;AAYD","sourcesContent":["export const header_tabs = {\n  main: \"#0C79FA\",\n  A: \"#0C79FA\",\n  B: \"#0C79FA\",\n  C: \"#0C79FA\",\n};\n\nconst grid = 5;\n\n// for dark mode\nconst bgcolors_dict = {\n  original: \"#DEB2F4\",\n  A: \"#A4CDF0\",\n  B: \"#A2DCE2\",\n  C: \"#F9D3BC\",\n  trash: \"#ccc5b4\",\n  add: \"#ccc5b4\",\n};\n\n// for light mode\n// const bgcolors_dict = {\n//   original: \"#ca76f5\",\n//   A: \"#5ca1db\",\n//   B: \"#56d3e3\",\n//   C: \"#ffae7d\",\n//   trash: \"#ccc5b4\",\n//   add: \"#ccc5b4\",\n// };\n\nconst rowcolor = \"#edf1f2\";\nconst hypotheses_dark_colour = \"#92d5e6\";\nconst hypotheses_light_colour = \"#e1edf0\";\n\nexport function getListStyle(isDraggingOver, type) {\n  const bgcolor = bgcolors_dict[type];\n  return {\n    background: isDraggingOver ? \"#f5eef8\" : bgcolor,\n    padding: grid,\n    minWidth: \"250px\",\n    minHeight: \"50px\",\n  };\n}\n\nexport function getItemStyle(isDragging, draggableStyle) {\n  return {\n    // some basic styles to make the items look a bit nicer\n    userSelect: \"none\",\n    padding: grid * 2,\n    margin: `0 0 ${grid}px 0`,\n\n    // change background colour if dragging\n    background: isDragging ? \"lightgreen\" : rowcolor,\n\n    // styles we need to apply on draggables\n    ...draggableStyle,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}