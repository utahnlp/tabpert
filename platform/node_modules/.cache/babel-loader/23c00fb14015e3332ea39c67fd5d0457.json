{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    '@media print': {\n      // Use !important to override the Modal inline-style.\n      position: 'absolute !important'\n    }\n  },\n\n  /* Styles applied to the container element if `scroll=\"paper\"`. */\n  scrollPaper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the container element if `scroll=\"body\"`. */\n  scrollBody: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    textAlign: 'center',\n    '&:after': {\n      content: '\"\"',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      height: '100%',\n      width: '0'\n    }\n  },\n\n  /* Styles applied to the container element. */\n  container: {\n    height: '100%',\n    '@media print': {\n      height: 'auto'\n    },\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  },\n\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    margin: 32,\n    position: 'relative',\n    overflowY: 'auto',\n    // Fix IE11 issue, to remove at some point.\n    '@media print': {\n      overflowY: 'visible',\n      boxShadow: 'none'\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n  paperScrollPaper: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n  paperScrollBody: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    textAlign: 'left' // 'initial' doesn't work on IE11\n\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=false`. */\n  paperWidthFalse: {\n    maxWidth: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n  paperWidthXs: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n  paperWidthSm: {\n    maxWidth: theme.breakpoints.values.sm,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n  paperWidthMd: {\n    maxWidth: theme.breakpoints.values.md,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n  paperWidthLg: {\n    maxWidth: theme.breakpoints.values.lg,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n  paperWidthXl: {\n    maxWidth: theme.breakpoints.values.xl,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n  paperFullWidth: {\n    width: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n  paperFullScreen: {\n    margin: 0,\n    width: '100%',\n    maxWidth: '100%',\n    height: '100%',\n    maxHeight: 'none',\n    borderRadius: 0,\n    '&$paperScrollBody': {\n      margin: 0,\n      maxWidth: '100%'\n    }\n  }\n});\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  const {\n    BackdropProps,\n    children,\n    classes,\n    className,\n    disableBackdropClick = false,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    onEscapeKeyDown,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps,\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledby\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[`scroll${capitalize(scroll)}`]),\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[`paperScroll${capitalize(scroll)}`], classes[`paperWidth${capitalize(String(maxWidth))}`], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   * @default false\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Dialog/Dialog.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","capitalize","Modal","Backdrop","Fade","duration","Paper","styles","theme","root","position","scrollPaper","display","justifyContent","alignItems","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","height","width","container","outline","paper","margin","boxShadow","paperScrollPaper","flexDirection","maxHeight","paperScrollBody","paperWidthFalse","maxWidth","paperWidthXs","Math","max","breakpoints","values","xs","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","paperFullWidth","paperFullScreen","borderRadius","defaultTransitionDuration","enter","enteringScreen","exit","leavingScreen","Dialog","forwardRef","props","ref","BackdropProps","children","classes","className","disableBackdropClick","disableEscapeKeyDown","fullScreen","fullWidth","onBackdropClick","onClose","onEscapeKeyDown","open","PaperComponent","PaperProps","scroll","TransitionComponent","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","other","backdropClick","useRef","handleMouseDown","event","current","target","currentTarget","handleBackdropClick","createElement","BackdropComponent","closeAfterTransition","onClick","appear","in","timeout","role","onMouseDown","elevation","String","process","env","NODE_ENV","propTypes","string","object","node","bool","oneOf","func","isRequired","elementType","oneOfType","number","shape","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    '@media print': {\n      // Use !important to override the Modal inline-style.\n      position: 'absolute !important'\n    }\n  },\n\n  /* Styles applied to the container element if `scroll=\"paper\"`. */\n  scrollPaper: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the container element if `scroll=\"body\"`. */\n  scrollBody: {\n    overflowY: 'auto',\n    overflowX: 'hidden',\n    textAlign: 'center',\n    '&:after': {\n      content: '\"\"',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      height: '100%',\n      width: '0'\n    }\n  },\n\n  /* Styles applied to the container element. */\n  container: {\n    height: '100%',\n    '@media print': {\n      height: 'auto'\n    },\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0\n  },\n\n  /* Styles applied to the `Paper` component. */\n  paper: {\n    margin: 32,\n    position: 'relative',\n    overflowY: 'auto',\n    // Fix IE11 issue, to remove at some point.\n    '@media print': {\n      overflowY: 'visible',\n      boxShadow: 'none'\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n  paperScrollPaper: {\n    display: 'flex',\n    flexDirection: 'column',\n    maxHeight: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n  paperScrollBody: {\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    textAlign: 'left' // 'initial' doesn't work on IE11\n\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=false`. */\n  paperWidthFalse: {\n    maxWidth: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n  paperWidthXs: {\n    maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n  paperWidthSm: {\n    maxWidth: theme.breakpoints.values.sm,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n  paperWidthMd: {\n    maxWidth: theme.breakpoints.values.md,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n  paperWidthLg: {\n    maxWidth: theme.breakpoints.values.lg,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n  paperWidthXl: {\n    maxWidth: theme.breakpoints.values.xl,\n    '&$paperScrollBody': {\n      [theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2)]: {\n        maxWidth: 'calc(100% - 64px)'\n      }\n    }\n  },\n\n  /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n  paperFullWidth: {\n    width: 'calc(100% - 64px)'\n  },\n\n  /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n  paperFullScreen: {\n    margin: 0,\n    width: '100%',\n    maxWidth: '100%',\n    height: '100%',\n    maxHeight: 'none',\n    borderRadius: 0,\n    '&$paperScrollBody': {\n      margin: 0,\n      maxWidth: '100%'\n    }\n  }\n});\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  const {\n    BackdropProps,\n    children,\n    classes,\n    className,\n    disableBackdropClick = false,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    onEscapeKeyDown,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps,\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledby\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[`scroll${capitalize(scroll)}`]),\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[`paperScroll${capitalize(scroll)}`], classes[`paperWidth${capitalize(String(maxWidth))}`], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   * @default false\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);"]},"metadata":{},"sourceType":"module"}