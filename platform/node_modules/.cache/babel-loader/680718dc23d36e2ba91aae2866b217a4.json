{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport Menu from '../Menu/Menu';\nimport { isFilled } from '../InputBase/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\n\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n/**\n * @ignore - internal component.\n */\n\n\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  const {\n    'aria-label': ariaLabel,\n    autoFocus,\n    autoWidth,\n    children,\n    classes,\n    className,\n    defaultValue,\n    disabled,\n    displayEmpty,\n    IconComponent,\n    inputRef: inputRefProp,\n    labelId,\n    MenuProps = {},\n    multiple,\n    name,\n    onBlur,\n    onChange,\n    onClose,\n    onFocus,\n    onOpen,\n    open: openProp,\n    readOnly,\n    renderValue,\n    SelectDisplayProps = {},\n    tabIndex: tabIndexProp,\n    value: valueProp,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"classes\", \"className\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\n\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const [openState, setOpenState] = React.useState(false);\n  const handleRef = useForkRef(ref, inputRefProp);\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayNode.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [displayNode, value]);\n  React.useEffect(() => {\n    if (autoFocus && displayNode) {\n      displayNode.focus();\n    }\n  }, [autoFocus, displayNode]);\n  React.useEffect(() => {\n    if (displayNode) {\n      const label = ownerDocument(displayNode).getElementById(labelId);\n\n      if (label) {\n        const handler = () => {\n          if (getSelection().isCollapsed) {\n            displayNode.focus();\n          }\n        };\n\n        label.addEventListener('click', handler);\n        return () => {\n          label.removeEventListener('click', handler);\n        };\n      }\n    }\n\n    return undefined;\n  }, [labelId, displayNode]);\n\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    } // Hijack the default focus behavior.\n\n\n    event.preventDefault();\n    displayNode.focus();\n    update(true, event);\n  };\n\n  const handleClose = event => {\n    update(false, event);\n  };\n\n  const childrenArray = React.Children.toArray(children); // Support autofill.\n\n  const handleChange = event => {\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\n\n    if (index === -1) {\n      return;\n    }\n\n    const child = childrenArray[index];\n    setValueState(child.props.value);\n\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n\n  const handleItemClick = child => event => {\n    let newValue;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n\n    if (value !== newValue) {\n      setValueState(newValue);\n\n      if (onChange) {\n        event.persist(); // Preact support, target is read only property on a native event.\n\n        Object.defineProperty(event, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(event, child);\n      }\n    }\n\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n\n  const open = displayNode !== null && (isOpenControlled ? openProp : openState);\n\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      event.persist(); // Preact support, target is read only property on a native event.\n\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    let selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n\n      selected = value.some(v => areEqualValues(v, child.props.value));\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    if (selected) {\n      foundMatch = true;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : undefined,\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`Material-UI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n\n  if (computeDisplay) {\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\n  } // Avoid performing a layout computation in the render method.\n\n\n  let menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = displayNode.clientWidth;\n  }\n\n  let tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: setDisplayNode,\n    tabIndex: tabIndex,\n    role: \"button\",\n    \"aria-disabled\": disabled ? 'true' : undefined,\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-haspopup\": \"listbox\",\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n    onKeyDown: handleKeyDown,\n    onMouseDown: disabled || readOnly ? null : handleMouseDown,\n    onBlur: handleBlur,\n    onFocus: onFocus\n  }, SelectDisplayProps, {\n    className: clsx(classes.root, // TODO v5: merge root and select\n    classes.select, classes.selectMenu, classes[variant], className, SelectDisplayProps.className, disabled && classes.disabled) // The id is required for proper a11y\n    ,\n    id: buttonId\n  }), isEmpty(display) ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : display), /*#__PURE__*/React.createElement(\"input\", _extends({\n    value: Array.isArray(value) ? value.join(',') : value,\n    name: name,\n    ref: inputRef,\n    \"aria-hidden\": true,\n    onChange: handleChange,\n    tabIndex: -1,\n    className: classes.nativeInput,\n    autoFocus: autoFocus\n  }, other)), /*#__PURE__*/React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[`icon${capitalize(variant)}`], open && classes.iconOpen, disabled && classes.disabled)\n  }), /*#__PURE__*/React.createElement(Menu, _extends({\n    id: `menu-${name || ''}`,\n    anchorEl: displayNode,\n    open: open,\n    onClose: handleClose\n  }, MenuProps, {\n    MenuListProps: _extends({\n      'aria-labelledby': labelId,\n      role: 'listbox',\n      disableListWrap: true\n    }, MenuProps.MenuListProps),\n    PaperProps: _extends({}, MenuProps.PaperProps, {\n      style: _extends({\n        minWidth: menuMinWidth\n      }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n    })\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the select will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n\n  /**\n   * The ID of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control `select` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Select/SelectInput.js"],"names":["_extends","_objectWithoutPropertiesLoose","formatMuiErrorMessage","_formatMuiErrorMessage","React","isFragment","PropTypes","clsx","refType","ownerDocument","capitalize","Menu","isFilled","useForkRef","useControlled","areEqualValues","a","b","String","isEmpty","display","trim","SelectInput","forwardRef","props","ref","ariaLabel","autoFocus","autoWidth","children","classes","className","defaultValue","disabled","displayEmpty","IconComponent","inputRef","inputRefProp","labelId","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","open","openProp","readOnly","renderValue","SelectDisplayProps","tabIndex","tabIndexProp","value","valueProp","variant","other","setValueState","controlled","default","useRef","displayNode","setDisplayNode","useState","current","isOpenControlled","menuMinWidthState","setMenuMinWidthState","openState","setOpenState","handleRef","useImperativeHandle","focus","node","useEffect","label","getElementById","handler","getSelection","isCollapsed","addEventListener","removeEventListener","undefined","update","event","clientWidth","handleMouseDown","button","preventDefault","handleClose","childrenArray","Children","toArray","handleChange","index","map","child","indexOf","target","handleItemClick","newValue","Array","isArray","slice","itemIndex","push","splice","onClick","persist","Object","defineProperty","writable","handleKeyDown","validKeys","key","handleBlur","displaySingle","displayMultiple","computeDisplay","foundMatch","items","isValidElement","process","env","NODE_ENV","console","error","join","selected","Error","some","v","cloneElement","onKeyUp","role","values","warn","filter","x","menuMinWidth","buttonId","id","createElement","Fragment","Boolean","onKeyDown","onMouseDown","root","select","selectMenu","dangerouslySetInnerHTML","__html","nativeInput","icon","iconOpen","anchorEl","MenuListProps","disableListWrap","PaperProps","style","minWidth","propTypes","string","bool","object","isRequired","any","elementType","func","oneOfType","number","type","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport Menu from '../Menu/Menu';\nimport { isFilled } from '../InputBase/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\n\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n/**\n * @ignore - internal component.\n */\n\n\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  const {\n    'aria-label': ariaLabel,\n    autoFocus,\n    autoWidth,\n    children,\n    classes,\n    className,\n    defaultValue,\n    disabled,\n    displayEmpty,\n    IconComponent,\n    inputRef: inputRefProp,\n    labelId,\n    MenuProps = {},\n    multiple,\n    name,\n    onBlur,\n    onChange,\n    onClose,\n    onFocus,\n    onOpen,\n    open: openProp,\n    readOnly,\n    renderValue,\n    SelectDisplayProps = {},\n    tabIndex: tabIndexProp,\n    value: valueProp,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"classes\", \"className\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\n\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const [openState, setOpenState] = React.useState(false);\n  const handleRef = useForkRef(ref, inputRefProp);\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayNode.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [displayNode, value]);\n  React.useEffect(() => {\n    if (autoFocus && displayNode) {\n      displayNode.focus();\n    }\n  }, [autoFocus, displayNode]);\n  React.useEffect(() => {\n    if (displayNode) {\n      const label = ownerDocument(displayNode).getElementById(labelId);\n\n      if (label) {\n        const handler = () => {\n          if (getSelection().isCollapsed) {\n            displayNode.focus();\n          }\n        };\n\n        label.addEventListener('click', handler);\n        return () => {\n          label.removeEventListener('click', handler);\n        };\n      }\n    }\n\n    return undefined;\n  }, [labelId, displayNode]);\n\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    } // Hijack the default focus behavior.\n\n\n    event.preventDefault();\n    displayNode.focus();\n    update(true, event);\n  };\n\n  const handleClose = event => {\n    update(false, event);\n  };\n\n  const childrenArray = React.Children.toArray(children); // Support autofill.\n\n  const handleChange = event => {\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\n\n    if (index === -1) {\n      return;\n    }\n\n    const child = childrenArray[index];\n    setValueState(child.props.value);\n\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n\n  const handleItemClick = child => event => {\n    let newValue;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n\n    if (value !== newValue) {\n      setValueState(newValue);\n\n      if (onChange) {\n        event.persist(); // Preact support, target is read only property on a native event.\n\n        Object.defineProperty(event, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(event, child);\n      }\n    }\n\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n\n  const open = displayNode !== null && (isOpenControlled ? openProp : openState);\n\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      event.persist(); // Preact support, target is read only property on a native event.\n\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    let selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n\n      selected = value.some(v => areEqualValues(v, child.props.value));\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    if (selected) {\n      foundMatch = true;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : undefined,\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`Material-UI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n\n  if (computeDisplay) {\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\n  } // Avoid performing a layout computation in the render method.\n\n\n  let menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = displayNode.clientWidth;\n  }\n\n  let tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: setDisplayNode,\n    tabIndex: tabIndex,\n    role: \"button\",\n    \"aria-disabled\": disabled ? 'true' : undefined,\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-haspopup\": \"listbox\",\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n    onKeyDown: handleKeyDown,\n    onMouseDown: disabled || readOnly ? null : handleMouseDown,\n    onBlur: handleBlur,\n    onFocus: onFocus\n  }, SelectDisplayProps, {\n    className: clsx(classes.root, // TODO v5: merge root and select\n    classes.select, classes.selectMenu, classes[variant], className, SelectDisplayProps.className, disabled && classes.disabled) // The id is required for proper a11y\n    ,\n    id: buttonId\n  }), isEmpty(display) ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : display), /*#__PURE__*/React.createElement(\"input\", _extends({\n    value: Array.isArray(value) ? value.join(',') : value,\n    name: name,\n    ref: inputRef,\n    \"aria-hidden\": true,\n    onChange: handleChange,\n    tabIndex: -1,\n    className: classes.nativeInput,\n    autoFocus: autoFocus\n  }, other)), /*#__PURE__*/React.createElement(IconComponent, {\n    className: clsx(classes.icon, classes[`icon${capitalize(variant)}`], open && classes.iconOpen, disabled && classes.disabled)\n  }), /*#__PURE__*/React.createElement(Menu, _extends({\n    id: `menu-${name || ''}`,\n    anchorEl: displayNode,\n    open: open,\n    onClose: handleClose\n  }, MenuProps, {\n    MenuListProps: _extends({\n      'aria-labelledby': labelId,\n      role: 'listbox',\n      disableListWrap: true\n    }, MenuProps.MenuListProps),\n    PaperProps: _extends({}, MenuProps.PaperProps, {\n      style: _extends({\n        minWidth: menuMinWidth\n      }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n    })\n  }), items));\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the select will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n\n  /**\n   * The ID of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control `select` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;"]},"metadata":{},"sourceType":"module"}