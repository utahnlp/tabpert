{"ast":null,"code":"var _jsxFileName = \"/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/View.js\";\nimport React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nclass View extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRows = this.tableRows.bind(this);\n    this.showView = this.showView.bind(this);\n    this.hypothesesDisplay = this.hypothesesDisplay.bind(this);\n  }\n\n  tableRows(pairs, type) {\n    console.log(pairs);\n    return Object.keys(pairs).map(key => {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }\n      }, key)), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: type + \"_\" + key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }\n      }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef\n      }, provided.droppableProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 19\n        }\n      }), pairs[key].map((value, id) => {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          draggableId: type + \"_\" + key + \"_\" + id,\n          index: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }\n        }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 31\n          }\n        }, value)));\n      }))))));\n    });\n  }\n\n  hypothesesDisplay(pairs, type) {\n    console.log(pairs);\n    return Object.keys(pairs).map(hypo => {\n      return /*#__PURE__*/React.createElement(\"input\", {\n        name: type,\n        type: \"textarea\",\n        value: hypo,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      });\n    });\n  }\n\n  showView(type) {\n    console.log(this.props.oh);\n    const hyps = Object.keys(this.props.oh).map(hypo => {\n      return /*#__PURE__*/React.createElement(\"input\", {\n        name: \"original\",\n        type: \"textarea\",\n        value: hypo,\n        onChange: this.handleInputChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      });\n    });\n\n    if (type === \"drag\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, hypos)));\n    } else if (type === \"focusA\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, this.tableRows(this.props.original, \"original\")), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, this.tableRows(this.props.A, \"A\")));\n    } else if (type === \"focusB\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, this.tableRows(this.props.original, \"original\")), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, this.tableRows(this.props.B, \"B\")));\n    } else if (type === \"focusC\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, this.tableRows(this.props.original, \"original\")), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, this.tableRows(this.props.C, \"C\")));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.showView(this.props.type));\n  }\n\n}\n\nexport default View;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/View.js"],"names":["React","Component","DragDropContext","Droppable","Draggable","Container","Row","Col","Button","View","constructor","props","tableRows","bind","showView","hypothesesDisplay","pairs","type","console","log","Object","keys","map","key","provided","snapshot","innerRef","droppableProps","value","id","draggableProps","dragHandleProps","hypo","handleInputChange","oh","hyps","hypos","original","A","B","C","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nclass View extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRows = this.tableRows.bind(this);\n    this.showView = this.showView.bind(this);\n    this.hypothesesDisplay = this.hypothesesDisplay.bind(this);\n  }\n  tableRows(pairs, type) {\n    console.log(pairs);\n    return Object.keys(pairs).map((key) => {\n      return (\n        <Container>\n          <Row>\n            <Col>\n              <strong>{key}</strong>\n            </Col>\n            <Col>\n              <Droppable droppableId={type + \"_\" + key}>\n                {(provided, snapshot) => (\n                  <div ref={provided.innerRef} {...provided.droppableProps}>\n                    {pairs[key].map((value, id) => {\n                      return (\n                        <Draggable\n                          draggableId={type + \"_\" + key + \"_\" + id}\n                          index={id}\n                        >\n                          {(provided, snapshot) => (\n                            <div\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                            >\n                              <Row>{value}</Row>\n                            </div>\n                          )}\n                        </Draggable>\n                      );\n                    })}\n                  </div>\n                )}\n              </Droppable>\n            </Col>\n          </Row>\n        </Container>\n      );\n    });\n  }\n  hypothesesDisplay(pairs, type) {\n    console.log(pairs);\n    return Object.keys(pairs).map((hypo) => {\n      return (\n        <input\n          name={type}\n          type=\"textarea\"\n          value={hypo}\n          onChange={this.handleInputChange}\n        ></input>\n      );\n    });\n  }\n  showView(type) {\n    console.log(this.props.oh);\n    const hyps = Object.keys(this.props.oh).map((hypo) => {\n      return (\n        <input\n          name={\"original\"}\n          type=\"textarea\"\n          value={hypo}\n          onChange={this.handleInputChange}\n        ></input>\n      );\n    });\n    if (type === \"drag\") {\n      return (\n        <>\n          {/* <Row>\n            <Col md={3}>{this.tableRows(this.props.original, \"original\")}</Col>\n            <Col md={3}>{this.tableRows(this.props.A, \"A\")}</Col>\n            <Col md={3}>{this.tableRows(this.props.B, \"B\")}</Col>\n            <Col md={3}>{this.tableRows(this.props.C, \"C\")}</Col>\n          </Row> */}\n          <Row>\n            <Col md={3}>{hypos}</Col>\n            {/* <Col md={3}>{this.hypothesesDisplay(this.props.oa, \"A\")}</Col>\n            <Col md={3}>{this.hypothesesDisplay(this.props.ob, \"B\")}</Col>\n            <Col md={3}>{this.hypothesesDisplay(this.props.oc, \"C\")}</Col> */}\n          </Row>\n        </>\n      );\n    } else if (type === \"focusA\") {\n      return (\n        <>\n          <Col md={6}>{this.tableRows(this.props.original, \"original\")}</Col>\n          <Col md={6}>{this.tableRows(this.props.A, \"A\")}</Col>\n        </>\n      );\n    } else if (type === \"focusB\") {\n      return (\n        <>\n          <Col md={6}>{this.tableRows(this.props.original, \"original\")}</Col>\n          <Col md={6}>{this.tableRows(this.props.B, \"B\")}</Col>\n        </>\n      );\n    } else if (type === \"focusC\") {\n      return (\n        <>\n          <Col md={6}>{this.tableRows(this.props.original, \"original\")}</Col>\n          <Col md={6}>{this.tableRows(this.props.C, \"C\")}</Col>\n        </>\n      );\n    }\n  }\n\n  render() {\n    return <>{this.showView(this.props.type)}</>;\n  }\n}\n\nexport default View;\n"]},"metadata":{},"sourceType":"module"}