{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { deepmerge } from '@material-ui/utils';\nimport createBreakpoints from './createBreakpoints';\nimport createMixins from './createMixins';\nimport createPalette from './createPalette';\nimport createTypography from './createTypography';\nimport shadows from './shadows';\nimport shape from './shape';\nimport createSpacing from './createSpacing';\nimport { duration, easing, create, getAutoHeightDuration } from './transitions';\nimport zIndex from './zIndex';\n\nfunction createMuiTheme(options = {}, ...args) {\n  const {\n    breakpoints: breakpointsInput = {},\n    mixins: mixinsInput = {},\n    palette: paletteInput = {},\n    spacing: spacingInput,\n    typography: typographyInput = {}\n  } = options,\n        other = _objectWithoutPropertiesLoose(options, [\"breakpoints\", \"mixins\", \"palette\", \"spacing\", \"typography\"]);\n\n  const palette = createPalette(paletteInput);\n  const breakpoints = createBreakpoints(breakpointsInput);\n  const spacing = createSpacing(spacingInput);\n  let muiTheme = deepmerge({\n    breakpoints,\n    direction: 'ltr',\n    mixins: createMixins(breakpoints, spacing, mixinsInput),\n    components: {},\n    // Inject component definitions\n    palette,\n    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.\n    shadows: shadows.slice(),\n    typography: createTypography(palette, typographyInput),\n    spacing,\n    shape: _extends({}, shape),\n    transitions: {\n      duration,\n      easing,\n      create,\n      getAutoHeightDuration\n    },\n    zIndex: _extends({}, zIndex)\n  }, other);\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\n\n  if (process.env.NODE_ENV !== 'production') {\n    const pseudoClasses = ['checked', 'disabled', 'error', 'focused', 'focusVisible', 'required', 'expanded', 'selected'];\n\n    const traverse = (node, component) => {\n      let key; // eslint-disable-next-line guard-for-in, no-restricted-syntax\n\n      for (key in node) {\n        const child = node[key];\n\n        if (pseudoClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error([`Material-UI: The \\`${component}\\` component increases ` + `the CSS specificity of the \\`${key}\\` internal state.`, 'You can not override it like this: ', JSON.stringify(node, null, 2), '', 'Instead, you need to use the $ruleName syntax:', JSON.stringify({\n              root: {\n                [`&$${key}`]: child\n              }\n            }, null, 2), '', 'https://material-ui.com/r/pseudo-classes-guide'].join('\\n'));\n          } // Remove the style to prevent global conflicts.\n\n\n          node[key] = {};\n        }\n      }\n    };\n\n    Object.keys(muiTheme.components).forEach(component => {\n      const styleOverrides = muiTheme.components[component].styleOverrides;\n\n      if (styleOverrides && component.indexOf('Mui') === 0) {\n        traverse(styleOverrides, component);\n      }\n    });\n  }\n\n  return muiTheme;\n}\n\nexport default createMuiTheme;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/styles/createMuiTheme.js"],"names":["_extends","_objectWithoutPropertiesLoose","deepmerge","createBreakpoints","createMixins","createPalette","createTypography","shadows","shape","createSpacing","duration","easing","create","getAutoHeightDuration","zIndex","createMuiTheme","options","args","breakpoints","breakpointsInput","mixins","mixinsInput","palette","paletteInput","spacing","spacingInput","typography","typographyInput","other","muiTheme","direction","components","slice","transitions","reduce","acc","argument","process","env","NODE_ENV","pseudoClasses","traverse","node","component","key","child","indexOf","Object","keys","length","console","error","JSON","stringify","root","join","forEach","styleOverrides"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { deepmerge } from '@material-ui/utils';\nimport createBreakpoints from './createBreakpoints';\nimport createMixins from './createMixins';\nimport createPalette from './createPalette';\nimport createTypography from './createTypography';\nimport shadows from './shadows';\nimport shape from './shape';\nimport createSpacing from './createSpacing';\nimport { duration, easing, create, getAutoHeightDuration } from './transitions';\nimport zIndex from './zIndex';\n\nfunction createMuiTheme(options = {}, ...args) {\n  const {\n    breakpoints: breakpointsInput = {},\n    mixins: mixinsInput = {},\n    palette: paletteInput = {},\n    spacing: spacingInput,\n    typography: typographyInput = {}\n  } = options,\n        other = _objectWithoutPropertiesLoose(options, [\"breakpoints\", \"mixins\", \"palette\", \"spacing\", \"typography\"]);\n\n  const palette = createPalette(paletteInput);\n  const breakpoints = createBreakpoints(breakpointsInput);\n  const spacing = createSpacing(spacingInput);\n  let muiTheme = deepmerge({\n    breakpoints,\n    direction: 'ltr',\n    mixins: createMixins(breakpoints, spacing, mixinsInput),\n    components: {},\n    // Inject component definitions\n    palette,\n    // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.\n    shadows: shadows.slice(),\n    typography: createTypography(palette, typographyInput),\n    spacing,\n    shape: _extends({}, shape),\n    transitions: {\n      duration,\n      easing,\n      create,\n      getAutoHeightDuration\n    },\n    zIndex: _extends({}, zIndex)\n  }, other);\n  muiTheme = args.reduce((acc, argument) => deepmerge(acc, argument), muiTheme);\n\n  if (process.env.NODE_ENV !== 'production') {\n    const pseudoClasses = ['checked', 'disabled', 'error', 'focused', 'focusVisible', 'required', 'expanded', 'selected'];\n\n    const traverse = (node, component) => {\n      let key; // eslint-disable-next-line guard-for-in, no-restricted-syntax\n\n      for (key in node) {\n        const child = node[key];\n\n        if (pseudoClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.error([`Material-UI: The \\`${component}\\` component increases ` + `the CSS specificity of the \\`${key}\\` internal state.`, 'You can not override it like this: ', JSON.stringify(node, null, 2), '', 'Instead, you need to use the $ruleName syntax:', JSON.stringify({\n              root: {\n                [`&$${key}`]: child\n              }\n            }, null, 2), '', 'https://material-ui.com/r/pseudo-classes-guide'].join('\\n'));\n          } // Remove the style to prevent global conflicts.\n\n\n          node[key] = {};\n        }\n      }\n    };\n\n    Object.keys(muiTheme.components).forEach(component => {\n      const styleOverrides = muiTheme.components[component].styleOverrides;\n\n      if (styleOverrides && component.indexOf('Mui') === 0) {\n        traverse(styleOverrides, component);\n      }\n    });\n  }\n\n  return muiTheme;\n}\n\nexport default createMuiTheme;"]},"metadata":{},"sourceType":"module"}