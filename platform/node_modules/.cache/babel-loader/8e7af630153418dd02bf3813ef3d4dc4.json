{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport { create } from 'jss';\nimport createGenerateClassName from '../createGenerateClassName';\nimport jssPreset from '../jssPreset'; // Default JSS instance.\n\nconst jss = create(jssPreset()); // Use a singleton or the provided one by the context.\n//\n// The counter-based approach doesn't tolerate any mistake.\n// It's much safer to use the same counter everywhere.\n\nconst generateClassName = createGenerateClassName(); // Exported for test purposes\n\nexport const sheetsManager = new Map();\nconst defaultOptions = {\n  disableGeneration: false,\n  generateClassName,\n  jss,\n  sheetsCache: null,\n  sheetsManager,\n  sheetsRegistry: null\n};\nexport const StylesContext = /*#__PURE__*/React.createContext(defaultOptions);\n\nif (process.env.NODE_ENV !== 'production') {\n  StylesContext.displayName = 'StylesContext';\n}\n\nlet injectFirstNode;\nexport default function StylesProvider(props) {\n  const {\n    children,\n    injectFirst = false,\n    disableGeneration = false\n  } = props,\n        localOptions = _objectWithoutPropertiesLoose(props, [\"children\", \"injectFirst\", \"disableGeneration\"]);\n\n  const outerOptions = React.useContext(StylesContext);\n\n  const context = _extends({}, outerOptions, {\n    disableGeneration\n  }, localOptions);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof window === 'undefined' && !context.sheetsManager) {\n      console.error('Material-UI: You need to use the ServerStyleSheets API when rendering on the server.');\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (context.jss.options.insertionPoint && injectFirst) {\n      console.error('Material-UI: You cannot use a custom insertionPoint and <StylesContext injectFirst> at the same time.');\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (injectFirst && localOptions.jss) {\n      console.error('Material-UI: You cannot use the jss and injectFirst props at the same time.');\n    }\n  }\n\n  if (!context.jss.options.insertionPoint && injectFirst && typeof window !== 'undefined') {\n    if (!injectFirstNode) {\n      const head = document.head;\n      injectFirstNode = document.createComment('mui-inject-first');\n      head.insertBefore(injectFirstNode, head.firstChild);\n    }\n\n    context.jss = create({\n      plugins: jssPreset().plugins,\n      insertionPoint: injectFirstNode\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(StylesContext.Provider, {\n    value: context\n  }, children);\n}\nprocess.env.NODE_ENV !== \"production\" ? StylesProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * You can disable the generation of the styles with this option.\n   * It can be useful when traversing the React tree outside of the HTML\n   * rendering step on the server.\n   * Let's say you are using react-apollo to extract all\n   * the queries made by the interface server-side - you can significantly speed up the traversal with this prop.\n   */\n  disableGeneration: PropTypes.bool,\n\n  /**\n   * JSS's class name generator.\n   */\n  generateClassName: PropTypes.func,\n\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override Material-UI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool,\n\n  /**\n   * JSS's instance.\n   */\n  jss: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  serverGenerateClassName: PropTypes.func,\n\n  /**\n   * @ignore\n   *\n   * Beta feature.\n   *\n   * Cache for the sheets.\n   */\n  sheetsCache: PropTypes.object,\n\n  /**\n   * @ignore\n   *\n   * The sheetsManager is used to deduplicate style sheet injection in the page.\n   * It's deduplicating using the (theme, styles) couple.\n   * On the server, you should provide a new instance for each request.\n   */\n  sheetsManager: PropTypes.object,\n\n  /**\n   * @ignore\n   *\n   * Collect the sheets.\n   */\n  sheetsRegistry: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? StylesProvider.propTypes = exactProp(StylesProvider.propTypes) : void 0;\n}","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/styles/StylesProvider/StylesProvider.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","exactProp","create","createGenerateClassName","jssPreset","jss","generateClassName","sheetsManager","Map","defaultOptions","disableGeneration","sheetsCache","sheetsRegistry","StylesContext","createContext","process","env","NODE_ENV","displayName","injectFirstNode","StylesProvider","props","children","injectFirst","localOptions","outerOptions","useContext","context","window","console","error","options","insertionPoint","head","document","createComment","insertBefore","firstChild","plugins","createElement","Provider","value","propTypes","node","bool","func","object","serverGenerateClassName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@material-ui/utils';\nimport { create } from 'jss';\nimport createGenerateClassName from '../createGenerateClassName';\nimport jssPreset from '../jssPreset'; // Default JSS instance.\n\nconst jss = create(jssPreset()); // Use a singleton or the provided one by the context.\n//\n// The counter-based approach doesn't tolerate any mistake.\n// It's much safer to use the same counter everywhere.\n\nconst generateClassName = createGenerateClassName(); // Exported for test purposes\n\nexport const sheetsManager = new Map();\nconst defaultOptions = {\n  disableGeneration: false,\n  generateClassName,\n  jss,\n  sheetsCache: null,\n  sheetsManager,\n  sheetsRegistry: null\n};\nexport const StylesContext = /*#__PURE__*/React.createContext(defaultOptions);\n\nif (process.env.NODE_ENV !== 'production') {\n  StylesContext.displayName = 'StylesContext';\n}\n\nlet injectFirstNode;\nexport default function StylesProvider(props) {\n  const {\n    children,\n    injectFirst = false,\n    disableGeneration = false\n  } = props,\n        localOptions = _objectWithoutPropertiesLoose(props, [\"children\", \"injectFirst\", \"disableGeneration\"]);\n\n  const outerOptions = React.useContext(StylesContext);\n\n  const context = _extends({}, outerOptions, {\n    disableGeneration\n  }, localOptions);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof window === 'undefined' && !context.sheetsManager) {\n      console.error('Material-UI: You need to use the ServerStyleSheets API when rendering on the server.');\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (context.jss.options.insertionPoint && injectFirst) {\n      console.error('Material-UI: You cannot use a custom insertionPoint and <StylesContext injectFirst> at the same time.');\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (injectFirst && localOptions.jss) {\n      console.error('Material-UI: You cannot use the jss and injectFirst props at the same time.');\n    }\n  }\n\n  if (!context.jss.options.insertionPoint && injectFirst && typeof window !== 'undefined') {\n    if (!injectFirstNode) {\n      const head = document.head;\n      injectFirstNode = document.createComment('mui-inject-first');\n      head.insertBefore(injectFirstNode, head.firstChild);\n    }\n\n    context.jss = create({\n      plugins: jssPreset().plugins,\n      insertionPoint: injectFirstNode\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(StylesContext.Provider, {\n    value: context\n  }, children);\n}\nprocess.env.NODE_ENV !== \"production\" ? StylesProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n\n  /**\n   * You can disable the generation of the styles with this option.\n   * It can be useful when traversing the React tree outside of the HTML\n   * rendering step on the server.\n   * Let's say you are using react-apollo to extract all\n   * the queries made by the interface server-side - you can significantly speed up the traversal with this prop.\n   */\n  disableGeneration: PropTypes.bool,\n\n  /**\n   * JSS's class name generator.\n   */\n  generateClassName: PropTypes.func,\n\n  /**\n   * By default, the styles are injected last in the <head> element of the page.\n   * As a result, they gain more specificity than any other style sheet.\n   * If you want to override Material-UI's styles, set this prop.\n   */\n  injectFirst: PropTypes.bool,\n\n  /**\n   * JSS's instance.\n   */\n  jss: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  serverGenerateClassName: PropTypes.func,\n\n  /**\n   * @ignore\n   *\n   * Beta feature.\n   *\n   * Cache for the sheets.\n   */\n  sheetsCache: PropTypes.object,\n\n  /**\n   * @ignore\n   *\n   * The sheetsManager is used to deduplicate style sheet injection in the page.\n   * It's deduplicating using the (theme, styles) couple.\n   * On the server, you should provide a new instance for each request.\n   */\n  sheetsManager: PropTypes.object,\n\n  /**\n   * @ignore\n   *\n   * Collect the sheets.\n   */\n  sheetsRegistry: PropTypes.object\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? StylesProvider.propTypes = exactProp(StylesProvider.propTypes) : void 0;\n}"]},"metadata":{},"sourceType":"module"}