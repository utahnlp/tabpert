{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nconst Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'hover',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[`underline${capitalize(underline)}`], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes.oneOf(['error', 'inherit', 'initial', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'hover'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Link/Link.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","elementTypeAcceptingRef","capitalize","withStyles","useIsFocusVisible","useForkRef","Typography","styles","root","underlineNone","textDecoration","underlineHover","underlineAlways","button","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","focusVisible","Link","forwardRef","props","ref","classes","className","color","component","onBlur","onFocus","TypographyClasses","underline","variant","other","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","setFocusVisible","useState","handlerRef","handleBlur","event","current","handleFocus","createElement","process","env","NODE_ENV","propTypes","children","node","object","string","oneOf","func","oneOfType","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nconst Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  const {\n    classes,\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'hover',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[`underline${capitalize(underline)}`], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes.oneOf(['error', 'inherit', 'initial', 'primary', 'secondary', 'textPrimary', 'textSecondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'hover'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);"]},"metadata":{},"sourceType":"module"}