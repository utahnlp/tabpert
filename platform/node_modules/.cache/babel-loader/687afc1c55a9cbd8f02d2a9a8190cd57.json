{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\"; // Sorted ASC by size. That's important.\n// It can't be configured as it's used statically for propTypes.\n\nexport const breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl']; // Keep in mind that @media is inclusive by the CSS specification.\n\nexport default function createBreakpoints(breakpoints) {\n  const {\n    // The breakpoint **start** at this value.\n    // For instance with the first breakpoint xs: [xs, sm).\n    values = {\n      xs: 0,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 1920\n    },\n    unit = 'px',\n    step = 5\n  } = breakpoints,\n        other = _objectWithoutPropertiesLoose(breakpoints, [\"values\", \"unit\", \"step\"]);\n\n  const keys = Object.keys(values);\n\n  function up(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (min-width:${value}${unit})`;\n  }\n\n  function down(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (max-width:${value - step / 100}${unit})`;\n  }\n\n  function between(start, end) {\n    const endIndex = keys.indexOf(end);\n    return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;\n  }\n\n  function only(key) {\n    if (keys.indexOf(key) + 1 < keys.length) {\n      return between(key, keys[keys.indexOf(key) + 1]);\n    }\n\n    return up(key);\n  }\n\n  function width(key) {\n    return values[key];\n  }\n\n  return _extends({\n    keys,\n    values,\n    up,\n    down,\n    between,\n    only,\n    width,\n    unit\n  }, other);\n}","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/styles/createBreakpoints.js"],"names":["_extends","_objectWithoutPropertiesLoose","breakpointKeys","createBreakpoints","breakpoints","values","xs","sm","md","lg","xl","unit","step","other","keys","Object","up","key","value","down","between","start","end","endIndex","indexOf","only","length","width"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C,C,CACA;AACA;;AACA,OAAO,MAAMC,cAAc,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAAvB,C,CAAuD;;AAE9D,eAAe,SAASC,iBAAT,CAA2BC,WAA3B,EAAwC;AACrD,QAAM;AACJ;AACA;AACAC,IAAAA,MAAM,GAAG;AACPC,MAAAA,EAAE,EAAE,CADG;AAEPC,MAAAA,EAAE,EAAE,GAFG;AAGPC,MAAAA,EAAE,EAAE,GAHG;AAIPC,MAAAA,EAAE,EAAE,IAJG;AAKPC,MAAAA,EAAE,EAAE;AALG,KAHL;AAUJC,IAAAA,IAAI,GAAG,IAVH;AAWJC,IAAAA,IAAI,GAAG;AAXH,MAYFR,WAZJ;AAAA,QAaMS,KAAK,GAAGZ,6BAA6B,CAACG,WAAD,EAAc,CAAC,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAd,CAb3C;;AAeA,QAAMU,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYT,MAAZ,CAAb;;AAEA,WAASW,EAAT,CAAYC,GAAZ,EAAiB;AACf,UAAMC,KAAK,GAAG,OAAOb,MAAM,CAACY,GAAD,CAAb,KAAuB,QAAvB,GAAkCZ,MAAM,CAACY,GAAD,CAAxC,GAAgDA,GAA9D;AACA,WAAQ,qBAAoBC,KAAM,GAAEP,IAAK,GAAzC;AACD;;AAED,WAASQ,IAAT,CAAcF,GAAd,EAAmB;AACjB,UAAMC,KAAK,GAAG,OAAOb,MAAM,CAACY,GAAD,CAAb,KAAuB,QAAvB,GAAkCZ,MAAM,CAACY,GAAD,CAAxC,GAAgDA,GAA9D;AACA,WAAQ,qBAAoBC,KAAK,GAAGN,IAAI,GAAG,GAAI,GAAED,IAAK,GAAtD;AACD;;AAED,WAASS,OAAT,CAAiBC,KAAjB,EAAwBC,GAAxB,EAA6B;AAC3B,UAAMC,QAAQ,GAAGT,IAAI,CAACU,OAAL,CAAaF,GAAb,CAAjB;AACA,WAAQ,qBAAoB,OAAOjB,MAAM,CAACgB,KAAD,CAAb,KAAyB,QAAzB,GAAoChB,MAAM,CAACgB,KAAD,CAA1C,GAAoDA,KAAM,GAAEV,IAAK,QAAtF,GAAiG,cAAa,CAACY,QAAQ,KAAK,CAAC,CAAd,IAAmB,OAAOlB,MAAM,CAACS,IAAI,CAACS,QAAD,CAAL,CAAb,KAAkC,QAArD,GAAgElB,MAAM,CAACS,IAAI,CAACS,QAAD,CAAL,CAAtE,GAAyFD,GAA1F,IAAiGV,IAAI,GAAG,GAAI,GAAED,IAAK,GAAxO;AACD;;AAED,WAASc,IAAT,CAAcR,GAAd,EAAmB;AACjB,QAAIH,IAAI,CAACU,OAAL,CAAaP,GAAb,IAAoB,CAApB,GAAwBH,IAAI,CAACY,MAAjC,EAAyC;AACvC,aAAON,OAAO,CAACH,GAAD,EAAMH,IAAI,CAACA,IAAI,CAACU,OAAL,CAAaP,GAAb,IAAoB,CAArB,CAAV,CAAd;AACD;;AAED,WAAOD,EAAE,CAACC,GAAD,CAAT;AACD;;AAED,WAASU,KAAT,CAAeV,GAAf,EAAoB;AAClB,WAAOZ,MAAM,CAACY,GAAD,CAAb;AACD;;AAED,SAAOjB,QAAQ,CAAC;AACdc,IAAAA,IADc;AAEdT,IAAAA,MAFc;AAGdW,IAAAA,EAHc;AAIdG,IAAAA,IAJc;AAKdC,IAAAA,OALc;AAMdK,IAAAA,IANc;AAOdE,IAAAA,KAPc;AAQdhB,IAAAA;AARc,GAAD,EASZE,KATY,CAAf;AAUD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n// Sorted ASC by size. That's important.\n// It can't be configured as it's used statically for propTypes.\nexport const breakpointKeys = ['xs', 'sm', 'md', 'lg', 'xl']; // Keep in mind that @media is inclusive by the CSS specification.\n\nexport default function createBreakpoints(breakpoints) {\n  const {\n    // The breakpoint **start** at this value.\n    // For instance with the first breakpoint xs: [xs, sm).\n    values = {\n      xs: 0,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 1920\n    },\n    unit = 'px',\n    step = 5\n  } = breakpoints,\n        other = _objectWithoutPropertiesLoose(breakpoints, [\"values\", \"unit\", \"step\"]);\n\n  const keys = Object.keys(values);\n\n  function up(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (min-width:${value}${unit})`;\n  }\n\n  function down(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (max-width:${value - step / 100}${unit})`;\n  }\n\n  function between(start, end) {\n    const endIndex = keys.indexOf(end);\n    return `@media (min-width:${typeof values[start] === 'number' ? values[start] : start}${unit}) and ` + `(max-width:${(endIndex !== -1 && typeof values[keys[endIndex]] === 'number' ? values[keys[endIndex]] : end) - step / 100}${unit})`;\n  }\n\n  function only(key) {\n    if (keys.indexOf(key) + 1 < keys.length) {\n      return between(key, keys[keys.indexOf(key) + 1]);\n    }\n\n    return up(key);\n  }\n\n  function width(key) {\n    return values[key];\n  }\n\n  return _extends({\n    keys,\n    values,\n    up,\n    down,\n    between,\n    only,\n    width,\n    unit\n  }, other);\n}"]},"metadata":{},"sourceType":"module"}