{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // @inheritedComponent Tooltip\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport Fab from '../Fab';\nimport Tooltip from '../Tooltip';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the Fab component. */\n  fab: {\n    margin: 8,\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.background.paper,\n    '&:hover': {\n      backgroundColor: emphasize(theme.palette.background.paper, 0.15)\n    },\n    transition: `${theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shorter\n    })}, opacity 0.8s`,\n    opacity: 1\n  },\n\n  /* Styles applied to the Fab component if `open={false}`. */\n  fabClosed: {\n    opacity: 0,\n    transform: 'scale(0)'\n  },\n\n  /* Styles applied to the root element if `tooltipOpen={true}`. */\n  staticTooltip: {\n    position: 'relative',\n    display: 'flex',\n    '& $staticTooltipLabel': {\n      transition: theme.transitions.create(['transform', 'opacity'], {\n        duration: theme.transitions.duration.shorter\n      }),\n      opacity: 1\n    }\n  },\n\n  /* Styles applied to the root element if `tooltipOpen={true}` and `open={false}`. */\n  staticTooltipClosed: {\n    '& $staticTooltipLabel': {\n      opacity: 0,\n      transform: 'scale(0.5)'\n    }\n  },\n\n  /* Styles applied to the static tooltip label if `tooltipOpen={true}`. */\n  staticTooltipLabel: _extends({\n    position: 'absolute'\n  }, theme.typography.body1, {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[1],\n    color: theme.palette.text.secondary,\n    padding: '4px 16px',\n    wordBreak: 'keep-all'\n  }),\n\n  /* Styles applied to the root if `tooltipOpen={true}` and `tooltipPlacement=\"left\"`` */\n  tooltipPlacementLeft: {\n    alignItems: 'center',\n    '& $staticTooltipLabel': {\n      transformOrigin: '100% 50%',\n      right: '100%',\n      marginRight: 8\n    }\n  },\n\n  /* Styles applied to the root if `tooltipOpen={true}` and `tooltipPlacement=\"right\"`` */\n  tooltipPlacementRight: {\n    alignItems: 'center',\n    '& $staticTooltipLabel': {\n      transformOrigin: '0% 50%',\n      left: '100%',\n      marginLeft: 8\n    }\n  }\n});\nconst SpeedDialAction = /*#__PURE__*/React.forwardRef(function SpeedDialAction(props, ref) {\n  const {\n    classes,\n    className,\n    delay = 0,\n    FabProps = {},\n    icon,\n    id,\n    open,\n    TooltipClasses,\n    tooltipOpen: tooltipOpenProp = false,\n    tooltipPlacement = 'left',\n    tooltipTitle\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"delay\", \"FabProps\", \"icon\", \"id\", \"open\", \"TooltipClasses\", \"tooltipOpen\", \"tooltipPlacement\", \"tooltipTitle\"]);\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(tooltipOpenProp);\n\n  const handleTooltipClose = () => {\n    setTooltipOpen(false);\n  };\n\n  const handleTooltipOpen = () => {\n    setTooltipOpen(true);\n  };\n\n  const transitionStyle = {\n    transitionDelay: `${delay}ms`\n  };\n  const fab = /*#__PURE__*/React.createElement(Fab, _extends({\n    size: \"small\",\n    className: clsx(classes.fab, className, !open && classes.fabClosed),\n    tabIndex: -1,\n    role: \"menuitem\",\n    \"aria-describedby\": `${id}-label`\n  }, FabProps, {\n    style: _extends({}, transitionStyle, FabProps.style)\n  }), icon);\n\n  if (tooltipOpenProp) {\n    return /*#__PURE__*/React.createElement(\"span\", _extends({\n      id: id,\n      ref: ref,\n      className: clsx(classes.staticTooltip, classes[`tooltipPlacement${capitalize(tooltipPlacement)}`], !open && classes.staticTooltipClosed)\n    }, other), /*#__PURE__*/React.createElement(\"span\", {\n      style: transitionStyle,\n      id: `${id}-label`,\n      className: classes.staticTooltipLabel\n    }, tooltipTitle), fab);\n  }\n\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({\n    id: id,\n    ref: ref,\n    title: tooltipTitle,\n    placement: tooltipPlacement,\n    onClose: handleTooltipClose,\n    onOpen: handleTooltipOpen,\n    open: open && tooltipOpen,\n    classes: TooltipClasses\n  }, other), fab);\n});\nprocess.env.NODE_ENV !== \"production\" ? SpeedDialAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Adds a transition delay, to allow a series of SpeedDialActions to be animated.\n   * @default 0\n   */\n  delay: PropTypes.number,\n\n  /**\n   * Props applied to the [`Fab`](/api/fab/) component.\n   * @default {}\n   */\n  FabProps: PropTypes.object,\n\n  /**\n   * The Icon to display in the SpeedDial Fab.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`Tooltip`](/api/tooltip/) element.\n   */\n  TooltipClasses: PropTypes.object,\n\n  /**\n   * Make the tooltip always visible when the SpeedDial is open.\n   * @default false\n   */\n  tooltipOpen: PropTypes.bool,\n\n  /**\n   * Placement of the tooltip.\n   * @default 'left'\n   */\n  tooltipPlacement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * Label to display in the tooltip.\n   */\n  tooltipTitle: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSpeedDialAction'\n})(SpeedDialAction);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/SpeedDialAction/SpeedDialAction.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","withStyles","emphasize","Fab","Tooltip","capitalize","styles","theme","fab","margin","color","palette","text","secondary","backgroundColor","background","paper","transition","transitions","create","duration","shorter","opacity","fabClosed","transform","staticTooltip","position","display","staticTooltipClosed","staticTooltipLabel","typography","body1","borderRadius","shape","boxShadow","shadows","padding","wordBreak","tooltipPlacementLeft","alignItems","transformOrigin","right","marginRight","tooltipPlacementRight","left","marginLeft","SpeedDialAction","forwardRef","props","ref","classes","className","delay","FabProps","icon","id","open","TooltipClasses","tooltipOpen","tooltipOpenProp","tooltipPlacement","tooltipTitle","other","setTooltipOpen","useState","handleTooltipClose","handleTooltipOpen","transitionStyle","transitionDelay","createElement","size","tabIndex","role","style","title","placement","onClose","onOpen","process","env","NODE_ENV","propTypes","object","string","number","node","bool","oneOf","name"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent Tooltip\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport Fab from '../Fab';\nimport Tooltip from '../Tooltip';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  /* Styles applied to the Fab component. */\n  fab: {\n    margin: 8,\n    color: theme.palette.text.secondary,\n    backgroundColor: theme.palette.background.paper,\n    '&:hover': {\n      backgroundColor: emphasize(theme.palette.background.paper, 0.15)\n    },\n    transition: `${theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shorter\n    })}, opacity 0.8s`,\n    opacity: 1\n  },\n\n  /* Styles applied to the Fab component if `open={false}`. */\n  fabClosed: {\n    opacity: 0,\n    transform: 'scale(0)'\n  },\n\n  /* Styles applied to the root element if `tooltipOpen={true}`. */\n  staticTooltip: {\n    position: 'relative',\n    display: 'flex',\n    '& $staticTooltipLabel': {\n      transition: theme.transitions.create(['transform', 'opacity'], {\n        duration: theme.transitions.duration.shorter\n      }),\n      opacity: 1\n    }\n  },\n\n  /* Styles applied to the root element if `tooltipOpen={true}` and `open={false}`. */\n  staticTooltipClosed: {\n    '& $staticTooltipLabel': {\n      opacity: 0,\n      transform: 'scale(0.5)'\n    }\n  },\n\n  /* Styles applied to the static tooltip label if `tooltipOpen={true}`. */\n  staticTooltipLabel: _extends({\n    position: 'absolute'\n  }, theme.typography.body1, {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[1],\n    color: theme.palette.text.secondary,\n    padding: '4px 16px',\n    wordBreak: 'keep-all'\n  }),\n\n  /* Styles applied to the root if `tooltipOpen={true}` and `tooltipPlacement=\"left\"`` */\n  tooltipPlacementLeft: {\n    alignItems: 'center',\n    '& $staticTooltipLabel': {\n      transformOrigin: '100% 50%',\n      right: '100%',\n      marginRight: 8\n    }\n  },\n\n  /* Styles applied to the root if `tooltipOpen={true}` and `tooltipPlacement=\"right\"`` */\n  tooltipPlacementRight: {\n    alignItems: 'center',\n    '& $staticTooltipLabel': {\n      transformOrigin: '0% 50%',\n      left: '100%',\n      marginLeft: 8\n    }\n  }\n});\nconst SpeedDialAction = /*#__PURE__*/React.forwardRef(function SpeedDialAction(props, ref) {\n  const {\n    classes,\n    className,\n    delay = 0,\n    FabProps = {},\n    icon,\n    id,\n    open,\n    TooltipClasses,\n    tooltipOpen: tooltipOpenProp = false,\n    tooltipPlacement = 'left',\n    tooltipTitle\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"delay\", \"FabProps\", \"icon\", \"id\", \"open\", \"TooltipClasses\", \"tooltipOpen\", \"tooltipPlacement\", \"tooltipTitle\"]);\n\n  const [tooltipOpen, setTooltipOpen] = React.useState(tooltipOpenProp);\n\n  const handleTooltipClose = () => {\n    setTooltipOpen(false);\n  };\n\n  const handleTooltipOpen = () => {\n    setTooltipOpen(true);\n  };\n\n  const transitionStyle = {\n    transitionDelay: `${delay}ms`\n  };\n  const fab = /*#__PURE__*/React.createElement(Fab, _extends({\n    size: \"small\",\n    className: clsx(classes.fab, className, !open && classes.fabClosed),\n    tabIndex: -1,\n    role: \"menuitem\",\n    \"aria-describedby\": `${id}-label`\n  }, FabProps, {\n    style: _extends({}, transitionStyle, FabProps.style)\n  }), icon);\n\n  if (tooltipOpenProp) {\n    return /*#__PURE__*/React.createElement(\"span\", _extends({\n      id: id,\n      ref: ref,\n      className: clsx(classes.staticTooltip, classes[`tooltipPlacement${capitalize(tooltipPlacement)}`], !open && classes.staticTooltipClosed)\n    }, other), /*#__PURE__*/React.createElement(\"span\", {\n      style: transitionStyle,\n      id: `${id}-label`,\n      className: classes.staticTooltipLabel\n    }, tooltipTitle), fab);\n  }\n\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({\n    id: id,\n    ref: ref,\n    title: tooltipTitle,\n    placement: tooltipPlacement,\n    onClose: handleTooltipClose,\n    onOpen: handleTooltipOpen,\n    open: open && tooltipOpen,\n    classes: TooltipClasses\n  }, other), fab);\n});\nprocess.env.NODE_ENV !== \"production\" ? SpeedDialAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Adds a transition delay, to allow a series of SpeedDialActions to be animated.\n   * @default 0\n   */\n  delay: PropTypes.number,\n\n  /**\n   * Props applied to the [`Fab`](/api/fab/) component.\n   * @default {}\n   */\n  FabProps: PropTypes.object,\n\n  /**\n   * The Icon to display in the SpeedDial Fab.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`Tooltip`](/api/tooltip/) element.\n   */\n  TooltipClasses: PropTypes.object,\n\n  /**\n   * Make the tooltip always visible when the SpeedDial is open.\n   * @default false\n   */\n  tooltipOpen: PropTypes.bool,\n\n  /**\n   * Placement of the tooltip.\n   * @default 'left'\n   */\n  tooltipPlacement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * Label to display in the tooltip.\n   */\n  tooltipTitle: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSpeedDialAction'\n})(SpeedDialAction);"]},"metadata":{},"sourceType":"module"}