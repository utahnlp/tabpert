{"ast":null,"code":"var _jsxFileName = \"/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/Tables.js\";\nimport React, { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nclass Tables extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reorder = (list, startIndex, endIndex) => {\n      const result = Array.from(list);\n      const [removed] = result.splice(startIndex, 1);\n      result.splice(endIndex, 0, removed);\n      return result;\n    };\n\n    this.state = {\n      title: '',\n      original: '',\n      A: '',\n      B: '',\n      C: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getTables();\n  }\n\n  getTables() {\n    console.log('called');\n    fetch(`/api/table?id=${this.props.tableid}`).then(res => res.json()).then(data => {\n      this.setState({\n        title: data.title,\n        'original': data.original,\n        'A': data['A'],\n        'B': data.B,\n        'C': data.C\n      });\n    });\n  }\n\n  tableRows(pairs, type) {\n    return Object.keys(pairs).map(key => {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 54\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 70\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 75\n        }\n      }, key)), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 103\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: type + '_' + key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 108\n        }\n      }, pairs[key].map(value => {\n        return /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 183\n          }\n        }, value);\n      })))));\n    });\n  }\n\n  onDragEnd(result) {\n    const {\n      source,\n      destination\n    } = result; // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    const sInd = +source.droppableId;\n    const dInd = +destination.droppableId;\n\n    if (sInd === dInd) {\n      const items = reorder(state[sInd], source.index, destination.index);\n      const newState = [...state];\n      newState[sInd] = items;\n      setState(newState);\n    } else {\n      const result = move(state[sInd], state[dInd], source, destination);\n      const newState = [...state];\n      newState[sInd] = result[sInd];\n      newState[dInd] = result[dInd];\n      setState(newState.filter(group => group.length));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, this.state.title)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, this.tableRows(this.state.original, 'original')), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, this.tableRows(this.state.A, 'A')), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, this.tableRows(this.state.B, 'B')), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, this.tableRows(this.state.C, 'C')))));\n  }\n\n}\n\nexport default Tables;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/Tables.js"],"names":["React","Component","DragDropContext","Droppable","Draggable","Container","Row","Col","Tables","constructor","props","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","state","title","original","A","B","C","componentDidMount","getTables","console","log","fetch","tableid","then","res","json","data","setState","tableRows","pairs","type","Object","keys","map","key","value","onDragEnd","source","destination","sInd","droppableId","dInd","items","index","newState","move","filter","group","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport {Container, Row, Col} from 'react-bootstrap';\n\nclass Tables extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {title: '', original: '', A: '', B: '', C: ''}\n\n    }\n\n    componentDidMount() {\n        this.getTables();\n    }\n    \n    getTables() {\n        console.log('called')\n        fetch(`/api/table?id=${this.props.tableid}`).then(res => res.json()).then(data => {this.setState({title: data.title, 'original': data.original, 'A': data['A'], 'B': data.B, 'C': data.C})})\n    }\n\n    tableRows(pairs, type) {\n        return(Object.keys(pairs).map(key => {return(<Container><Row><Col><strong>{key}</strong></Col><Col><Droppable droppableId={type + '_' + key}>{pairs[key].map(value => {return(<Row>{value}</Row>)})}</Droppable></Col></Row></Container>)}))\n    }\n\n    reorder = (list, startIndex, endIndex) => {\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n    \n        return result;\n    };\n\n    onDragEnd(result) {\n        const { source, destination } = result;\n    \n        // dropped outside the list\n        if (!destination) {\n          return;\n        }\n        const sInd = +source.droppableId;\n        const dInd = +destination.droppableId;\n    \n        if (sInd === dInd) {\n          const items = reorder(state[sInd], source.index, destination.index);\n          const newState = [...state];\n          newState[sInd] = items;\n          setState(newState);\n        } else {\n          const result = move(state[sInd], state[dInd], source, destination);\n          const newState = [...state];\n          newState[sInd] = result[sInd];\n          newState[dInd] = result[dInd];\n    \n          setState(newState.filter(group => group.length));\n        }\n      }\n    \n    render() {\n        return(\n            <Container >\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                <Row className=\"justify-content-center\">\n                    <h1>{this.state.title}</h1>\n                </Row>\n                <Row>\n                <Col md={3}>\n                {this.tableRows(this.state.original, 'original')}\n                </Col>\n                <Col md={3}>\n                {this.tableRows(this.state.A, 'A')}\n                </Col>\n                <Col md={3}>\n                {this.tableRows(this.state.B, 'B')}\n                </Col>\n                <Col md={3}>\n                {this.tableRows(this.state.C, 'C')}\n                </Col>\n                </Row>\n                </DragDropContext>\n            </Container>\n        );\n    }\n}\n\nexport default Tables;"]},"metadata":{},"sourceType":"module"}