{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, useThemeVariants } from '../styles';\nimport usePagination from '../usePagination';\nimport PaginationItem from '../PaginationItem';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ul element. */\n  ul: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the root element if `variant=\"outlined\"`. */\n  outlined: {},\n\n  /* Styles applied to the root element if `variant=\"text\"`. */\n  text: {}\n};\n\nfunction defaultGetAriaLabel(type, page, selected) {\n  if (type === 'page') {\n    return `${selected ? '' : 'Go to '}page ${page}`;\n  }\n\n  return `Go to ${type} page`;\n}\n\nconst Pagination = /*#__PURE__*/React.forwardRef(function Pagination(props, ref) {\n  const {\n    boundaryCount = 1,\n    classes,\n    className,\n    color = 'standard',\n    count = 1,\n    defaultPage = 1,\n    disabled = false,\n    getItemAriaLabel = defaultGetAriaLabel,\n    hideNextButton = false,\n    hidePrevButton = false,\n    renderItem = item => /*#__PURE__*/React.createElement(PaginationItem, item),\n    shape = 'circular',\n    showFirstButton = false,\n    showLastButton = false,\n    siblingCount = 1,\n    size = 'medium',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"boundaryCount\", \"classes\", \"className\", \"color\", \"count\", \"defaultPage\", \"disabled\", \"getItemAriaLabel\", \"hideNextButton\", \"hidePrevButton\", \"onChange\", \"page\", \"renderItem\", \"shape\", \"showFirstButton\", \"showLastButton\", \"siblingCount\", \"size\", \"variant\"]);\n\n  const {\n    items\n  } = usePagination(_extends({}, props, {\n    componentName: 'Pagination'\n  }));\n  const themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    boundaryCount,\n    color,\n    count,\n    defaultPage,\n    disabled,\n    getItemAriaLabel,\n    hideNextButton,\n    hidePrevButton,\n    renderItem,\n    shape,\n    showFirstButton,\n    showLastButton,\n    siblingCount,\n    size,\n    variant\n  }), 'MuiPaginationItem');\n  return /*#__PURE__*/React.createElement(\"nav\", _extends({\n    \"aria-label\": \"pagination navigation\",\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.ul\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index\n  }, renderItem(_extends({}, item, {\n    color,\n    'aria-label': getItemAriaLabel(item.type, item.page, item.selected),\n    shape,\n    size,\n    variant\n  }))))));\n}); // @default tags synced with default values from usePagination\n\nprocess.env.NODE_ENV !== \"production\" ? Pagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Number of always visible pages at the beginning and end.\n   * @default 1\n   */\n  boundaryCount: PropTypes.number,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The active color.\n   * @default 'standard'\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'standard']),\n\n  /**\n   * The total number of pages.\n   * @default 1\n   */\n  count: PropTypes.number,\n\n  /**\n   * The page selected by default when the component is uncontrolled.\n   * @default 1\n   */\n  defaultPage: PropTypes.number,\n\n  /**\n   * If `true`, the pagination component will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @param {bool} selected If true, the current page is selected.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * If `true`, hide the next-page button.\n   * @default false\n   */\n  hideNextButton: PropTypes.bool,\n\n  /**\n   * If `true`, hide the previous-page button.\n   * @default false\n   */\n  hidePrevButton: PropTypes.bool,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The current page.\n   */\n  page: PropTypes.number,\n\n  /**\n   * Render the item.\n   *\n   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.\n   * @returns {ReactNode}\n   * @default (item) => <PaginationItem {...item} />\n   */\n  renderItem: PropTypes.func,\n\n  /**\n   * The shape of the pagination items.\n   * @default 'circular'\n   */\n  shape: PropTypes.oneOf(['circular', 'rounded']),\n\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n\n  /**\n   * Number of always visible pages before and after the current page.\n   * @default 1\n   */\n  siblingCount: PropTypes.number,\n\n  /**\n   * The size of the pagination component.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPagination'\n})(Pagination);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Pagination/Pagination.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","useThemeVariants","usePagination","PaginationItem","styles","root","ul","display","flexWrap","alignItems","padding","margin","listStyle","outlined","text","defaultGetAriaLabel","type","page","selected","Pagination","forwardRef","props","ref","boundaryCount","classes","className","color","count","defaultPage","disabled","getItemAriaLabel","hideNextButton","hidePrevButton","renderItem","item","createElement","shape","showFirstButton","showLastButton","siblingCount","size","variant","other","items","componentName","themeVariantsClasses","map","index","key","process","env","NODE_ENV","propTypes","number","object","string","oneOf","bool","func","onChange","oneOfType","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, useThemeVariants } from '../styles';\nimport usePagination from '../usePagination';\nimport PaginationItem from '../PaginationItem';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ul element. */\n  ul: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the root element if `variant=\"outlined\"`. */\n  outlined: {},\n\n  /* Styles applied to the root element if `variant=\"text\"`. */\n  text: {}\n};\n\nfunction defaultGetAriaLabel(type, page, selected) {\n  if (type === 'page') {\n    return `${selected ? '' : 'Go to '}page ${page}`;\n  }\n\n  return `Go to ${type} page`;\n}\n\nconst Pagination = /*#__PURE__*/React.forwardRef(function Pagination(props, ref) {\n  const {\n    boundaryCount = 1,\n    classes,\n    className,\n    color = 'standard',\n    count = 1,\n    defaultPage = 1,\n    disabled = false,\n    getItemAriaLabel = defaultGetAriaLabel,\n    hideNextButton = false,\n    hidePrevButton = false,\n    renderItem = item => /*#__PURE__*/React.createElement(PaginationItem, item),\n    shape = 'circular',\n    showFirstButton = false,\n    showLastButton = false,\n    siblingCount = 1,\n    size = 'medium',\n    variant = 'text'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"boundaryCount\", \"classes\", \"className\", \"color\", \"count\", \"defaultPage\", \"disabled\", \"getItemAriaLabel\", \"hideNextButton\", \"hidePrevButton\", \"onChange\", \"page\", \"renderItem\", \"shape\", \"showFirstButton\", \"showLastButton\", \"siblingCount\", \"size\", \"variant\"]);\n\n  const {\n    items\n  } = usePagination(_extends({}, props, {\n    componentName: 'Pagination'\n  }));\n  const themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    boundaryCount,\n    color,\n    count,\n    defaultPage,\n    disabled,\n    getItemAriaLabel,\n    hideNextButton,\n    hidePrevButton,\n    renderItem,\n    shape,\n    showFirstButton,\n    showLastButton,\n    siblingCount,\n    size,\n    variant\n  }), 'MuiPaginationItem');\n  return /*#__PURE__*/React.createElement(\"nav\", _extends({\n    \"aria-label\": \"pagination navigation\",\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes.ul\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index\n  }, renderItem(_extends({}, item, {\n    color,\n    'aria-label': getItemAriaLabel(item.type, item.page, item.selected),\n    shape,\n    size,\n    variant\n  }))))));\n}); // @default tags synced with default values from usePagination\n\nprocess.env.NODE_ENV !== \"production\" ? Pagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Number of always visible pages at the beginning and end.\n   * @default 1\n   */\n  boundaryCount: PropTypes.number,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The active color.\n   * @default 'standard'\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'standard']),\n\n  /**\n   * The total number of pages.\n   * @default 1\n   */\n  count: PropTypes.number,\n\n  /**\n   * The page selected by default when the component is uncontrolled.\n   * @default 1\n   */\n  defaultPage: PropTypes.number,\n\n  /**\n   * If `true`, the pagination component will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @param {bool} selected If true, the current page is selected.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * If `true`, hide the next-page button.\n   * @default false\n   */\n  hideNextButton: PropTypes.bool,\n\n  /**\n   * If `true`, hide the previous-page button.\n   * @default false\n   */\n  hidePrevButton: PropTypes.bool,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The current page.\n   */\n  page: PropTypes.number,\n\n  /**\n   * Render the item.\n   *\n   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.\n   * @returns {ReactNode}\n   * @default (item) => <PaginationItem {...item} />\n   */\n  renderItem: PropTypes.func,\n\n  /**\n   * The shape of the pagination items.\n   * @default 'circular'\n   */\n  shape: PropTypes.oneOf(['circular', 'rounded']),\n\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n\n  /**\n   * Number of always visible pages before and after the current page.\n   * @default 1\n   */\n  siblingCount: PropTypes.number,\n\n  /**\n   * The size of the pagination component.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPagination'\n})(Pagination);"]},"metadata":{},"sourceType":"module"}