{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    // Reset browser default style.\n    flexShrink: 0,\n    borderWidth: 0,\n    borderStyle: 'solid',\n    borderColor: theme.palette.divider,\n    borderBottomWidth: 'thin'\n  },\n\n  /* Styles applied to the root element if `absolute={true}`. */\n  absolute: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `variant=\"inset\"`. */\n  inset: {\n    marginLeft: 72\n  },\n\n  /* Styles applied to the root element if `variant=\"fullWidth\"`. */\n  fullWidth: {},\n\n  /* Styles applied to the root element if `light={true}`. */\n  light: {\n    borderColor: alpha(theme.palette.divider, 0.08)\n  },\n\n  /* Styles applied to the root element if `variant=\"middle\"`. */\n  middle: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    height: '100%',\n    borderBottomWidth: 0,\n    borderRightWidth: 'thin'\n  },\n\n  /* Styles applied to the root element if `flexItem={true}`. */\n  flexItem: {\n    alignSelf: 'stretch',\n    height: 'auto'\n  },\n\n  /* Styles applied to the root element if divider have text. */\n  withChildren: {\n    display: 'flex',\n    whiteSpace: 'nowrap',\n    textAlign: 'center',\n    border: 0,\n    '&::before, &::after': {\n      position: 'relative',\n      width: '100%',\n      borderColor: theme.palette.divider,\n      borderTop: 'thin',\n      borderLeft: 0,\n      borderRight: 0,\n      borderBottom: 0,\n      borderStyle: 'solid',\n      top: '50%',\n      content: '\"\"',\n      transform: 'translateY(50%)'\n    }\n  },\n\n  /* Styles applied to the root element if divider have text and `orientation=\"vertical\"`. */\n  withChildrenVertical: {\n    flexDirection: 'column',\n    '&::before, &::after': {\n      height: '100%',\n      top: '0%',\n      left: '50%',\n      borderColor: theme.palette.divider,\n      borderTop: 0,\n      borderLeft: 'thin',\n      borderStyle: 'solid',\n      transform: 'translateX(0%)'\n    }\n  },\n\n  /* Styles applied to the root element if `textAlign=\"right\" orientation=\"horizontal\"`. */\n  textAlignRight: {\n    '&::before': {\n      width: '90%'\n    },\n    '&::after': {\n      width: '10%'\n    }\n  },\n\n  /* Styles applied to the root element if `textAlign=\"left\" orientation=\"horizontal\"`. */\n  textAlignLeft: {\n    '&::before': {\n      width: '10%'\n    },\n    '&::after': {\n      width: '90%'\n    }\n  },\n\n  /* Styles applied to the span children element if `orientation=\"horizontal\"`. */\n  wrapper: {\n    display: 'inline-block',\n    paddingLeft: theme.spacing(1.2),\n    paddingRight: theme.spacing(1.2)\n  },\n\n  /* Styles applied to the span children element if `orientation=\"vertical\"`. */\n  wrapperVertical: {\n    paddingTop: theme.spacing(1.2),\n    paddingBottom: theme.spacing(1.2)\n  }\n});\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  const {\n    absolute = false,\n    classes,\n    className,\n    children,\n    component: Component = children ? 'div' : 'hr',\n    flexItem = false,\n    light = false,\n    orientation = 'horizontal',\n    role = Component !== 'hr' ? 'separator' : undefined,\n    textAlign = 'center',\n    variant = 'fullWidth'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"absolute\", \"classes\", \"className\", \"children\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"]);\n\n  const themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    absolute,\n    component: Component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  }), 'MuiDivider');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className, orientation === 'vertical' ? [classes.vertical, children && classes.withChildrenVertical] : {\n      'right': classes.textAlignRight,\n      'left': classes.textAlignLeft\n    }[textAlign], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, children && classes.withChildren),\n    role: role,\n    ref: ref\n  }, other), children ? /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.wrapper, orientation === 'vertical' && classes.wrapperVertical)\n  }, children) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Divider/Divider.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","useThemeVariants","withStyles","alpha","styles","theme","root","margin","flexShrink","borderWidth","borderStyle","borderColor","palette","divider","borderBottomWidth","absolute","position","bottom","left","width","inset","marginLeft","fullWidth","light","middle","spacing","marginRight","vertical","height","borderRightWidth","flexItem","alignSelf","withChildren","display","whiteSpace","textAlign","border","borderTop","borderLeft","borderRight","borderBottom","top","content","transform","withChildrenVertical","flexDirection","textAlignRight","textAlignLeft","wrapper","paddingLeft","paddingRight","wrapperVertical","paddingTop","paddingBottom","Divider","forwardRef","props","ref","classes","className","children","component","Component","orientation","role","undefined","variant","other","themeVariantsClasses","createElement","process","env","NODE_ENV","propTypes","bool","node","object","string","elementType","oneOf","oneOfType","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,OAAO,MAAMC,MAAM,GAAGC,KAAK,KAAK;AAC9B;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,CADJ;AAEJ;AACAC,IAAAA,UAAU,EAAE,CAHR;AAIJC,IAAAA,WAAW,EAAE,CAJT;AAKJC,IAAAA,WAAW,EAAE,OALT;AAMJC,IAAAA,WAAW,EAAEN,KAAK,CAACO,OAAN,CAAcC,OANvB;AAOJC,IAAAA,iBAAiB,EAAE;AAPf,GAFwB;;AAY9B;AACAC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,UADF;AAERC,IAAAA,MAAM,EAAE,CAFA;AAGRC,IAAAA,IAAI,EAAE,CAHE;AAIRC,IAAAA,KAAK,EAAE;AAJC,GAboB;;AAoB9B;AACAC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE;AADP,GArBuB;;AAyB9B;AACAC,EAAAA,SAAS,EAAE,EA1BmB;;AA4B9B;AACAC,EAAAA,KAAK,EAAE;AACLZ,IAAAA,WAAW,EAAER,KAAK,CAACE,KAAK,CAACO,OAAN,CAAcC,OAAf,EAAwB,IAAxB;AADb,GA7BuB;;AAiC9B;AACAW,EAAAA,MAAM,EAAE;AACNH,IAAAA,UAAU,EAAEhB,KAAK,CAACoB,OAAN,CAAc,CAAd,CADN;AAENC,IAAAA,WAAW,EAAErB,KAAK,CAACoB,OAAN,CAAc,CAAd;AAFP,GAlCsB;;AAuC9B;AACAE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,MAAM,EAAE,MADA;AAERd,IAAAA,iBAAiB,EAAE,CAFX;AAGRe,IAAAA,gBAAgB,EAAE;AAHV,GAxCoB;;AA8C9B;AACAC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,SADH;AAERH,IAAAA,MAAM,EAAE;AAFA,GA/CoB;;AAoD9B;AACAI,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,UAAU,EAAE,QAFA;AAGZC,IAAAA,SAAS,EAAE,QAHC;AAIZC,IAAAA,MAAM,EAAE,CAJI;AAKZ,2BAAuB;AACrBpB,MAAAA,QAAQ,EAAE,UADW;AAErBG,MAAAA,KAAK,EAAE,MAFc;AAGrBR,MAAAA,WAAW,EAAEN,KAAK,CAACO,OAAN,CAAcC,OAHN;AAIrBwB,MAAAA,SAAS,EAAE,MAJU;AAKrBC,MAAAA,UAAU,EAAE,CALS;AAMrBC,MAAAA,WAAW,EAAE,CANQ;AAOrBC,MAAAA,YAAY,EAAE,CAPO;AAQrB9B,MAAAA,WAAW,EAAE,OARQ;AASrB+B,MAAAA,GAAG,EAAE,KATgB;AAUrBC,MAAAA,OAAO,EAAE,IAVY;AAWrBC,MAAAA,SAAS,EAAE;AAXU;AALX,GArDgB;;AAyE9B;AACAC,EAAAA,oBAAoB,EAAE;AACpBC,IAAAA,aAAa,EAAE,QADK;AAEpB,2BAAuB;AACrBjB,MAAAA,MAAM,EAAE,MADa;AAErBa,MAAAA,GAAG,EAAE,IAFgB;AAGrBvB,MAAAA,IAAI,EAAE,KAHe;AAIrBP,MAAAA,WAAW,EAAEN,KAAK,CAACO,OAAN,CAAcC,OAJN;AAKrBwB,MAAAA,SAAS,EAAE,CALU;AAMrBC,MAAAA,UAAU,EAAE,MANS;AAOrB5B,MAAAA,WAAW,EAAE,OAPQ;AAQrBiC,MAAAA,SAAS,EAAE;AARU;AAFH,GA1EQ;;AAwF9B;AACAG,EAAAA,cAAc,EAAE;AACd,iBAAa;AACX3B,MAAAA,KAAK,EAAE;AADI,KADC;AAId,gBAAY;AACVA,MAAAA,KAAK,EAAE;AADG;AAJE,GAzFc;;AAkG9B;AACA4B,EAAAA,aAAa,EAAE;AACb,iBAAa;AACX5B,MAAAA,KAAK,EAAE;AADI,KADA;AAIb,gBAAY;AACVA,MAAAA,KAAK,EAAE;AADG;AAJC,GAnGe;;AA4G9B;AACA6B,EAAAA,OAAO,EAAE;AACPf,IAAAA,OAAO,EAAE,cADF;AAEPgB,IAAAA,WAAW,EAAE5C,KAAK,CAACoB,OAAN,CAAc,GAAd,CAFN;AAGPyB,IAAAA,YAAY,EAAE7C,KAAK,CAACoB,OAAN,CAAc,GAAd;AAHP,GA7GqB;;AAmH9B;AACA0B,EAAAA,eAAe,EAAE;AACfC,IAAAA,UAAU,EAAE/C,KAAK,CAACoB,OAAN,CAAc,GAAd,CADG;AAEf4B,IAAAA,aAAa,EAAEhD,KAAK,CAACoB,OAAN,CAAc,GAAd;AAFA;AApHa,CAAL,CAApB;AAyHP,MAAM6B,OAAO,GAAG,aAAaxD,KAAK,CAACyD,UAAN,CAAiB,SAASD,OAAT,CAAiBE,KAAjB,EAAwBC,GAAxB,EAA6B;AACzE,QAAM;AACJ1C,IAAAA,QAAQ,GAAG,KADP;AAEJ2C,IAAAA,OAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,SAAS,EAAEC,SAAS,GAAGF,QAAQ,GAAG,KAAH,GAAW,IALtC;AAMJ9B,IAAAA,QAAQ,GAAG,KANP;AAOJP,IAAAA,KAAK,GAAG,KAPJ;AAQJwC,IAAAA,WAAW,GAAG,YARV;AASJC,IAAAA,IAAI,GAAGF,SAAS,KAAK,IAAd,GAAqB,WAArB,GAAmCG,SATtC;AAUJ9B,IAAAA,SAAS,GAAG,QAVR;AAWJ+B,IAAAA,OAAO,GAAG;AAXN,MAYFV,KAZJ;AAAA,QAaMW,KAAK,GAAGtE,6BAA6B,CAAC2D,KAAD,EAAQ,CAAC,UAAD,EAAa,SAAb,EAAwB,WAAxB,EAAqC,UAArC,EAAiD,WAAjD,EAA8D,UAA9D,EAA0E,OAA1E,EAAmF,aAAnF,EAAkG,MAAlG,EAA0G,WAA1G,EAAuH,SAAvH,CAAR,CAb3C;;AAeA,QAAMY,oBAAoB,GAAGnE,gBAAgB,CAACL,QAAQ,CAAC,EAAD,EAAK4D,KAAL,EAAY;AAChEzC,IAAAA,QADgE;AAEhE8C,IAAAA,SAAS,EAAEC,SAFqD;AAGhEhC,IAAAA,QAHgE;AAIhEP,IAAAA,KAJgE;AAKhEwC,IAAAA,WALgE;AAMhEC,IAAAA,IANgE;AAOhE7B,IAAAA,SAPgE;AAQhE+B,IAAAA;AARgE,GAAZ,CAAT,EASzC,YATyC,CAA7C;AAUA,SAAO,aAAapE,KAAK,CAACuE,aAAN,CAAoBP,SAApB,EAA+BlE,QAAQ,CAAC;AAC1D+D,IAAAA,SAAS,EAAE3D,IAAI,CAAC0D,OAAO,CAACpD,IAAT,EAAeoD,OAAO,CAACQ,OAAD,CAAtB,EAAiCE,oBAAjC,EAAuDT,SAAvD,EAAkEI,WAAW,KAAK,UAAhB,GAA6B,CAACL,OAAO,CAAC/B,QAAT,EAAmBiC,QAAQ,IAAIF,OAAO,CAACd,oBAAvC,CAA7B,GAA4F;AAC3K,eAASc,OAAO,CAACZ,cAD0J;AAE3K,cAAQY,OAAO,CAACX;AAF2J,MAG3KZ,SAH2K,CAA9J,EAGDpB,QAAQ,IAAI2C,OAAO,CAAC3C,QAHnB,EAG6Be,QAAQ,IAAI4B,OAAO,CAAC5B,QAHjD,EAG2DP,KAAK,IAAImC,OAAO,CAACnC,KAH5E,EAGmFqC,QAAQ,IAAIF,OAAO,CAAC1B,YAHvG,CAD2C;AAK1DgC,IAAAA,IAAI,EAAEA,IALoD;AAM1DP,IAAAA,GAAG,EAAEA;AANqD,GAAD,EAOxDU,KAPwD,CAAvC,EAOTP,QAAQ,GAAG,aAAa9D,KAAK,CAACuE,aAAN,CAAoB,MAApB,EAA4B;AAC7DV,IAAAA,SAAS,EAAE3D,IAAI,CAAC0D,OAAO,CAACV,OAAT,EAAkBe,WAAW,KAAK,UAAhB,IAA8BL,OAAO,CAACP,eAAxD;AAD8C,GAA5B,EAEhCS,QAFgC,CAAhB,GAEJ,IATK,CAApB;AAUD,CApC4B,CAA7B;AAqCAU,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwClB,OAAO,CAACmB,SAAR,GAAoB;AAC1D;AACA;AACA;AACA;;AAEA;;;;AAIA1D,EAAAA,QAAQ,EAAEhB,SAAS,CAAC2E,IAVsC;;AAY1D;;;AAGAd,EAAAA,QAAQ,EAAE7D,SAAS,CAAC4E,IAfsC;;AAiB1D;;;AAGAjB,EAAAA,OAAO,EAAE3D,SAAS,CAAC6E,MApBuC;;AAsB1D;;;AAGAjB,EAAAA,SAAS,EAAE5D,SAAS,CAAC8E,MAzBqC;;AA2B1D;;;;AAIAhB,EAAAA,SAAS,EAAE9D,SAAS,CAAC+E,WA/BqC;;AAiC1D;;;;;AAKAhD,EAAAA,QAAQ,EAAE/B,SAAS,CAAC2E,IAtCsC;;AAwC1D;;;;AAIAnD,EAAAA,KAAK,EAAExB,SAAS,CAAC2E,IA5CyC;;AA8C1D;;;;AAIAX,EAAAA,WAAW,EAAEhE,SAAS,CAACgF,KAAV,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB,CAlD6C;;AAoD1D;;;AAGAf,EAAAA,IAAI,EAAEjE,SAAS,CAAC8E,MAvD0C;;AAyD1D;;;;AAIA1C,EAAAA,SAAS,EAAEpC,SAAS,CAACgF,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,CAAhB,CA7D+C;;AA+D1D;;;;AAIAb,EAAAA,OAAO,EAAEnE;AACT;AADkB,GAEjBiF,SAFQ,CAEE,CAACjF,SAAS,CAACgF,KAAV,CAAgB,CAAC,WAAD,EAAc,OAAd,EAAuB,QAAvB,CAAhB,CAAD,EAAoDhF,SAAS,CAAC8E,MAA9D,CAFF;AAnEiD,CAA5D,GAsEI,KAAK,CAtET;AAuEA,eAAe3E,UAAU,CAACE,MAAD,EAAS;AAChC6E,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZ3B,OAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    // Reset browser default style.\n    flexShrink: 0,\n    borderWidth: 0,\n    borderStyle: 'solid',\n    borderColor: theme.palette.divider,\n    borderBottomWidth: 'thin'\n  },\n\n  /* Styles applied to the root element if `absolute={true}`. */\n  absolute: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `variant=\"inset\"`. */\n  inset: {\n    marginLeft: 72\n  },\n\n  /* Styles applied to the root element if `variant=\"fullWidth\"`. */\n  fullWidth: {},\n\n  /* Styles applied to the root element if `light={true}`. */\n  light: {\n    borderColor: alpha(theme.palette.divider, 0.08)\n  },\n\n  /* Styles applied to the root element if `variant=\"middle\"`. */\n  middle: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    height: '100%',\n    borderBottomWidth: 0,\n    borderRightWidth: 'thin'\n  },\n\n  /* Styles applied to the root element if `flexItem={true}`. */\n  flexItem: {\n    alignSelf: 'stretch',\n    height: 'auto'\n  },\n\n  /* Styles applied to the root element if divider have text. */\n  withChildren: {\n    display: 'flex',\n    whiteSpace: 'nowrap',\n    textAlign: 'center',\n    border: 0,\n    '&::before, &::after': {\n      position: 'relative',\n      width: '100%',\n      borderColor: theme.palette.divider,\n      borderTop: 'thin',\n      borderLeft: 0,\n      borderRight: 0,\n      borderBottom: 0,\n      borderStyle: 'solid',\n      top: '50%',\n      content: '\"\"',\n      transform: 'translateY(50%)'\n    }\n  },\n\n  /* Styles applied to the root element if divider have text and `orientation=\"vertical\"`. */\n  withChildrenVertical: {\n    flexDirection: 'column',\n    '&::before, &::after': {\n      height: '100%',\n      top: '0%',\n      left: '50%',\n      borderColor: theme.palette.divider,\n      borderTop: 0,\n      borderLeft: 'thin',\n      borderStyle: 'solid',\n      transform: 'translateX(0%)'\n    }\n  },\n\n  /* Styles applied to the root element if `textAlign=\"right\" orientation=\"horizontal\"`. */\n  textAlignRight: {\n    '&::before': {\n      width: '90%'\n    },\n    '&::after': {\n      width: '10%'\n    }\n  },\n\n  /* Styles applied to the root element if `textAlign=\"left\" orientation=\"horizontal\"`. */\n  textAlignLeft: {\n    '&::before': {\n      width: '10%'\n    },\n    '&::after': {\n      width: '90%'\n    }\n  },\n\n  /* Styles applied to the span children element if `orientation=\"horizontal\"`. */\n  wrapper: {\n    display: 'inline-block',\n    paddingLeft: theme.spacing(1.2),\n    paddingRight: theme.spacing(1.2)\n  },\n\n  /* Styles applied to the span children element if `orientation=\"vertical\"`. */\n  wrapperVertical: {\n    paddingTop: theme.spacing(1.2),\n    paddingBottom: theme.spacing(1.2)\n  }\n});\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(props, ref) {\n  const {\n    absolute = false,\n    classes,\n    className,\n    children,\n    component: Component = children ? 'div' : 'hr',\n    flexItem = false,\n    light = false,\n    orientation = 'horizontal',\n    role = Component !== 'hr' ? 'separator' : undefined,\n    textAlign = 'center',\n    variant = 'fullWidth'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"absolute\", \"classes\", \"className\", \"children\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"]);\n\n  const themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    absolute,\n    component: Component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  }), 'MuiDivider');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className, orientation === 'vertical' ? [classes.vertical, children && classes.withChildrenVertical] : {\n      'right': classes.textAlignRight,\n      'left': classes.textAlignLeft\n    }[textAlign], absolute && classes.absolute, flexItem && classes.flexItem, light && classes.light, children && classes.withChildren),\n    role: role,\n    ref: ref\n  }, other), children ? /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.wrapper, orientation === 'vertical' && classes.wrapperVertical)\n  }, children) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   */\n  light: PropTypes.bool,\n\n  /**\n   * The divider orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDivider'\n})(Divider);"]},"metadata":{},"sourceType":"module"}