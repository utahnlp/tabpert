{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\n\nconst styles = theme => {\n  const hidden = {\n    display: 'none'\n  };\n  return theme.breakpoints.keys.reduce((acc, key) => {\n    acc[`only${capitalize(key)}`] = {\n      [theme.breakpoints.only(key)]: hidden\n    };\n    acc[`${key}Up`] = {\n      [theme.breakpoints.up(key)]: hidden\n    };\n    acc[`${key}Down`] = {\n      [theme.breakpoints.down(key)]: hidden\n    };\n    return acc;\n  }, {});\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction HiddenCss(props) {\n  const {\n    children,\n    classes,\n    className,\n    only\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"only\"]);\n\n  const theme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    const unknownProps = Object.keys(other).filter(propName => {\n      const isUndeclaredBreakpoint = !theme.breakpoints.keys.some(breakpoint => {\n        return `${breakpoint}Up` === propName || `${breakpoint}Down` === propName;\n      });\n      return isUndeclaredBreakpoint;\n    });\n\n    if (unknownProps.length > 0) {\n      console.error(`Material-UI: Unsupported props received by \\`<Hidden implementation=\"css\" />\\`: ${unknownProps.join(', ')}. Did you forget to wrap this component in a ThemeProvider declaring these breakpoints?`);\n    }\n  }\n\n  const clsx = [];\n\n  if (className) {\n    clsx.push(className);\n  }\n\n  for (let i = 0; i < theme.breakpoints.keys.length; i += 1) {\n    const breakpoint = theme.breakpoints.keys[i];\n    const breakpointUp = props[`${breakpoint}Up`];\n    const breakpointDown = props[`${breakpoint}Down`];\n\n    if (breakpointUp) {\n      clsx.push(classes[`${breakpoint}Up`]);\n    }\n\n    if (breakpointDown) {\n      clsx.push(classes[`${breakpoint}Down`]);\n    }\n  }\n\n  if (only) {\n    const onlyBreakpoints = Array.isArray(only) ? only : [only];\n    onlyBreakpoints.forEach(breakpoint => {\n      clsx.push(classes[`only${capitalize(breakpoint)}`]);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx.join(' ')\n  }, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? HiddenCss.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify which implementation to use.  'js' is the default, 'css' works better for\n   * server-side rendering.\n   */\n  implementation: PropTypes.oneOf(['js', 'css']),\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  lgDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  lgUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  mdDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  mdUp: PropTypes.bool,\n\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: PropTypes.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  smDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  smUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  xlDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  xlUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  xsDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  xsUp: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateHiddenCss'\n})(HiddenCss);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Hidden/HiddenCss.js"],"names":["_objectWithoutPropertiesLoose","React","PropTypes","capitalize","withStyles","useTheme","styles","theme","hidden","display","breakpoints","keys","reduce","acc","key","only","up","down","HiddenCss","props","children","classes","className","other","process","env","NODE_ENV","unknownProps","Object","filter","propName","isUndeclaredBreakpoint","some","breakpoint","length","console","error","join","clsx","push","i","breakpointUp","breakpointDown","onlyBreakpoints","Array","isArray","forEach","createElement","propTypes","node","object","isRequired","string","implementation","oneOf","lgDown","bool","lgUp","mdDown","mdUp","oneOfType","arrayOf","smDown","smUp","xlDown","xlUp","xsDown","xsUp","name"],"mappings":"AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AADI,GAAf;AAGA,SAAOF,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBC,MAAvB,CAA8B,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjDD,IAAAA,GAAG,CAAE,OAAMV,UAAU,CAACW,GAAD,CAAM,EAAxB,CAAH,GAAgC;AAC9B,OAACP,KAAK,CAACG,WAAN,CAAkBK,IAAlB,CAAuBD,GAAvB,CAAD,GAA+BN;AADD,KAAhC;AAGAK,IAAAA,GAAG,CAAE,GAAEC,GAAI,IAAR,CAAH,GAAkB;AAChB,OAACP,KAAK,CAACG,WAAN,CAAkBM,EAAlB,CAAqBF,GAArB,CAAD,GAA6BN;AADb,KAAlB;AAGAK,IAAAA,GAAG,CAAE,GAAEC,GAAI,MAAR,CAAH,GAAoB;AAClB,OAACP,KAAK,CAACG,WAAN,CAAkBO,IAAlB,CAAuBH,GAAvB,CAAD,GAA+BN;AADb,KAApB;AAGA,WAAOK,GAAP;AACD,GAXM,EAWJ,EAXI,CAAP;AAYD,CAhBD;AAiBA;;;;;AAKA,SAASK,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,SAHI;AAIJP,IAAAA;AAJI,MAKFI,KALJ;AAAA,QAMMI,KAAK,GAAGvB,6BAA6B,CAACmB,KAAD,EAAQ,CAAC,UAAD,EAAa,SAAb,EAAwB,WAAxB,EAAqC,MAArC,CAAR,CAN3C;;AAQA,QAAMZ,KAAK,GAAGF,QAAQ,EAAtB;;AAEA,MAAImB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAMC,YAAY,GAAGC,MAAM,CAACjB,IAAP,CAAYY,KAAZ,EAAmBM,MAAnB,CAA0BC,QAAQ,IAAI;AACzD,YAAMC,sBAAsB,GAAG,CAACxB,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBqB,IAAvB,CAA4BC,UAAU,IAAI;AACxE,eAAQ,GAAEA,UAAW,IAAd,KAAsBH,QAAtB,IAAmC,GAAEG,UAAW,MAAd,KAAwBH,QAAjE;AACD,OAF+B,CAAhC;AAGA,aAAOC,sBAAP;AACD,KALoB,CAArB;;AAOA,QAAIJ,YAAY,CAACO,MAAb,GAAsB,CAA1B,EAA6B;AAC3BC,MAAAA,OAAO,CAACC,KAAR,CAAe,mFAAkFT,YAAY,CAACU,IAAb,CAAkB,IAAlB,CAAwB,yFAAzH;AACD;AACF;;AAED,QAAMC,IAAI,GAAG,EAAb;;AAEA,MAAIhB,SAAJ,EAAe;AACbgB,IAAAA,IAAI,CAACC,IAAL,CAAUjB,SAAV;AACD;;AAED,OAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjC,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuBuB,MAA3C,EAAmDM,CAAC,IAAI,CAAxD,EAA2D;AACzD,UAAMP,UAAU,GAAG1B,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB6B,CAAvB,CAAnB;AACA,UAAMC,YAAY,GAAGtB,KAAK,CAAE,GAAEc,UAAW,IAAf,CAA1B;AACA,UAAMS,cAAc,GAAGvB,KAAK,CAAE,GAAEc,UAAW,MAAf,CAA5B;;AAEA,QAAIQ,YAAJ,EAAkB;AAChBH,MAAAA,IAAI,CAACC,IAAL,CAAUlB,OAAO,CAAE,GAAEY,UAAW,IAAf,CAAjB;AACD;;AAED,QAAIS,cAAJ,EAAoB;AAClBJ,MAAAA,IAAI,CAACC,IAAL,CAAUlB,OAAO,CAAE,GAAEY,UAAW,MAAf,CAAjB;AACD;AACF;;AAED,MAAIlB,IAAJ,EAAU;AACR,UAAM4B,eAAe,GAAGC,KAAK,CAACC,OAAN,CAAc9B,IAAd,IAAsBA,IAAtB,GAA6B,CAACA,IAAD,CAArD;AACA4B,IAAAA,eAAe,CAACG,OAAhB,CAAwBb,UAAU,IAAI;AACpCK,MAAAA,IAAI,CAACC,IAAL,CAAUlB,OAAO,CAAE,OAAMlB,UAAU,CAAC8B,UAAD,CAAa,EAA/B,CAAjB;AACD,KAFD;AAGD;;AAED,SAAO,aAAahC,KAAK,CAAC8C,aAAN,CAAoB,KAApB,EAA2B;AAC7CzB,IAAAA,SAAS,EAAEgB,IAAI,CAACD,IAAL,CAAU,GAAV;AADkC,GAA3B,EAEjBjB,QAFiB,CAApB;AAGD;;AAEDI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCR,SAAS,CAAC8B,SAAV,GAAsB;AAC5D;;;AAGA5B,EAAAA,QAAQ,EAAElB,SAAS,CAAC+C,IAJwC;;AAM5D;;;;AAIA5B,EAAAA,OAAO,EAAEnB,SAAS,CAACgD,MAAV,CAAiBC,UAVkC;;AAY5D;;;AAGA7B,EAAAA,SAAS,EAAEpB,SAAS,CAACkD,MAfuC;;AAiB5D;;;;AAIAC,EAAAA,cAAc,EAAEnD,SAAS,CAACoD,KAAV,CAAgB,CAAC,IAAD,EAAO,KAAP,CAAhB,CArB4C;;AAuB5D;;;AAGAC,EAAAA,MAAM,EAAErD,SAAS,CAACsD,IA1B0C;;AA4B5D;;;AAGAC,EAAAA,IAAI,EAAEvD,SAAS,CAACsD,IA/B4C;;AAiC5D;;;AAGAE,EAAAA,MAAM,EAAExD,SAAS,CAACsD,IApC0C;;AAsC5D;;;AAGAG,EAAAA,IAAI,EAAEzD,SAAS,CAACsD,IAzC4C;;AA2C5D;;;AAGAzC,EAAAA,IAAI,EAAEb,SAAS,CAAC0D,SAAV,CAAoB,CAAC1D,SAAS,CAACoD,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAAhB,CAAD,EAAkDpD,SAAS,CAAC2D,OAAV,CAAkB3D,SAAS,CAACoD,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,CAAhB,CAAlB,CAAlD,CAApB,CA9CsD;;AAgD5D;;;AAGAQ,EAAAA,MAAM,EAAE5D,SAAS,CAACsD,IAnD0C;;AAqD5D;;;AAGAO,EAAAA,IAAI,EAAE7D,SAAS,CAACsD,IAxD4C;;AA0D5D;;;AAGAQ,EAAAA,MAAM,EAAE9D,SAAS,CAACsD,IA7D0C;;AA+D5D;;;AAGAS,EAAAA,IAAI,EAAE/D,SAAS,CAACsD,IAlE4C;;AAoE5D;;;AAGAU,EAAAA,MAAM,EAAEhE,SAAS,CAACsD,IAvE0C;;AAyE5D;;;AAGAW,EAAAA,IAAI,EAAEjE,SAAS,CAACsD;AA5E4C,CAA9D,GA6EI,KAAK,CA7ET;AA8EA,eAAepD,UAAU,CAACE,MAAD,EAAS;AAChC8D,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZlD,SAFY,CAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\n\nconst styles = theme => {\n  const hidden = {\n    display: 'none'\n  };\n  return theme.breakpoints.keys.reduce((acc, key) => {\n    acc[`only${capitalize(key)}`] = {\n      [theme.breakpoints.only(key)]: hidden\n    };\n    acc[`${key}Up`] = {\n      [theme.breakpoints.up(key)]: hidden\n    };\n    acc[`${key}Down`] = {\n      [theme.breakpoints.down(key)]: hidden\n    };\n    return acc;\n  }, {});\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction HiddenCss(props) {\n  const {\n    children,\n    classes,\n    className,\n    only\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"only\"]);\n\n  const theme = useTheme();\n\n  if (process.env.NODE_ENV !== 'production') {\n    const unknownProps = Object.keys(other).filter(propName => {\n      const isUndeclaredBreakpoint = !theme.breakpoints.keys.some(breakpoint => {\n        return `${breakpoint}Up` === propName || `${breakpoint}Down` === propName;\n      });\n      return isUndeclaredBreakpoint;\n    });\n\n    if (unknownProps.length > 0) {\n      console.error(`Material-UI: Unsupported props received by \\`<Hidden implementation=\"css\" />\\`: ${unknownProps.join(', ')}. Did you forget to wrap this component in a ThemeProvider declaring these breakpoints?`);\n    }\n  }\n\n  const clsx = [];\n\n  if (className) {\n    clsx.push(className);\n  }\n\n  for (let i = 0; i < theme.breakpoints.keys.length; i += 1) {\n    const breakpoint = theme.breakpoints.keys[i];\n    const breakpointUp = props[`${breakpoint}Up`];\n    const breakpointDown = props[`${breakpoint}Down`];\n\n    if (breakpointUp) {\n      clsx.push(classes[`${breakpoint}Up`]);\n    }\n\n    if (breakpointDown) {\n      clsx.push(classes[`${breakpoint}Down`]);\n    }\n  }\n\n  if (only) {\n    const onlyBreakpoints = Array.isArray(only) ? only : [only];\n    onlyBreakpoints.forEach(breakpoint => {\n      clsx.push(classes[`only${capitalize(breakpoint)}`]);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx.join(' ')\n  }, children);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? HiddenCss.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify which implementation to use.  'js' is the default, 'css' works better for\n   * server-side rendering.\n   */\n  implementation: PropTypes.oneOf(['js', 'css']),\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  lgDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  lgUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  mdDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  mdUp: PropTypes.bool,\n\n  /**\n   * Hide the given breakpoint(s).\n   */\n  only: PropTypes.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']), PropTypes.arrayOf(PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']))]),\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  smDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  smUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  xlDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  xlUp: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and down will be hidden.\n   */\n  xsDown: PropTypes.bool,\n\n  /**\n   * If `true`, screens this size and up will be hidden.\n   */\n  xsUp: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateHiddenCss'\n})(HiddenCss);"]},"metadata":{},"sourceType":"module"}