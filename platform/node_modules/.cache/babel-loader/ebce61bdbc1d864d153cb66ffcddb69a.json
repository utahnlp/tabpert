{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport const styles = theme => {\n  const top1 = {\n    top: 8\n  };\n  const bottom1 = {\n    bottom: 8\n  };\n  const right = {\n    justifyContent: 'flex-end'\n  };\n  const left = {\n    justifyContent: 'flex-start'\n  };\n  const top3 = {\n    top: 24\n  };\n  const bottom3 = {\n    bottom: 24\n  };\n  const right3 = {\n    right: 24\n  };\n  const left3 = {\n    left: 24\n  };\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, {\n      [theme.breakpoints.up('sm')]: _extends({}, top3, center)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, {\n      [theme.breakpoints.up('sm')]: _extends({}, bottom3, center)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, {\n      [theme.breakpoints.up('sm')]: _extends({\n        left: 'auto'\n      }, top3, right3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, {\n      [theme.breakpoints.up('sm')]: _extends({\n        left: 'auto'\n      }, bottom3, right3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, {\n      [theme.breakpoints.up('sm')]: _extends({\n        right: 'auto'\n      }, top3, left3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, {\n      [theme.breakpoints.up('sm')]: _extends({\n        right: 'auto'\n      }, bottom3, left3)\n    })\n  };\n};\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  const {\n    action,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    } = {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    autoHideDuration = null,\n    children,\n    classes,\n    className,\n    ClickAwayListenerProps,\n    ContentProps,\n    disableWindowBlurListener = false,\n    message,\n    onClose,\n    onMouseEnter,\n    onMouseLeave,\n    open,\n    resumeHideDuration,\n    TransitionComponent = Grow,\n    transitionDuration = {\n      enter: duration.enteringScreen,\n      exit: duration.leavingScreen\n    },\n    TransitionProps: {\n      onEnter,\n      onExited\n    } = {}\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, [\"onEnter\", \"onExited\"]),\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  const timerAutoHide = React.useRef();\n  const [exited, setExited] = React.useState(true);\n  const handleClose = useEventCallback((...args) => {\n    if (onClose) {\n      onClose(...args);\n    }\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  const handleMouseEnter = event => {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  const handleClickAway = event => {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  const handleExited = node => {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[`anchorOrigin${capitalize(vertical)}${capitalize(horizontal)}`], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up',\n    onEnter: handleEnter,\n    onExited: handleExited\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Snackbar/Snackbar.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","withStyles","duration","ClickAwayListener","useEventCallback","capitalize","Grow","SnackbarContent","styles","theme","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","root","zIndex","snackbar","position","display","alignItems","anchorOriginTopCenter","breakpoints","up","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","Snackbar","forwardRef","props","ref","action","anchorOrigin","vertical","horizontal","autoHideDuration","children","classes","className","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","message","onClose","onMouseEnter","onMouseLeave","open","resumeHideDuration","TransitionComponent","transitionDuration","enter","enteringScreen","exit","leavingScreen","TransitionProps","onEnter","onExited","other","timerAutoHide","useRef","exited","setExited","useState","handleClose","args","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","useEffect","handlePause","handleResume","useCallback","handleMouseEnter","event","handleMouseLeave","handleClickAway","handleExited","node","handleEnter","isAppearing","window","addEventListener","removeEventListener","undefined","createElement","onClickAway","appear","in","timeout","direction","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","number","element","object","string","bool","key","any","func","elementType","oneOfType","flip","name"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport const styles = theme => {\n  const top1 = {\n    top: 8\n  };\n  const bottom1 = {\n    bottom: 8\n  };\n  const right = {\n    justifyContent: 'flex-end'\n  };\n  const left = {\n    justifyContent: 'flex-start'\n  };\n  const top3 = {\n    top: 24\n  };\n  const bottom3 = {\n    bottom: 24\n  };\n  const right3 = {\n    right: 24\n  };\n  const left3 = {\n    left: 24\n  };\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, {\n      [theme.breakpoints.up('sm')]: _extends({}, top3, center)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, {\n      [theme.breakpoints.up('sm')]: _extends({}, bottom3, center)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, {\n      [theme.breakpoints.up('sm')]: _extends({\n        left: 'auto'\n      }, top3, right3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, {\n      [theme.breakpoints.up('sm')]: _extends({\n        left: 'auto'\n      }, bottom3, right3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, {\n      [theme.breakpoints.up('sm')]: _extends({\n        right: 'auto'\n      }, top3, left3)\n    }),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, {\n      [theme.breakpoints.up('sm')]: _extends({\n        right: 'auto'\n      }, bottom3, left3)\n    })\n  };\n};\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  const {\n    action,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    } = {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    autoHideDuration = null,\n    children,\n    classes,\n    className,\n    ClickAwayListenerProps,\n    ContentProps,\n    disableWindowBlurListener = false,\n    message,\n    onClose,\n    onMouseEnter,\n    onMouseLeave,\n    open,\n    resumeHideDuration,\n    TransitionComponent = Grow,\n    transitionDuration = {\n      enter: duration.enteringScreen,\n      exit: duration.leavingScreen\n    },\n    TransitionProps: {\n      onEnter,\n      onExited\n    } = {}\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, [\"onEnter\", \"onExited\"]),\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  const timerAutoHide = React.useRef();\n  const [exited, setExited] = React.useState(true);\n  const handleClose = useEventCallback((...args) => {\n    if (onClose) {\n      onClose(...args);\n    }\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  const handleMouseEnter = event => {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  const handleClickAway = event => {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  const handleExited = node => {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[`anchorOrigin${capitalize(vertical)}${capitalize(horizontal)}`], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up',\n    onEnter: handleEnter,\n    onExited: handleExited\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);"]},"metadata":{},"sourceType":"module"}