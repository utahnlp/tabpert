{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { duration } from '../styles/transitions';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport { ownerWindow } from '../utils'; // Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `none`.`\n\nfunction getTranslateValue(direction, node) {\n  const rect = node.getBoundingClientRect();\n  const containerWindow = ownerWindow(node);\n  let transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    const computedStyle = containerWindow.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    const transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return `translateX(${containerWindow.innerWidth}px) translateX(${offsetX - rect.left}px)`;\n  }\n\n  if (direction === 'right') {\n    return `translateX(-${rect.left + rect.width - offsetX}px)`;\n  }\n\n  if (direction === 'up') {\n    return `translateY(${containerWindow.innerHeight}px) translateY(${offsetY - rect.top}px)`;\n  } // direction === 'down'\n\n\n  return `translateY(-${rect.top + rect.height - offsetY}px)`;\n}\n\nexport function setTranslateValue(direction, node) {\n  const transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nconst defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  const {\n    children,\n    direction = 'down',\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"direction\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const theme = useTheme();\n  const childrenRef = React.useRef(null);\n  const handleRefIntermediary = useForkRef(children.ref, childrenRef);\n  const handleRef = useForkRef(handleRefIntermediary, ref);\n\n  const normalizedTransitionCallback = callback => isAppearing => {\n    if (callback) {\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (isAppearing === undefined) {\n        callback(childrenRef.current);\n      } else {\n        callback(childrenRef.current, isAppearing);\n      }\n    }\n  };\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(node => {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  const updatePosition = React.useCallback(() => {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n  React.useEffect(() => {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    const handleResize = debounce(() => {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n    const containerWindow = ownerWindow(childrenRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n  React.useEffect(() => {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    appear: true,\n    in: inProp,\n    timeout: timeout\n  }, other), (state, childProps) => {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      ref: handleRef,\n      style: _extends({\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, style, children.props.style)\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * Direction the child node will enter from.\n   * @default 'down'\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Slide;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Slide/Slide.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","Transition","elementAcceptingRef","debounce","useForkRef","useTheme","duration","reflow","getTransitionProps","ownerWindow","getTranslateValue","direction","node","rect","getBoundingClientRect","containerWindow","transform","fakeTransform","computedStyle","getComputedStyle","getPropertyValue","offsetX","offsetY","transformValues","split","parseInt","innerWidth","left","width","innerHeight","top","height","setTranslateValue","style","webkitTransform","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Slide","forwardRef","props","ref","children","in","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","timeout","TransitionComponent","other","theme","childrenRef","useRef","handleRefIntermediary","handleRef","normalizedTransitionCallback","callback","isAppearing","undefined","current","handleEnter","handleEntering","transitionProps","mode","webkitTransition","transitions","create","easing","easeOut","transition","handleEntered","handleExiting","handleExit","sharp","handleExited","updatePosition","useCallback","useEffect","handleResize","addEventListener","clear","removeEventListener","createElement","nodeRef","appear","state","childProps","cloneElement","visibility","process","env","NODE_ENV","propTypes","oneOf","bool","func","object","oneOfType","number","shape"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,mBAAT,QAAoC,oBAApC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,MAAT,EAAiBC,kBAAjB,QAA2C,sBAA3C;AACA,SAASC,WAAT,QAA4B,UAA5B,C,CAAwC;AACxC;AACA;;AAEA,SAASC,iBAAT,CAA2BC,SAA3B,EAAsCC,IAAtC,EAA4C;AAC1C,QAAMC,IAAI,GAAGD,IAAI,CAACE,qBAAL,EAAb;AACA,QAAMC,eAAe,GAAGN,WAAW,CAACG,IAAD,CAAnC;AACA,MAAII,SAAJ;;AAEA,MAAIJ,IAAI,CAACK,aAAT,EAAwB;AACtBD,IAAAA,SAAS,GAAGJ,IAAI,CAACK,aAAjB;AACD,GAFD,MAEO;AACL,UAAMC,aAAa,GAAGH,eAAe,CAACI,gBAAhB,CAAiCP,IAAjC,CAAtB;AACAI,IAAAA,SAAS,GAAGE,aAAa,CAACE,gBAAd,CAA+B,mBAA/B,KAAuDF,aAAa,CAACE,gBAAd,CAA+B,WAA/B,CAAnE;AACD;;AAED,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,OAAO,GAAG,CAAd;;AAEA,MAAIN,SAAS,IAAIA,SAAS,KAAK,MAA3B,IAAqC,OAAOA,SAAP,KAAqB,QAA9D,EAAwE;AACtE,UAAMO,eAAe,GAAGP,SAAS,CAACQ,KAAV,CAAgB,GAAhB,EAAqB,CAArB,EAAwBA,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,EAAsCA,KAAtC,CAA4C,GAA5C,CAAxB;AACAH,IAAAA,OAAO,GAAGI,QAAQ,CAACF,eAAe,CAAC,CAAD,CAAhB,EAAqB,EAArB,CAAlB;AACAD,IAAAA,OAAO,GAAGG,QAAQ,CAACF,eAAe,CAAC,CAAD,CAAhB,EAAqB,EAArB,CAAlB;AACD;;AAED,MAAIZ,SAAS,KAAK,MAAlB,EAA0B;AACxB,WAAQ,cAAaI,eAAe,CAACW,UAAW,kBAAiBL,OAAO,GAAGR,IAAI,CAACc,IAAK,KAArF;AACD;;AAED,MAAIhB,SAAS,KAAK,OAAlB,EAA2B;AACzB,WAAQ,eAAcE,IAAI,CAACc,IAAL,GAAYd,IAAI,CAACe,KAAjB,GAAyBP,OAAQ,KAAvD;AACD;;AAED,MAAIV,SAAS,KAAK,IAAlB,EAAwB;AACtB,WAAQ,cAAaI,eAAe,CAACc,WAAY,kBAAiBP,OAAO,GAAGT,IAAI,CAACiB,GAAI,KAArF;AACD,GA/ByC,CA+BxC;;;AAGF,SAAQ,eAAcjB,IAAI,CAACiB,GAAL,GAAWjB,IAAI,CAACkB,MAAhB,GAAyBT,OAAQ,KAAvD;AACD;;AAED,OAAO,SAASU,iBAAT,CAA2BrB,SAA3B,EAAsCC,IAAtC,EAA4C;AACjD,QAAMI,SAAS,GAAGN,iBAAiB,CAACC,SAAD,EAAYC,IAAZ,CAAnC;;AAEA,MAAII,SAAJ,EAAe;AACbJ,IAAAA,IAAI,CAACqB,KAAL,CAAWC,eAAX,GAA6BlB,SAA7B;AACAJ,IAAAA,IAAI,CAACqB,KAAL,CAAWjB,SAAX,GAAuBA,SAAvB;AACD;AACF;AACD,MAAMmB,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE9B,QAAQ,CAAC+B,cADK;AAErBC,EAAAA,IAAI,EAAEhC,QAAQ,CAACiC;AAFM,CAAvB;AAIA;;;;;AAKA,MAAMC,KAAK,GAAG,aAAazC,KAAK,CAAC0C,UAAN,CAAiB,SAASD,KAAT,CAAeE,KAAf,EAAsBC,GAAtB,EAA2B;AACrE,QAAM;AACJC,IAAAA,QADI;AAEJjC,IAAAA,SAAS,GAAG,MAFR;AAGJkC,IAAAA,EAAE,EAAEC,MAHA;AAIJC,IAAAA,OAJI;AAKJC,IAAAA,SALI;AAMJC,IAAAA,UANI;AAOJC,IAAAA,MAPI;AAQJC,IAAAA,QARI;AASJC,IAAAA,SATI;AAUJnB,IAAAA,KAVI;AAWJoB,IAAAA,OAAO,GAAGlB,cAXN;AAYJ;AACAmB,IAAAA,mBAAmB,GAAGrD;AAblB,MAcFyC,KAdJ;AAAA,QAeMa,KAAK,GAAGzD,6BAA6B,CAAC4C,KAAD,EAAQ,CAAC,UAAD,EAAa,WAAb,EAA0B,IAA1B,EAAgC,SAAhC,EAA2C,WAA3C,EAAwD,YAAxD,EAAsE,QAAtE,EAAgF,UAAhF,EAA4F,WAA5F,EAAyG,OAAzG,EAAkH,SAAlH,EAA6H,qBAA7H,CAAR,CAf3C;;AAiBA,QAAMc,KAAK,GAAGnD,QAAQ,EAAtB;AACA,QAAMoD,WAAW,GAAG1D,KAAK,CAAC2D,MAAN,CAAa,IAAb,CAApB;AACA,QAAMC,qBAAqB,GAAGvD,UAAU,CAACwC,QAAQ,CAACD,GAAV,EAAec,WAAf,CAAxC;AACA,QAAMG,SAAS,GAAGxD,UAAU,CAACuD,qBAAD,EAAwBhB,GAAxB,CAA5B;;AAEA,QAAMkB,4BAA4B,GAAGC,QAAQ,IAAIC,WAAW,IAAI;AAC9D,QAAID,QAAJ,EAAc;AACZ;AACA,UAAIC,WAAW,KAAKC,SAApB,EAA+B;AAC7BF,QAAAA,QAAQ,CAACL,WAAW,CAACQ,OAAb,CAAR;AACD,OAFD,MAEO;AACLH,QAAAA,QAAQ,CAACL,WAAW,CAACQ,OAAb,EAAsBF,WAAtB,CAAR;AACD;AACF;AACF,GATD;;AAWA,QAAMG,WAAW,GAAGL,4BAA4B,CAAC,CAACjD,IAAD,EAAOmD,WAAP,KAAuB;AACtE/B,IAAAA,iBAAiB,CAACrB,SAAD,EAAYC,IAAZ,CAAjB;AACAL,IAAAA,MAAM,CAACK,IAAD,CAAN;;AAEA,QAAImC,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACnC,IAAD,EAAOmD,WAAP,CAAP;AACD;AACF,GAP+C,CAAhD;AAQA,QAAMI,cAAc,GAAGN,4BAA4B,CAAC,CAACjD,IAAD,EAAOmD,WAAP,KAAuB;AACzE,UAAMK,eAAe,GAAG5D,kBAAkB,CAAC;AACzC6C,MAAAA,OADyC;AAEzCpB,MAAAA;AAFyC,KAAD,EAGvC;AACDoC,MAAAA,IAAI,EAAE;AADL,KAHuC,CAA1C;AAMAzD,IAAAA,IAAI,CAACqB,KAAL,CAAWqC,gBAAX,GAA8Bd,KAAK,CAACe,WAAN,CAAkBC,MAAlB,CAAyB,mBAAzB,EAA8C3E,QAAQ,CAAC,EAAD,EAAKuE,eAAL,EAAsB;AACxGK,MAAAA,MAAM,EAAEjB,KAAK,CAACe,WAAN,CAAkBE,MAAlB,CAAyBC;AADuE,KAAtB,CAAtD,CAA9B;AAGA9D,IAAAA,IAAI,CAACqB,KAAL,CAAW0C,UAAX,GAAwBnB,KAAK,CAACe,WAAN,CAAkBC,MAAlB,CAAyB,WAAzB,EAAsC3E,QAAQ,CAAC,EAAD,EAAKuE,eAAL,EAAsB;AAC1FK,MAAAA,MAAM,EAAEjB,KAAK,CAACe,WAAN,CAAkBE,MAAlB,CAAyBC;AADyD,KAAtB,CAA9C,CAAxB;AAGA9D,IAAAA,IAAI,CAACqB,KAAL,CAAWC,eAAX,GAA6B,MAA7B;AACAtB,IAAAA,IAAI,CAACqB,KAAL,CAAWjB,SAAX,GAAuB,MAAvB;;AAEA,QAAIiC,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CAACrC,IAAD,EAAOmD,WAAP,CAAV;AACD;AACF,GAnBkD,CAAnD;AAoBA,QAAMa,aAAa,GAAGf,4BAA4B,CAACb,SAAD,CAAlD;AACA,QAAM6B,aAAa,GAAGhB,4BAA4B,CAACT,SAAD,CAAlD;AACA,QAAM0B,UAAU,GAAGjB,4BAA4B,CAACjD,IAAI,IAAI;AACtD,UAAMwD,eAAe,GAAG5D,kBAAkB,CAAC;AACzC6C,MAAAA,OADyC;AAEzCpB,MAAAA;AAFyC,KAAD,EAGvC;AACDoC,MAAAA,IAAI,EAAE;AADL,KAHuC,CAA1C;AAMAzD,IAAAA,IAAI,CAACqB,KAAL,CAAWqC,gBAAX,GAA8Bd,KAAK,CAACe,WAAN,CAAkBC,MAAlB,CAAyB,mBAAzB,EAA8C3E,QAAQ,CAAC,EAAD,EAAKuE,eAAL,EAAsB;AACxGK,MAAAA,MAAM,EAAEjB,KAAK,CAACe,WAAN,CAAkBE,MAAlB,CAAyBM;AADuE,KAAtB,CAAtD,CAA9B;AAGAnE,IAAAA,IAAI,CAACqB,KAAL,CAAW0C,UAAX,GAAwBnB,KAAK,CAACe,WAAN,CAAkBC,MAAlB,CAAyB,WAAzB,EAAsC3E,QAAQ,CAAC,EAAD,EAAKuE,eAAL,EAAsB;AAC1FK,MAAAA,MAAM,EAAEjB,KAAK,CAACe,WAAN,CAAkBE,MAAlB,CAAyBM;AADyD,KAAtB,CAA9C,CAAxB;AAGA/C,IAAAA,iBAAiB,CAACrB,SAAD,EAAYC,IAAZ,CAAjB;;AAEA,QAAIsC,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACtC,IAAD,CAAN;AACD;AACF,GAlB8C,CAA/C;AAmBA,QAAMoE,YAAY,GAAGnB,4BAA4B,CAACjD,IAAI,IAAI;AACxD;AACAA,IAAAA,IAAI,CAACqB,KAAL,CAAWqC,gBAAX,GAA8B,EAA9B;AACA1D,IAAAA,IAAI,CAACqB,KAAL,CAAW0C,UAAX,GAAwB,EAAxB;;AAEA,QAAIxB,QAAJ,EAAc;AACZA,MAAAA,QAAQ,CAACvC,IAAD,CAAR;AACD;AACF,GARgD,CAAjD;AASA,QAAMqE,cAAc,GAAGlF,KAAK,CAACmF,WAAN,CAAkB,MAAM;AAC7C,QAAIzB,WAAW,CAACQ,OAAhB,EAAyB;AACvBjC,MAAAA,iBAAiB,CAACrB,SAAD,EAAY8C,WAAW,CAACQ,OAAxB,CAAjB;AACD;AACF,GAJsB,EAIpB,CAACtD,SAAD,CAJoB,CAAvB;AAKAZ,EAAAA,KAAK,CAACoF,SAAN,CAAgB,MAAM;AACpB;AACA,QAAIrC,MAAM,IAAInC,SAAS,KAAK,MAAxB,IAAkCA,SAAS,KAAK,OAApD,EAA6D;AAC3D,aAAOqD,SAAP;AACD;;AAED,UAAMoB,YAAY,GAAGjF,QAAQ,CAAC,MAAM;AAClC,UAAIsD,WAAW,CAACQ,OAAhB,EAAyB;AACvBjC,QAAAA,iBAAiB,CAACrB,SAAD,EAAY8C,WAAW,CAACQ,OAAxB,CAAjB;AACD;AACF,KAJ4B,CAA7B;AAKA,UAAMlD,eAAe,GAAGN,WAAW,CAACgD,WAAW,CAACQ,OAAb,CAAnC;AACAlD,IAAAA,eAAe,CAACsE,gBAAhB,CAAiC,QAAjC,EAA2CD,YAA3C;AACA,WAAO,MAAM;AACXA,MAAAA,YAAY,CAACE,KAAb;AACAvE,MAAAA,eAAe,CAACwE,mBAAhB,CAAoC,QAApC,EAA8CH,YAA9C;AACD,KAHD;AAID,GAjBD,EAiBG,CAACzE,SAAD,EAAYmC,MAAZ,CAjBH;AAkBA/C,EAAAA,KAAK,CAACoF,SAAN,CAAgB,MAAM;AACpB,QAAI,CAACrC,MAAL,EAAa;AACX;AACA;AACAmC,MAAAA,cAAc;AACf;AACF,GAND,EAMG,CAACnC,MAAD,EAASmC,cAAT,CANH;AAOA,SAAO,aAAalF,KAAK,CAACyF,aAAN,CAAoBlC,mBAApB,EAAyCzD,QAAQ,CAAC;AACpE4F,IAAAA,OAAO,EAAEhC,WAD2D;AAEpEV,IAAAA,OAAO,EAAEmB,WAF2D;AAGpElB,IAAAA,SAAS,EAAE4B,aAHyD;AAIpE3B,IAAAA,UAAU,EAAEkB,cAJwD;AAKpEjB,IAAAA,MAAM,EAAE4B,UAL4D;AAMpE3B,IAAAA,QAAQ,EAAE6B,YAN0D;AAOpE5B,IAAAA,SAAS,EAAEyB,aAPyD;AAQpEa,IAAAA,MAAM,EAAE,IAR4D;AASpE7C,IAAAA,EAAE,EAAEC,MATgE;AAUpEO,IAAAA,OAAO,EAAEA;AAV2D,GAAD,EAWlEE,KAXkE,CAAjD,EAWT,CAACoC,KAAD,EAAQC,UAAR,KAAuB;AAChC,WAAO,aAAa7F,KAAK,CAAC8F,YAAN,CAAmBjD,QAAnB,EAA6B/C,QAAQ,CAAC;AACxD8C,MAAAA,GAAG,EAAEiB,SADmD;AAExD3B,MAAAA,KAAK,EAAEpC,QAAQ,CAAC;AACdiG,QAAAA,UAAU,EAAEH,KAAK,KAAK,QAAV,IAAsB,CAAC7C,MAAvB,GAAgC,QAAhC,GAA2CkB;AADzC,OAAD,EAEZ/B,KAFY,EAELW,QAAQ,CAACF,KAAT,CAAeT,KAFV;AAFyC,KAAD,EAKtD2D,UALsD,CAArC,CAApB;AAMD,GAlBmB,CAApB;AAmBD,CA7I0B,CAA3B;AA8IAG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCzD,KAAK,CAAC0D,SAAN,GAAkB;AACxD;AACA;AACA;AACA;;AAEA;;;AAGAtD,EAAAA,QAAQ,EAAE1C,mBAT8C;;AAWxD;;;;AAIAS,EAAAA,SAAS,EAAEX,SAAS,CAACmG,KAAV,CAAgB,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,IAA1B,CAAhB,CAf6C;;AAiBxD;;;AAGAtD,EAAAA,EAAE,EAAE7C,SAAS,CAACoG,IApB0C;;AAsBxD;;;AAGArD,EAAAA,OAAO,EAAE/C,SAAS,CAACqG,IAzBqC;;AA2BxD;;;AAGArD,EAAAA,SAAS,EAAEhD,SAAS,CAACqG,IA9BmC;;AAgCxD;;;AAGApD,EAAAA,UAAU,EAAEjD,SAAS,CAACqG,IAnCkC;;AAqCxD;;;AAGAnD,EAAAA,MAAM,EAAElD,SAAS,CAACqG,IAxCsC;;AA0CxD;;;AAGAlD,EAAAA,QAAQ,EAAEnD,SAAS,CAACqG,IA7CoC;;AA+CxD;;;AAGAjD,EAAAA,SAAS,EAAEpD,SAAS,CAACqG,IAlDmC;;AAoDxD;;;AAGApE,EAAAA,KAAK,EAAEjC,SAAS,CAACsG,MAvDuC;;AAyDxD;;;;;;;;AAQAjD,EAAAA,OAAO,EAAErD,SAAS,CAACuG,SAAV,CAAoB,CAACvG,SAAS,CAACwG,MAAX,EAAmBxG,SAAS,CAACyG,KAAV,CAAgB;AAC9Df,IAAAA,MAAM,EAAE1F,SAAS,CAACwG,MAD4C;AAE9DpE,IAAAA,KAAK,EAAEpC,SAAS,CAACwG,MAF6C;AAG9DlE,IAAAA,IAAI,EAAEtC,SAAS,CAACwG;AAH8C,GAAhB,CAAnB,CAApB;AAjE+C,CAA1D,GAsEI,KAAK,CAtET;AAuEA,eAAehE,KAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport useForkRef from '../utils/useForkRef';\nimport useTheme from '../styles/useTheme';\nimport { duration } from '../styles/transitions';\nimport { reflow, getTransitionProps } from '../transitions/utils';\nimport { ownerWindow } from '../utils'; // Translate the node so he can't be seen on the screen.\n// Later, we gonna translate back the node to his original location\n// with `none`.`\n\nfunction getTranslateValue(direction, node) {\n  const rect = node.getBoundingClientRect();\n  const containerWindow = ownerWindow(node);\n  let transform;\n\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    const computedStyle = containerWindow.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue('-webkit-transform') || computedStyle.getPropertyValue('transform');\n  }\n\n  let offsetX = 0;\n  let offsetY = 0;\n\n  if (transform && transform !== 'none' && typeof transform === 'string') {\n    const transformValues = transform.split('(')[1].split(')')[0].split(',');\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n\n  if (direction === 'left') {\n    return `translateX(${containerWindow.innerWidth}px) translateX(${offsetX - rect.left}px)`;\n  }\n\n  if (direction === 'right') {\n    return `translateX(-${rect.left + rect.width - offsetX}px)`;\n  }\n\n  if (direction === 'up') {\n    return `translateY(${containerWindow.innerHeight}px) translateY(${offsetY - rect.top}px)`;\n  } // direction === 'down'\n\n\n  return `translateY(-${rect.top + rect.height - offsetY}px)`;\n}\n\nexport function setTranslateValue(direction, node) {\n  const transform = getTranslateValue(direction, node);\n\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nconst defaultTimeout = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * The Slide transition is used by the [Drawer](/components/drawers/) component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Slide = /*#__PURE__*/React.forwardRef(function Slide(props, ref) {\n  const {\n    children,\n    direction = 'down',\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"direction\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const theme = useTheme();\n  const childrenRef = React.useRef(null);\n  const handleRefIntermediary = useForkRef(children.ref, childrenRef);\n  const handleRef = useForkRef(handleRefIntermediary, ref);\n\n  const normalizedTransitionCallback = callback => isAppearing => {\n    if (callback) {\n      // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n      if (isAppearing === undefined) {\n        callback(childrenRef.current);\n      } else {\n        callback(childrenRef.current, isAppearing);\n      }\n    }\n  };\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    setTranslateValue(direction, node);\n    reflow(node);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style\n    }, {\n      mode: 'enter'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.easeOut\n    }));\n    node.style.webkitTransform = 'none';\n    node.style.transform = 'none';\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback(node => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style\n    }, {\n      mode: 'exit'\n    });\n    node.style.webkitTransition = theme.transitions.create('-webkit-transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    node.style.transition = theme.transitions.create('transform', _extends({}, transitionProps, {\n      easing: theme.transitions.easing.sharp\n    }));\n    setTranslateValue(direction, node);\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(node => {\n    // No need for transitions when the component is hidden\n    node.style.webkitTransition = '';\n    node.style.transition = '';\n\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  const updatePosition = React.useCallback(() => {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current);\n    }\n  }, [direction]);\n  React.useEffect(() => {\n    // Skip configuration where the position is screen size invariant.\n    if (inProp || direction === 'down' || direction === 'right') {\n      return undefined;\n    }\n\n    const handleResize = debounce(() => {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current);\n      }\n    });\n    const containerWindow = ownerWindow(childrenRef.current);\n    containerWindow.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n    };\n  }, [direction, inProp]);\n  React.useEffect(() => {\n    if (!inProp) {\n      // We need to update the position of the drawer when the direction change and\n      // when it's hidden.\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    appear: true,\n    in: inProp,\n    timeout: timeout\n  }, other), (state, childProps) => {\n    return /*#__PURE__*/React.cloneElement(children, _extends({\n      ref: handleRef,\n      style: _extends({\n        visibility: state === 'exited' && !inProp ? 'hidden' : undefined\n      }, style, children.props.style)\n    }, childProps));\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Slide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef,\n\n  /**\n   * Direction the child node will enter from.\n   * @default 'down'\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * If `true`, show the component; triggers the enter or exit animation.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  timeout: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default Slide;"]},"metadata":{},"sourceType":"module"}