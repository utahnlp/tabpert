{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { withStyles } from '../styles';\nimport Avatar from '../Avatar';\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  },\n\n  /* Styles applied to the avatar elements. */\n  avatar: {\n    border: `2px solid ${theme.palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  }\n});\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(props, ref) {\n  const {\n    children: childrenProp,\n    classes,\n    className,\n    max = 5,\n    spacing = 'medium',\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"max\", \"spacing\", \"variant\"]);\n\n  const clampedMax = max < 2 ? 2 : max;\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const extraAvatars = children.length > clampedMax ? children.length - clampedMax + 1 : 0;\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), extraAvatars ? /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    style: {\n      marginLeft\n    },\n    variant: variant\n  }, \"+\", extraAvatars) : null, children.slice(0, children.length - extraAvatars).reverse().map(child => {\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(child.props.className, classes.avatar),\n      style: _extends({\n        marginLeft\n      }, child.props.style),\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      throw new Error(['Material-UI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n  }),\n\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n\n  /**\n   * The shape of the avatars.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatarGroup'\n})(AvatarGroup);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/AvatarGroup/AvatarGroup.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","isFragment","clsx","chainPropTypes","withStyles","Avatar","SPACINGS","small","medium","styles","theme","root","display","flexDirection","avatar","border","palette","background","default","boxSizing","marginLeft","AvatarGroup","forwardRef","props","ref","children","childrenProp","classes","className","max","spacing","variant","other","clampedMax","Children","toArray","filter","child","process","env","NODE_ENV","console","error","join","isValidElement","extraAvatars","length","undefined","createElement","style","slice","reverse","map","cloneElement","propTypes","node","object","string","number","Error","oneOfType","oneOf","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAE,CAAC,EADO;AAEfC,EAAAA,MAAM,EAAE;AAFO,CAAjB;AAIA,OAAO,MAAMC,MAAM,GAAGC,KAAK,KAAK;AAC9B;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE;AAFX,GAFwB;;AAO9B;AACAC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAG,aAAYL,KAAK,CAACM,OAAN,CAAcC,UAAd,CAAyBC,OAAQ,EADhD;AAENC,IAAAA,SAAS,EAAE,aAFL;AAGNC,IAAAA,UAAU,EAAE,CAAC,CAHP;AAIN,oBAAgB;AACdA,MAAAA,UAAU,EAAE;AADE;AAJV;AARsB,CAAL,CAApB;AAiBP,MAAMC,WAAW,GAAG,aAAatB,KAAK,CAACuB,UAAN,CAAiB,SAASD,WAAT,CAAqBE,KAArB,EAA4BC,GAA5B,EAAiC;AACjF,QAAM;AACJC,IAAAA,QAAQ,EAAEC,YADN;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,GAAG,GAAG,CAJF;AAKJC,IAAAA,OAAO,GAAG,QALN;AAMJC,IAAAA,OAAO,GAAG;AANN,MAOFR,KAPJ;AAAA,QAQMS,KAAK,GAAGlC,6BAA6B,CAACyB,KAAD,EAAQ,CAAC,UAAD,EAAa,SAAb,EAAwB,WAAxB,EAAqC,KAArC,EAA4C,SAA5C,EAAuD,SAAvD,CAAR,CAR3C;;AAUA,QAAMU,UAAU,GAAGJ,GAAG,GAAG,CAAN,GAAU,CAAV,GAAcA,GAAjC;AACA,QAAMJ,QAAQ,GAAG1B,KAAK,CAACmC,QAAN,CAAeC,OAAf,CAAuBT,YAAvB,EAAqCU,MAArC,CAA4CC,KAAK,IAAI;AACpE,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAIvC,UAAU,CAACoC,KAAD,CAAd,EAAuB;AACrBI,QAAAA,OAAO,CAACC,KAAR,CAAc,CAAC,8EAAD,EAAiF,sCAAjF,EAAyHC,IAAzH,CAA8H,IAA9H,CAAd;AACD;AACF;;AAED,WAAO,aAAa5C,KAAK,CAAC6C,cAAN,CAAqBP,KAArB,CAApB;AACD,GARgB,CAAjB;AASA,QAAMQ,YAAY,GAAGpB,QAAQ,CAACqB,MAAT,GAAkBb,UAAlB,GAA+BR,QAAQ,CAACqB,MAAT,GAAkBb,UAAlB,GAA+B,CAA9D,GAAkE,CAAvF;AACA,QAAMb,UAAU,GAAGU,OAAO,IAAIxB,QAAQ,CAACwB,OAAD,CAAR,KAAsBiB,SAAjC,GAA6CzC,QAAQ,CAACwB,OAAD,CAArD,GAAiE,CAACA,OAArF;AACA,SAAO,aAAa/B,KAAK,CAACiD,aAAN,CAAoB,KAApB,EAA2BnD,QAAQ,CAAC;AACtD+B,IAAAA,SAAS,EAAE1B,IAAI,CAACyB,OAAO,CAAChB,IAAT,EAAeiB,SAAf,CADuC;AAEtDJ,IAAAA,GAAG,EAAEA;AAFiD,GAAD,EAGpDQ,KAHoD,CAAnC,EAGTa,YAAY,GAAG,aAAa9C,KAAK,CAACiD,aAAN,CAAoB3C,MAApB,EAA4B;AACjEuB,IAAAA,SAAS,EAAED,OAAO,CAACb,MAD8C;AAEjEmC,IAAAA,KAAK,EAAE;AACL7B,MAAAA;AADK,KAF0D;AAKjEW,IAAAA,OAAO,EAAEA;AALwD,GAA5B,EAMpC,GANoC,EAM/Bc,YAN+B,CAAhB,GAMC,IATJ,EASUpB,QAAQ,CAACyB,KAAT,CAAe,CAAf,EAAkBzB,QAAQ,CAACqB,MAAT,GAAkBD,YAApC,EAAkDM,OAAlD,GAA4DC,GAA5D,CAAgEf,KAAK,IAAI;AACrG,WAAO,aAAatC,KAAK,CAACsD,YAAN,CAAmBhB,KAAnB,EAA0B;AAC5CT,MAAAA,SAAS,EAAE1B,IAAI,CAACmC,KAAK,CAACd,KAAN,CAAYK,SAAb,EAAwBD,OAAO,CAACb,MAAhC,CAD6B;AAE5CmC,MAAAA,KAAK,EAAEpD,QAAQ,CAAC;AACduB,QAAAA;AADc,OAAD,EAEZiB,KAAK,CAACd,KAAN,CAAY0B,KAFA,CAF6B;AAK5ClB,MAAAA,OAAO,EAAEM,KAAK,CAACd,KAAN,CAAYQ,OAAZ,IAAuBA;AALY,KAA1B,CAApB;AAOD,GAR6B,CATV,CAApB;AAkBD,CAzCgC,CAAjC;AA0CAO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCnB,WAAW,CAACiC,SAAZ,GAAwB;AAC9D;AACA;AACA;AACA;;AAEA;;;AAGA7B,EAAAA,QAAQ,EAAEzB,SAAS,CAACuD,IAT0C;;AAW9D;;;AAGA5B,EAAAA,OAAO,EAAE3B,SAAS,CAACwD,MAd2C;;AAgB9D;;;AAGA5B,EAAAA,SAAS,EAAE5B,SAAS,CAACyD,MAnByC;;AAqB9D;;;;AAIA5B,EAAAA,GAAG,EAAE1B,cAAc,CAACH,SAAS,CAAC0D,MAAX,EAAmBnC,KAAK,IAAI;AAC7C,QAAIA,KAAK,CAACM,GAAN,GAAY,CAAhB,EAAmB;AACjB,YAAM,IAAI8B,KAAJ,CAAU,CAAC,4DAAD,EAA+D,gCAA/D,EAAiGhB,IAAjG,CAAsG,IAAtG,CAAV,CAAN;AACD;AACF,GAJkB,CAzB2C;;AA+B9D;;;;AAIAb,EAAAA,OAAO,EAAE9B,SAAS,CAAC4D,SAAV,CAAoB,CAAC5D,SAAS,CAAC6D,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,CAAhB,CAAD,EAAuC7D,SAAS,CAAC0D,MAAjD,CAApB,CAnCqD;;AAqC9D;;;;AAIA3B,EAAAA,OAAO,EAAE/B;AACT;AADkB,GAEjB4D,SAFQ,CAEE,CAAC5D,SAAS,CAAC6D,KAAV,CAAgB,CAAC,UAAD,EAAa,SAAb,EAAwB,QAAxB,CAAhB,CAAD,EAAqD7D,SAAS,CAACyD,MAA/D,CAFF;AAzCqD,CAAhE,GA4CI,KAAK,CA5CT;AA6CA,eAAerD,UAAU,CAACK,MAAD,EAAS;AAChCqD,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZzC,WAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { withStyles } from '../styles';\nimport Avatar from '../Avatar';\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'row-reverse'\n  },\n\n  /* Styles applied to the avatar elements. */\n  avatar: {\n    border: `2px solid ${theme.palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  }\n});\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(props, ref) {\n  const {\n    children: childrenProp,\n    classes,\n    className,\n    max = 5,\n    spacing = 'medium',\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"max\", \"spacing\", \"variant\"]);\n\n  const clampedMax = max < 2 ? 2 : max;\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const extraAvatars = children.length > clampedMax ? children.length - clampedMax + 1 : 0;\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), extraAvatars ? /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    style: {\n      marginLeft\n    },\n    variant: variant\n  }, \"+\", extraAvatars) : null, children.slice(0, children.length - extraAvatars).reverse().map(child => {\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(child.props.className, classes.avatar),\n      style: _extends({\n        marginLeft\n      }, child.props.style),\n      variant: child.props.variant || variant\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      throw new Error(['Material-UI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n  }),\n\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n\n  /**\n   * The shape of the avatars.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatarGroup'\n})(AvatarGroup);"]},"metadata":{},"sourceType":"module"}