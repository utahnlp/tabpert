{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, elementTypeAcceptingRef } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nexport const styles = theme => ({\n  /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n  root: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    position: 'relative',\n    textDecoration: 'none',\n    width: '100%',\n    boxSizing: 'border-box',\n    textAlign: 'left',\n    paddingTop: 8,\n    paddingBottom: 8,\n    '&$focusVisible': {\n      backgroundColor: theme.palette.action.focus\n    },\n    '&$selected': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      '&$focusVisible': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    },\n    '&$disabled': {\n      opacity: theme.palette.action.disabledOpacity\n    }\n  },\n\n  /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n  container: {\n    position: 'relative'\n  },\n\n  /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n  focusVisible: {},\n\n  /* Styles applied to the `component` element if dense. */\n  dense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  },\n\n  /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    alignItems: 'flex-start'\n  },\n\n  /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the inner `component` element if `divider={true}`. */\n  divider: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    backgroundClip: 'padding-box'\n  },\n\n  /* Styles applied to the inner `component` element unless `disableGutters={true}`. */\n  gutters: {\n    paddingLeft: 16,\n    paddingRight: 16\n  },\n\n  /* Styles applied to the inner `component` element if `button={true}`. */\n  button: {\n    transition: theme.transitions.create('background-color', {\n      duration: theme.transitions.duration.shortest\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&$selected:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      }\n    }\n  },\n\n  /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n  secondaryAction: {\n    // Add some space to avoid collision as `ListItemSecondaryAction`\n    // is absolutely positioned.\n    paddingRight: 48\n  },\n\n  /* Pseudo-class applied to the root element if `selected={true}`. */\n  selected: {}\n});\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nconst ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  const {\n    alignItems = 'center',\n    autoFocus = false,\n    button = false,\n    children: childrenProp,\n    classes,\n    className,\n    component: componentProp,\n    ContainerComponent = 'li',\n    ContainerProps: {\n      className: ContainerClassName\n    } = {},\n    dense = false,\n    disabled = false,\n    disableGutters = false,\n    divider = false,\n    focusVisibleClassName,\n    selected = false\n  } = props,\n        ContainerProps = _objectWithoutPropertiesLoose(props.ContainerProps, [\"className\"]),\n        other = _objectWithoutPropertiesLoose(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    alignItems,\n    disableGutters\n  };\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const children = React.Children.toArray(childrenProp);\n  const hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  const handleRef = useForkRef(listItemRef, ref);\n\n  const componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled\n  }, other);\n\n  let Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Defines the `align-items` style property.\n   * @default 'center'\n   */\n  alignItems: PropTypes.oneOf(['center', 'flex-start']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   * @default false\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    let secondaryActionIndex = -1;\n\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n      const child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   * @default 'li'\n   */\n  ContainerComponent: elementTypeAcceptingRef,\n\n  /**\n   * Props applied to the container component if used.\n   * @default {}\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   * @default false\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/ListItem/ListItem.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","chainPropTypes","elementTypeAcceptingRef","withStyles","alpha","ButtonBase","isMuiElement","useEnhancedEffect","useForkRef","ListContext","styles","theme","root","display","justifyContent","alignItems","position","textDecoration","width","boxSizing","textAlign","paddingTop","paddingBottom","backgroundColor","palette","action","focus","primary","main","selectedOpacity","focusOpacity","opacity","disabledOpacity","container","focusVisible","dense","alignItemsFlexStart","disabled","divider","borderBottom","backgroundClip","gutters","paddingLeft","paddingRight","button","transition","transitions","create","duration","shortest","hover","hoverOpacity","secondaryAction","selected","ListItem","forwardRef","props","ref","autoFocus","children","childrenProp","classes","className","component","componentProp","ContainerComponent","ContainerProps","ContainerClassName","disableGutters","focusVisibleClassName","other","context","useContext","childContext","listItemRef","useRef","current","process","env","NODE_ENV","console","error","Children","toArray","hasSecondaryAction","length","handleRef","componentProps","Component","createElement","Provider","value","pop","propTypes","oneOf","bool","node","secondaryActionIndex","i","child","Error","object","string","elementType","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, elementTypeAcceptingRef } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nexport const styles = theme => ({\n  /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n  root: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    position: 'relative',\n    textDecoration: 'none',\n    width: '100%',\n    boxSizing: 'border-box',\n    textAlign: 'left',\n    paddingTop: 8,\n    paddingBottom: 8,\n    '&$focusVisible': {\n      backgroundColor: theme.palette.action.focus\n    },\n    '&$selected': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      '&$focusVisible': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    },\n    '&$disabled': {\n      opacity: theme.palette.action.disabledOpacity\n    }\n  },\n\n  /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n  container: {\n    position: 'relative'\n  },\n\n  /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n  focusVisible: {},\n\n  /* Styles applied to the `component` element if dense. */\n  dense: {\n    paddingTop: 4,\n    paddingBottom: 4\n  },\n\n  /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    alignItems: 'flex-start'\n  },\n\n  /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n  disabled: {},\n\n  /* Styles applied to the inner `component` element if `divider={true}`. */\n  divider: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    backgroundClip: 'padding-box'\n  },\n\n  /* Styles applied to the inner `component` element unless `disableGutters={true}`. */\n  gutters: {\n    paddingLeft: 16,\n    paddingRight: 16\n  },\n\n  /* Styles applied to the inner `component` element if `button={true}`. */\n  button: {\n    transition: theme.transitions.create('background-color', {\n      duration: theme.transitions.duration.shortest\n    }),\n    '&:hover': {\n      textDecoration: 'none',\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&$selected:hover': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n      }\n    }\n  },\n\n  /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n  secondaryAction: {\n    // Add some space to avoid collision as `ListItemSecondaryAction`\n    // is absolutely positioned.\n    paddingRight: 48\n  },\n\n  /* Pseudo-class applied to the root element if `selected={true}`. */\n  selected: {}\n});\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nconst ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  const {\n    alignItems = 'center',\n    autoFocus = false,\n    button = false,\n    children: childrenProp,\n    classes,\n    className,\n    component: componentProp,\n    ContainerComponent = 'li',\n    ContainerProps: {\n      className: ContainerClassName\n    } = {},\n    dense = false,\n    disabled = false,\n    disableGutters = false,\n    divider = false,\n    focusVisibleClassName,\n    selected = false\n  } = props,\n        ContainerProps = _objectWithoutPropertiesLoose(props.ContainerProps, [\"className\"]),\n        other = _objectWithoutPropertiesLoose(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  const context = React.useContext(ListContext);\n  const childContext = {\n    dense: dense || context.dense || false,\n    alignItems,\n    disableGutters\n  };\n  const listItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const children = React.Children.toArray(childrenProp);\n  const hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  const handleRef = useForkRef(listItemRef, ref);\n\n  const componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled\n  }, other);\n\n  let Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Defines the `align-items` style property.\n   * @default 'center'\n   */\n  alignItems: PropTypes.oneOf(['center', 'flex-start']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   * @default false\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    const children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    let secondaryActionIndex = -1;\n\n    for (let i = children.length - 1; i >= 0; i -= 1) {\n      const child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   * @default 'li'\n   */\n  ContainerComponent: elementTypeAcceptingRef,\n\n  /**\n   * Props applied to the container component if used.\n   * @default {}\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   * The prop defaults to the value inherited from the parent List component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   * @default false\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);"]},"metadata":{},"sourceType":"module"}