{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\nimport LastPageIcon from '../internal/svg-icons/LastPage';\nimport FirstPageIcon from '../internal/svg-icons/FirstPage';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(LastPageIcon, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(FirstPageIcon, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(FirstPageIcon, null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(LastPageIcon, null);\n\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n    backIconButtonProps,\n    count,\n    getItemAriaLabel,\n    nextIconButtonProps,\n    onPageChange,\n    page,\n    rowsPerPage,\n    showFirstButton,\n    showLastButton\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"backIconButtonProps\", \"count\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\"]);\n\n  const theme = useTheme();\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), showFirstButton && /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": getItemAriaLabel('first', page),\n    title: getItemAriaLabel('first', page)\n  }, theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\",\n    \"aria-label\": getItemAriaLabel('previous', page),\n    title: getItemAriaLabel('previous', page)\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\",\n    \"aria-label\": getItemAriaLabel('next', page),\n    title: getItemAriaLabel('next', page)\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref5 : _ref6), showLastButton && /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": getItemAriaLabel('last', page),\n    title: getItemAriaLabel('last', page)\n  }, theme.direction === 'rtl' ? _ref7 : _ref8));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired\n} : void 0;\nexport default TablePaginationActions;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/TablePagination/TablePaginationActions.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","KeyboardArrowLeft","KeyboardArrowRight","useTheme","IconButton","LastPageIcon","FirstPageIcon","_ref","createElement","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","TablePaginationActions","forwardRef","props","ref","backIconButtonProps","count","getItemAriaLabel","nextIconButtonProps","onPageChange","page","rowsPerPage","showFirstButton","showLastButton","other","theme","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","onClick","disabled","title","direction","color","process","env","NODE_ENV","propTypes","object","number","isRequired","func","bool"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA;;;;AAIA,IAAIC,IAAI,GAAG,aAAaR,KAAK,CAACS,aAAN,CAAoBH,YAApB,EAAkC,IAAlC,CAAxB;;AAEA,IAAII,KAAK,GAAG,aAAaV,KAAK,CAACS,aAAN,CAAoBF,aAApB,EAAmC,IAAnC,CAAzB;;AAEA,IAAII,KAAK,GAAG,aAAaX,KAAK,CAACS,aAAN,CAAoBN,kBAApB,EAAwC,IAAxC,CAAzB;;AAEA,IAAIS,KAAK,GAAG,aAAaZ,KAAK,CAACS,aAAN,CAAoBP,iBAApB,EAAuC,IAAvC,CAAzB;;AAEA,IAAIW,KAAK,GAAG,aAAab,KAAK,CAACS,aAAN,CAAoBP,iBAApB,EAAuC,IAAvC,CAAzB;;AAEA,IAAIY,KAAK,GAAG,aAAad,KAAK,CAACS,aAAN,CAAoBN,kBAApB,EAAwC,IAAxC,CAAzB;;AAEA,IAAIY,KAAK,GAAG,aAAaf,KAAK,CAACS,aAAN,CAAoBF,aAApB,EAAmC,IAAnC,CAAzB;;AAEA,IAAIS,KAAK,GAAG,aAAahB,KAAK,CAACS,aAAN,CAAoBH,YAApB,EAAkC,IAAlC,CAAzB;;AAEA,MAAMW,sBAAsB,GAAG,aAAajB,KAAK,CAACkB,UAAN,CAAiB,SAASD,sBAAT,CAAgCE,KAAhC,EAAuCC,GAAvC,EAA4C;AACvG,QAAM;AACJC,IAAAA,mBADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,gBAHI;AAIJC,IAAAA,mBAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,IANI;AAOJC,IAAAA,WAPI;AAQJC,IAAAA,eARI;AASJC,IAAAA;AATI,MAUFV,KAVJ;AAAA,QAWMW,KAAK,GAAG/B,6BAA6B,CAACoB,KAAD,EAAQ,CAAC,qBAAD,EAAwB,OAAxB,EAAiC,kBAAjC,EAAqD,qBAArD,EAA4E,cAA5E,EAA4F,MAA5F,EAAoG,aAApG,EAAmH,iBAAnH,EAAsI,gBAAtI,CAAR,CAX3C;;AAaA,QAAMY,KAAK,GAAG3B,QAAQ,EAAtB;;AAEA,QAAM4B,0BAA0B,GAAGC,KAAK,IAAI;AAC1CR,IAAAA,YAAY,CAACQ,KAAD,EAAQ,CAAR,CAAZ;AACD,GAFD;;AAIA,QAAMC,qBAAqB,GAAGD,KAAK,IAAI;AACrCR,IAAAA,YAAY,CAACQ,KAAD,EAAQP,IAAI,GAAG,CAAf,CAAZ;AACD,GAFD;;AAIA,QAAMS,qBAAqB,GAAGF,KAAK,IAAI;AACrCR,IAAAA,YAAY,CAACQ,KAAD,EAAQP,IAAI,GAAG,CAAf,CAAZ;AACD,GAFD;;AAIA,QAAMU,yBAAyB,GAAGH,KAAK,IAAI;AACzCR,IAAAA,YAAY,CAACQ,KAAD,EAAQI,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,IAAL,CAAUjB,KAAK,GAAGK,WAAlB,IAAiC,CAA7C,CAAR,CAAZ;AACD,GAFD;;AAIA,SAAO,aAAa3B,KAAK,CAACS,aAAN,CAAoB,KAApB,EAA2BX,QAAQ,CAAC;AACtDsB,IAAAA,GAAG,EAAEA;AADiD,GAAD,EAEpDU,KAFoD,CAAnC,EAETF,eAAe,IAAI,aAAa5B,KAAK,CAACS,aAAN,CAAoBJ,UAApB,EAAgC;AACzEmC,IAAAA,OAAO,EAAER,0BADgE;AAEzES,IAAAA,QAAQ,EAAEf,IAAI,KAAK,CAFsD;AAGzE,kBAAcH,gBAAgB,CAAC,OAAD,EAAUG,IAAV,CAH2C;AAIzEgB,IAAAA,KAAK,EAAEnB,gBAAgB,CAAC,OAAD,EAAUG,IAAV;AAJkD,GAAhC,EAKxCK,KAAK,CAACY,SAAN,KAAoB,KAApB,GAA4BnC,IAA5B,GAAmCE,KALK,CAFvB,EAO0B,aAAaV,KAAK,CAACS,aAAN,CAAoBJ,UAApB,EAAgCP,QAAQ,CAAC;AAClG0C,IAAAA,OAAO,EAAEN,qBADyF;AAElGO,IAAAA,QAAQ,EAAEf,IAAI,KAAK,CAF+E;AAGlGkB,IAAAA,KAAK,EAAE,SAH2F;AAIlG,kBAAcrB,gBAAgB,CAAC,UAAD,EAAaG,IAAb,CAJoE;AAKlGgB,IAAAA,KAAK,EAAEnB,gBAAgB,CAAC,UAAD,EAAaG,IAAb;AAL2E,GAAD,EAMhGL,mBANgG,CAAxC,EAMlCU,KAAK,CAACY,SAAN,KAAoB,KAApB,GAA4BhC,KAA5B,GAAoCC,KANF,CAPvC,EAaiD,aAAaZ,KAAK,CAACS,aAAN,CAAoBJ,UAApB,EAAgCP,QAAQ,CAAC;AACzH0C,IAAAA,OAAO,EAAEL,qBADgH;AAEzHM,IAAAA,QAAQ,EAAEnB,KAAK,KAAK,CAAC,CAAX,GAAeI,IAAI,IAAIW,IAAI,CAACE,IAAL,CAAUjB,KAAK,GAAGK,WAAlB,IAAiC,CAAxD,GAA4D,KAFmD;AAGzHiB,IAAAA,KAAK,EAAE,SAHkH;AAIzH,kBAAcrB,gBAAgB,CAAC,MAAD,EAASG,IAAT,CAJ2F;AAKzHgB,IAAAA,KAAK,EAAEnB,gBAAgB,CAAC,MAAD,EAASG,IAAT;AALkG,GAAD,EAMvHF,mBANuH,CAAxC,EAMzDO,KAAK,CAACY,SAAN,KAAoB,KAApB,GAA4B9B,KAA5B,GAAoCC,KANqB,CAb9D,EAmBiDe,cAAc,IAAI,aAAa7B,KAAK,CAACS,aAAN,CAAoBJ,UAApB,EAAgC;AAClImC,IAAAA,OAAO,EAAEJ,yBADyH;AAElIK,IAAAA,QAAQ,EAAEf,IAAI,IAAIW,IAAI,CAACE,IAAL,CAAUjB,KAAK,GAAGK,WAAlB,IAAiC,CAF+E;AAGlI,kBAAcJ,gBAAgB,CAAC,MAAD,EAASG,IAAT,CAHoG;AAIlIgB,IAAAA,KAAK,EAAEnB,gBAAgB,CAAC,MAAD,EAASG,IAAT;AAJ2G,GAAhC,EAKjGK,KAAK,CAACY,SAAN,KAAoB,KAApB,GAA4B5B,KAA5B,GAAoCC,KAL6D,CAnBhF,CAApB;AAyBD,CAzD2C,CAA5C;AA0DA6B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC9B,sBAAsB,CAAC+B,SAAvB,GAAmC;AACzE;;;AAGA3B,EAAAA,mBAAmB,EAAEpB,SAAS,CAACgD,MAJ0C;;AAMzE;;;AAGA3B,EAAAA,KAAK,EAAErB,SAAS,CAACiD,MAAV,CAAiBC,UATiD;;AAWzE;;;;;;;;;AASA5B,EAAAA,gBAAgB,EAAEtB,SAAS,CAACmD,IAAV,CAAeD,UApBwC;;AAsBzE;;;AAGA3B,EAAAA,mBAAmB,EAAEvB,SAAS,CAACgD,MAzB0C;;AA2BzE;;;;;;AAMAxB,EAAAA,YAAY,EAAExB,SAAS,CAACmD,IAAV,CAAeD,UAjC4C;;AAmCzE;;;AAGAzB,EAAAA,IAAI,EAAEzB,SAAS,CAACiD,MAAV,CAAiBC,UAtCkD;;AAwCzE;;;AAGAxB,EAAAA,WAAW,EAAE1B,SAAS,CAACiD,MAAV,CAAiBC,UA3C2C;;AA6CzE;;;AAGAvB,EAAAA,eAAe,EAAE3B,SAAS,CAACoD,IAAV,CAAeF,UAhDyC;;AAkDzE;;;AAGAtB,EAAAA,cAAc,EAAE5B,SAAS,CAACoD,IAAV,CAAeF;AArD0C,CAA3E,GAsDI,KAAK,CAtDT;AAuDA,eAAelC,sBAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\nimport LastPageIcon from '../internal/svg-icons/LastPage';\nimport FirstPageIcon from '../internal/svg-icons/FirstPage';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(LastPageIcon, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(FirstPageIcon, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(FirstPageIcon, null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(LastPageIcon, null);\n\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n    backIconButtonProps,\n    count,\n    getItemAriaLabel,\n    nextIconButtonProps,\n    onPageChange,\n    page,\n    rowsPerPage,\n    showFirstButton,\n    showLastButton\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"backIconButtonProps\", \"count\", \"getItemAriaLabel\", \"nextIconButtonProps\", \"onPageChange\", \"page\", \"rowsPerPage\", \"showFirstButton\", \"showLastButton\"]);\n\n  const theme = useTheme();\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), showFirstButton && /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": getItemAriaLabel('first', page),\n    title: getItemAriaLabel('first', page)\n  }, theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\",\n    \"aria-label\": getItemAriaLabel('previous', page),\n    title: getItemAriaLabel('previous', page)\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\",\n    \"aria-label\": getItemAriaLabel('next', page),\n    title: getItemAriaLabel('next', page)\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref5 : _ref6), showLastButton && /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": getItemAriaLabel('last', page),\n    title: getItemAriaLabel('last', page)\n  }, theme.direction === 'rtl' ? _ref7 : _ref8));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired\n} : void 0;\nexport default TablePaginationActions;"]},"metadata":{},"sourceType":"module"}