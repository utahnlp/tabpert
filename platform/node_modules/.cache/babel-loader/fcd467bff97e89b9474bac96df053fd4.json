{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Ripple from './Ripple';\nconst DURATION = 550;\nexport const DELAY_RIPPLE = 80;\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden',\n    pointerEvents: 'none',\n    position: 'absolute',\n    zIndex: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    borderRadius: 'inherit'\n  },\n\n  /* Styles applied to the internal `Ripple` components `ripple` class. */\n  ripple: {\n    opacity: 0,\n    position: 'absolute'\n  },\n\n  /* Styles applied to the internal `Ripple` components `rippleVisible` class. */\n  rippleVisible: {\n    opacity: 0.3,\n    transform: 'scale(1)',\n    animation: `$enter ${DURATION}ms ${theme.transitions.easing.easeInOut}`\n  },\n\n  /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */\n  ripplePulsate: {\n    animationDuration: `${theme.transitions.duration.shorter}ms`\n  },\n\n  /* Styles applied to the internal `Ripple` components `child` class. */\n  child: {\n    opacity: 1,\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    borderRadius: '50%',\n    backgroundColor: 'currentColor'\n  },\n\n  /* Styles applied to the internal `Ripple` components `childLeaving` class. */\n  childLeaving: {\n    opacity: 0,\n    animation: `$exit ${DURATION}ms ${theme.transitions.easing.easeInOut}`\n  },\n\n  /* Styles applied to the internal `Ripple` components `childPulsate` class. */\n  childPulsate: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    animation: `$pulsate 2500ms ${theme.transitions.easing.easeInOut} 200ms infinite`\n  },\n  '@keyframes enter': {\n    '0%': {\n      transform: 'scale(0)',\n      opacity: 0.1\n    },\n    '100%': {\n      transform: 'scale(1)',\n      opacity: 0.3\n    }\n  },\n  '@keyframes exit': {\n    '0%': {\n      opacity: 1\n    },\n    '100%': {\n      opacity: 0\n    }\n  },\n  '@keyframes pulsate': {\n    '0%': {\n      transform: 'scale(1)'\n    },\n    '50%': {\n      transform: 'scale(0.92)'\n    },\n    '100%': {\n      transform: 'scale(1)'\n    }\n  }\n});\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nconst TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(props, ref) {\n  const {\n    center: centerProp = false,\n    classes,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"center\", \"classes\", \"className\"]);\n\n  const [ripples, setRipples] = React.useState([]);\n  const nextKey = React.useRef(0);\n  const rippleCallback = React.useRef(null);\n  React.useEffect(() => {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  const ignoringMouseDown = React.useRef(false); // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n\n  const startTimer = React.useRef(null); // This is the hook called once the previous timeout is ready.\n\n  const startTimerCommit = React.useRef(null);\n  const container = React.useRef(null);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  const startCommit = React.useCallback(params => {\n    const {\n      pulsate,\n      rippleX,\n      rippleY,\n      rippleSize,\n      cb\n    } = params;\n    setRipples(oldRipples => [...oldRipples, /*#__PURE__*/React.createElement(Ripple, {\n      key: nextKey.current,\n      classes: classes,\n      timeout: DURATION,\n      pulsate: pulsate,\n      rippleX: rippleX,\n      rippleY: rippleY,\n      rippleSize: rippleSize\n    })]);\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  const start = React.useCallback((event = {}, options = {}, cb) => {\n    const {\n      pulsate = false,\n      center = centerProp || options.pulsate,\n      fakeElement = false // For test purposes\n\n    } = options;\n\n    if (event.type === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if (event.type === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n\n    const element = fakeElement ? null : container.current;\n    const rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    let rippleX;\n    let rippleY;\n    let rippleSize;\n\n    if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      const {\n        clientX,\n        clientY\n      } = event.touches ? event.touches[0] : event;\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3); // For some reason the animation is broken on Mobile Chrome if the size if even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);\n    } // Touche devices\n\n\n    if (event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = () => {\n          startCommit({\n            pulsate,\n            rippleX,\n            rippleY,\n            rippleSize,\n            cb\n          });\n        }; // Delay the execution of the ripple effect.\n\n\n        startTimer.current = setTimeout(() => {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate,\n        rippleX,\n        rippleY,\n        rippleSize,\n        cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  const pulsate = React.useCallback(() => {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  const stop = React.useCallback((event, cb) => {\n    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if (event.type === 'touchend' && startTimerCommit.current) {\n      event.persist();\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(() => {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(oldRipples => {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, () => ({\n    pulsate,\n    start,\n    stop\n  }), [pulsate, start, stop]);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, className),\n    ref: container\n  }, other), /*#__PURE__*/React.createElement(TransitionGroup, {\n    component: null,\n    exit: true\n  }, ripples));\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiTouchRipple'\n})( /*#__PURE__*/React.memo(TouchRipple));","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/ButtonBase/TouchRipple.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","TransitionGroup","clsx","withStyles","Ripple","DURATION","DELAY_RIPPLE","styles","theme","root","overflow","pointerEvents","position","zIndex","top","right","bottom","left","borderRadius","ripple","opacity","rippleVisible","transform","animation","transitions","easing","easeInOut","ripplePulsate","animationDuration","duration","shorter","child","display","width","height","backgroundColor","childLeaving","childPulsate","TouchRipple","forwardRef","props","ref","center","centerProp","classes","className","other","ripples","setRipples","useState","nextKey","useRef","rippleCallback","useEffect","current","ignoringMouseDown","startTimer","startTimerCommit","container","clearTimeout","startCommit","useCallback","params","pulsate","rippleX","rippleY","rippleSize","cb","oldRipples","createElement","key","timeout","start","event","options","fakeElement","type","element","rect","getBoundingClientRect","clientX","clientY","touches","Math","round","sqrt","sizeX","max","abs","clientWidth","sizeY","clientHeight","setTimeout","stop","persist","length","slice","useImperativeHandle","component","exit","process","env","NODE_ENV","propTypes","bool","object","isRequired","string","flip","name","memo"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup } from 'react-transition-group';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Ripple from './Ripple';\nconst DURATION = 550;\nexport const DELAY_RIPPLE = 80;\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden',\n    pointerEvents: 'none',\n    position: 'absolute',\n    zIndex: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    borderRadius: 'inherit'\n  },\n\n  /* Styles applied to the internal `Ripple` components `ripple` class. */\n  ripple: {\n    opacity: 0,\n    position: 'absolute'\n  },\n\n  /* Styles applied to the internal `Ripple` components `rippleVisible` class. */\n  rippleVisible: {\n    opacity: 0.3,\n    transform: 'scale(1)',\n    animation: `$enter ${DURATION}ms ${theme.transitions.easing.easeInOut}`\n  },\n\n  /* Styles applied to the internal `Ripple` components `ripplePulsate` class. */\n  ripplePulsate: {\n    animationDuration: `${theme.transitions.duration.shorter}ms`\n  },\n\n  /* Styles applied to the internal `Ripple` components `child` class. */\n  child: {\n    opacity: 1,\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    borderRadius: '50%',\n    backgroundColor: 'currentColor'\n  },\n\n  /* Styles applied to the internal `Ripple` components `childLeaving` class. */\n  childLeaving: {\n    opacity: 0,\n    animation: `$exit ${DURATION}ms ${theme.transitions.easing.easeInOut}`\n  },\n\n  /* Styles applied to the internal `Ripple` components `childPulsate` class. */\n  childPulsate: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    animation: `$pulsate 2500ms ${theme.transitions.easing.easeInOut} 200ms infinite`\n  },\n  '@keyframes enter': {\n    '0%': {\n      transform: 'scale(0)',\n      opacity: 0.1\n    },\n    '100%': {\n      transform: 'scale(1)',\n      opacity: 0.3\n    }\n  },\n  '@keyframes exit': {\n    '0%': {\n      opacity: 1\n    },\n    '100%': {\n      opacity: 0\n    }\n  },\n  '@keyframes pulsate': {\n    '0%': {\n      transform: 'scale(1)'\n    },\n    '50%': {\n      transform: 'scale(0.92)'\n    },\n    '100%': {\n      transform: 'scale(1)'\n    }\n  }\n});\n/**\n * @ignore - internal component.\n *\n * TODO v5: Make private\n */\n\nconst TouchRipple = /*#__PURE__*/React.forwardRef(function TouchRipple(props, ref) {\n  const {\n    center: centerProp = false,\n    classes,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"center\", \"classes\", \"className\"]);\n\n  const [ripples, setRipples] = React.useState([]);\n  const nextKey = React.useRef(0);\n  const rippleCallback = React.useRef(null);\n  React.useEffect(() => {\n    if (rippleCallback.current) {\n      rippleCallback.current();\n      rippleCallback.current = null;\n    }\n  }, [ripples]); // Used to filter out mouse emulated events on mobile.\n\n  const ignoringMouseDown = React.useRef(false); // We use a timer in order to only show the ripples for touch \"click\" like events.\n  // We don't want to display the ripple for touch scroll events.\n\n  const startTimer = React.useRef(null); // This is the hook called once the previous timeout is ready.\n\n  const startTimerCommit = React.useRef(null);\n  const container = React.useRef(null);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(startTimer.current);\n    };\n  }, []);\n  const startCommit = React.useCallback(params => {\n    const {\n      pulsate,\n      rippleX,\n      rippleY,\n      rippleSize,\n      cb\n    } = params;\n    setRipples(oldRipples => [...oldRipples, /*#__PURE__*/React.createElement(Ripple, {\n      key: nextKey.current,\n      classes: classes,\n      timeout: DURATION,\n      pulsate: pulsate,\n      rippleX: rippleX,\n      rippleY: rippleY,\n      rippleSize: rippleSize\n    })]);\n    nextKey.current += 1;\n    rippleCallback.current = cb;\n  }, [classes]);\n  const start = React.useCallback((event = {}, options = {}, cb) => {\n    const {\n      pulsate = false,\n      center = centerProp || options.pulsate,\n      fakeElement = false // For test purposes\n\n    } = options;\n\n    if (event.type === 'mousedown' && ignoringMouseDown.current) {\n      ignoringMouseDown.current = false;\n      return;\n    }\n\n    if (event.type === 'touchstart') {\n      ignoringMouseDown.current = true;\n    }\n\n    const element = fakeElement ? null : container.current;\n    const rect = element ? element.getBoundingClientRect() : {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    }; // Get the size of the ripple\n\n    let rippleX;\n    let rippleY;\n    let rippleSize;\n\n    if (center || event.clientX === 0 && event.clientY === 0 || !event.clientX && !event.touches) {\n      rippleX = Math.round(rect.width / 2);\n      rippleY = Math.round(rect.height / 2);\n    } else {\n      const {\n        clientX,\n        clientY\n      } = event.touches ? event.touches[0] : event;\n      rippleX = Math.round(clientX - rect.left);\n      rippleY = Math.round(clientY - rect.top);\n    }\n\n    if (center) {\n      rippleSize = Math.sqrt((2 * rect.width ** 2 + rect.height ** 2) / 3); // For some reason the animation is broken on Mobile Chrome if the size if even.\n\n      if (rippleSize % 2 === 0) {\n        rippleSize += 1;\n      }\n    } else {\n      const sizeX = Math.max(Math.abs((element ? element.clientWidth : 0) - rippleX), rippleX) * 2 + 2;\n      const sizeY = Math.max(Math.abs((element ? element.clientHeight : 0) - rippleY), rippleY) * 2 + 2;\n      rippleSize = Math.sqrt(sizeX ** 2 + sizeY ** 2);\n    } // Touche devices\n\n\n    if (event.touches) {\n      // check that this isn't another touchstart due to multitouch\n      // otherwise we will only clear a single timer when unmounting while two\n      // are running\n      if (startTimerCommit.current === null) {\n        // Prepare the ripple effect.\n        startTimerCommit.current = () => {\n          startCommit({\n            pulsate,\n            rippleX,\n            rippleY,\n            rippleSize,\n            cb\n          });\n        }; // Delay the execution of the ripple effect.\n\n\n        startTimer.current = setTimeout(() => {\n          if (startTimerCommit.current) {\n            startTimerCommit.current();\n            startTimerCommit.current = null;\n          }\n        }, DELAY_RIPPLE); // We have to make a tradeoff with this value.\n      }\n    } else {\n      startCommit({\n        pulsate,\n        rippleX,\n        rippleY,\n        rippleSize,\n        cb\n      });\n    }\n  }, [centerProp, startCommit]);\n  const pulsate = React.useCallback(() => {\n    start({}, {\n      pulsate: true\n    });\n  }, [start]);\n  const stop = React.useCallback((event, cb) => {\n    clearTimeout(startTimer.current); // The touch interaction occurs too quickly.\n    // We still want to show ripple effect.\n\n    if (event.type === 'touchend' && startTimerCommit.current) {\n      event.persist();\n      startTimerCommit.current();\n      startTimerCommit.current = null;\n      startTimer.current = setTimeout(() => {\n        stop(event, cb);\n      });\n      return;\n    }\n\n    startTimerCommit.current = null;\n    setRipples(oldRipples => {\n      if (oldRipples.length > 0) {\n        return oldRipples.slice(1);\n      }\n\n      return oldRipples;\n    });\n    rippleCallback.current = cb;\n  }, []);\n  React.useImperativeHandle(ref, () => ({\n    pulsate,\n    start,\n    stop\n  }), [pulsate, start, stop]);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, className),\n    ref: container\n  }, other), /*#__PURE__*/React.createElement(TransitionGroup, {\n    component: null,\n    exit: true\n  }, ripples));\n});\nprocess.env.NODE_ENV !== \"production\" ? TouchRipple.propTypes = {\n  /**\n   * If `true`, the ripple starts at the center of the component\n   * rather than at the point of interaction.\n   */\n  center: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiTouchRipple'\n})( /*#__PURE__*/React.memo(TouchRipple));"]},"metadata":{},"sourceType":"module"}