{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\nexport const styles = theme => {\n  const elevations = {};\n  theme.shadows.forEach((shadow, index) => {\n    elevations[`elevation${index}`] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element unless `square={true}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: `1px solid ${theme.palette.divider}`\n    },\n\n    /* Styles applied to the root element if `variant=\"elevation\"`. */\n    elevation: {}\n  }, elevations);\n};\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div',\n    square = false,\n    elevation = 1,\n    variant = 'elevation'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  const themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    component: Component,\n    square,\n    elevation,\n    variant\n  }), 'MuiPaper');\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const theme = useTheme();\n\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`Material-UI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className, !square && classes.rounded, variant === 'elevation' && classes[`elevation${elevation}`]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Paper/Paper.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","useThemeVariants","withStyles","useTheme","styles","theme","elevations","shadows","forEach","shadow","index","boxShadow","root","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","rounded","borderRadius","shape","outlined","border","divider","elevation","Paper","forwardRef","props","ref","classes","className","component","Component","square","variant","other","themeVariantsClasses","process","env","NODE_ENV","undefined","console","error","join","createElement","propTypes","children","node","object","string","elementType","number","bool","oneOfType","oneOf","name"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport useTheme from '../styles/useTheme';\nexport const styles = theme => {\n  const elevations = {};\n  theme.shadows.forEach((shadow, index) => {\n    elevations[`elevation${index}`] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element unless `square={true}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: `1px solid ${theme.palette.divider}`\n    },\n\n    /* Styles applied to the root element if `variant=\"elevation\"`. */\n    elevation: {}\n  }, elevations);\n};\nconst Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div',\n    square = false,\n    elevation = 1,\n    variant = 'elevation'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  const themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    component: Component,\n    square,\n    elevation,\n    variant\n  }), 'MuiPaper');\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const theme = useTheme();\n\n    if (theme.shadows[elevation] === undefined) {\n      console.error([`Material-UI: The elevation provided <Paper elevation={${elevation}}> is not available in the theme.`, `Please make sure that \\`theme.shadows[${elevation}]\\` is defined.`].join('\\n'));\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], themeVariantsClasses, className, !square && classes.rounded, variant === 'elevation' && classes[`elevation${elevation}`]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   * @default 1\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   * @default 'elevation'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['elevation', 'outlined']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);"]},"metadata":{},"sourceType":"module"}