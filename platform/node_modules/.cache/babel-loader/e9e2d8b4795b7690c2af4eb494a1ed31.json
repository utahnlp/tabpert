{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    color: theme.palette.text.secondary\n  },\n\n  /* Pseudo-class applied to the root element if `checked={true}`. */\n  checked: {},\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n  indeterminate: {},\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    '&$checked, &$indeterminate': {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled\n    }\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    '&$checked, &$indeterminate': {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled\n    }\n  }\n});\nconst defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nconst defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nconst defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  const {\n    checkedIcon = defaultCheckedIcon,\n    classes,\n    color = 'secondary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[`color${capitalize(color)}`], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'secondary'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Checkbox/Checkbox.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","refType","SwitchBase","CheckBoxOutlineBlankIcon","CheckBoxIcon","alpha","IndeterminateCheckBoxIcon","capitalize","withStyles","styles","theme","root","color","palette","text","secondary","checked","disabled","indeterminate","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","defaultCheckedIcon","createElement","defaultIcon","defaultIndeterminateIcon","Checkbox","forwardRef","props","ref","checkedIcon","classes","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","other","type","cloneElement","fontSize","undefined","process","env","NODE_ENV","propTypes","bool","node","object","oneOf","disableRipple","id","string","inputRef","onChange","func","required","value","any","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { alpha } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    color: theme.palette.text.secondary\n  },\n\n  /* Pseudo-class applied to the root element if `checked={true}`. */\n  checked: {},\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n  indeterminate: {},\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    '&$checked, &$indeterminate': {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled\n    }\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    '&$checked, &$indeterminate': {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n    '&$disabled': {\n      color: theme.palette.action.disabled\n    }\n  }\n});\nconst defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nconst defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nconst defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  const {\n    checkedIcon = defaultCheckedIcon,\n    classes,\n    color = 'secondary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[`color${capitalize(color)}`], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'secondary'\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"]},"metadata":{},"sourceType":"module"}