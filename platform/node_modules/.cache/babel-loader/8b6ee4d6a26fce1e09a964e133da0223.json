{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport ownerWindow from '../utils/ownerWindow';\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from '../TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nimport useTheme from '../styles/useTheme';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden',\n    minHeight: 48,\n    WebkitOverflowScrolling: 'touch',\n    // Add iOS momentum scrolling.\n    display: 'flex'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the flex container element. */\n  flexContainer: {\n    display: 'flex'\n  },\n\n  /* Styles applied to the flex container element if `orientation=\"vertical\"`. */\n  flexContainerVertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n  centered: {\n    justifyContent: 'center'\n  },\n\n  /* Styles applied to the tablist element. */\n  scroller: {\n    position: 'relative',\n    display: 'inline-block',\n    flex: '1 1 auto',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n  fixed: {\n    overflowX: 'hidden',\n    width: '100%'\n  },\n\n  /* Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"horizontal\"`. */\n  scrollableX: {\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  },\n\n  /* Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"vertical\"`. */\n  scrollableY: {\n    overflowY: 'auto',\n    overflowX: 'hidden'\n  },\n\n  /* Styles applied to the tablist element if `variant=\"scrollable\"` and `visibleScrollbar={false}`. */\n  hideScrollbar: {\n    // Hide dimensionless scrollbar on MacOS\n    scrollbarWidth: 'none',\n    // Firefox\n    '&::-webkit-scrollbar': {\n      display: 'none' // Safari + Chrome\n\n    }\n  },\n\n  /* Styles applied to the `ScrollButtonComponent` component. */\n  scrollButtons: {},\n\n  /* Styles applied to the `ScrollButtonComponent` component if `allowScrollButtonsMobile={true}`. */\n  scrollButtonsHideMobile: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    }\n  },\n\n  /* Styles applied to the `TabIndicator` component. */\n  indicator: {}\n});\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(props, ref) {\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    action,\n    centered = false,\n    children: childrenProp,\n    classes,\n    className,\n    component: Component = 'div',\n    allowScrollButtonsMobile = false,\n    indicatorColor = 'secondary',\n    onChange,\n    orientation = 'horizontal',\n    ScrollButtonComponent = TabScrollButton,\n    scrollButtons = 'auto',\n    selectionFollowsFocus,\n    TabIndicatorProps = {},\n    TabScrollButtonProps,\n    textColor = 'inherit',\n    value,\n    variant = 'standard',\n    visibleScrollbar = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"allowScrollButtonsMobile\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\", \"visibleScrollbar\"]);\n\n  const theme = useTheme();\n  const scrollable = variant === 'scrollable';\n  const isRtl = theme.direction === 'rtl';\n  const vertical = orientation === 'vertical';\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  const start = vertical ? 'top' : 'left';\n  const end = vertical ? 'bottom' : 'right';\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  const size = vertical ? 'height' : 'width';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('Material-UI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  const [mounted, setMounted] = React.useState(false);\n  const [indicatorStyle, setIndicatorStyle] = React.useState({});\n  const [displayScroll, setDisplayScroll] = React.useState({\n    start: false,\n    end: false\n  });\n  const [scrollerStyle, setScrollerStyle] = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  });\n  const valueToIndex = new Map();\n  const tabsRef = React.useRef(null);\n  const tabListRef = React.useRef(null);\n\n  const getTabsMeta = () => {\n    const tabsNode = tabsRef.current;\n    let tabsMeta;\n\n    if (tabsNode) {\n      const rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    let tabMeta;\n\n    if (tabsNode && value !== false) {\n      const children = tabListRef.current.children;\n\n      if (children.length > 0) {\n        const tab = children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([`Material-UI: The value provided to the Tabs component is invalid.`, `None of the Tabs' children match with \\`${value}\\`.`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n\n  const updateIndicatorState = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    let startValue = 0;\n\n    if (tabMeta && tabsMeta) {\n      if (vertical) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      } else {\n        const correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = tabMeta.left - tabsMeta.left + correction;\n      }\n    }\n\n    const newIndicatorStyle = {\n      [start]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    }; // IE11 support, replace with Number.isNaN\n    // eslint-disable-next-line no-restricted-globals\n\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      const dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  const scroll = scrollValue => {\n    animate(scrollStart, tabsRef.current, scrollValue);\n  };\n\n  const moveTabsScroll = delta => {\n    let scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\n\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n\n    scroll(scrollValue);\n  };\n\n  const getScrollSize = () => {\n    const containerSize = tabsRef.current[clientSize];\n    let totalSize = 0;\n    const children = Array.from(tabListRef.current.children);\n\n    for (let i = 0; i < children.length; i += 1) {\n      const tab = children[i];\n\n      if (totalSize + tab[clientSize] > containerSize) {\n        break;\n      }\n\n      totalSize += tab[clientSize];\n    }\n\n    return totalSize;\n  };\n\n  const handleStartScrollClick = () => {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n\n  const handleEndScrollClick = () => {\n    moveTabsScroll(getScrollSize());\n  }; // TODO Remove <ScrollbarSize /> as browser support for hidding the scrollbar\n  // with CSS improves.\n\n\n  const handleScrollbarSizeChange = React.useCallback(scrollbarWidth => {\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth\n    });\n  }, []);\n\n  const getConditionalElements = () => {\n    const conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/React.createElement(ScrollbarSize, {\n      onChange: handleScrollbarSizeChange,\n      className: clsx(classes.scrollableX, classes.hideScrollbar)\n    }) : null;\n    const scrollButtonsActive = displayScroll.start || displayScroll.end;\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/React.createElement(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayScroll.start,\n      className: clsx(classes.scrollButtons, !allowScrollButtonsMobile && classes.scrollButtonsHideMobile)\n    }, TabScrollButtonProps)) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/React.createElement(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayScroll.end,\n      className: clsx(classes.scrollButtons, !allowScrollButtonsMobile && classes.scrollButtonsHideMobile)\n    }, TabScrollButtonProps)) : null;\n    return conditionalElements;\n  };\n\n  const scrollSelectedIntoView = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart);\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n      scroll(nextScrollStart);\n    }\n  });\n  const updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== false) {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n        scrollWidth,\n        clientWidth\n      } = tabsRef.current;\n      let showStartScroll;\n      let showEndScroll;\n\n      if (vertical) {\n        showStartScroll = scrollTop > 1;\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\n      } else {\n        const scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      }\n\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\n        setDisplayScroll({\n          start: showStartScroll,\n          end: showEndScroll\n        });\n      }\n    }\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    const win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  const handleTabsScroll = React.useMemo(() => debounce(() => {\n    updateScrollButtonState();\n  }), [updateScrollButtonState]);\n  React.useEffect(() => {\n    return () => {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(() => {\n    scrollSelectedIntoView();\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n  const indicator = /*#__PURE__*/React.createElement(TabIndicator, _extends({\n    className: classes.indicator,\n    orientation: orientation,\n    color: indicatorColor\n  }, TabIndicatorProps, {\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n  let childIndex = 0;\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, _extends({\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue\n    }, childIndex === 1 && value === false && !child.props.tabIndex ? {\n      tabIndex: 0\n    } : {}));\n  });\n\n  const handleKeyDown = event => {\n    const {\n      target\n    } = event; // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n\n    const role = target.getAttribute('role');\n\n    if (role !== 'tab') {\n      return;\n    }\n\n    let newFocusTarget = null;\n    let previousItemKey = orientation !== \"vertical\" ? 'ArrowLeft' : 'ArrowUp';\n    let nextItemKey = orientation !== \"vertical\" ? 'ArrowRight' : 'ArrowDown';\n\n    if (orientation !== \"vertical\" && theme.direction === 'rtl') {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n\n    switch (event.key) {\n      case previousItemKey:\n        newFocusTarget = target.previousElementSibling || tabListRef.current.lastChild;\n        break;\n\n      case nextItemKey:\n        newFocusTarget = target.nextElementSibling || tabListRef.current.firstChild;\n        break;\n\n      case 'Home':\n        newFocusTarget = tabListRef.current.firstChild;\n        break;\n\n      case 'End':\n        newFocusTarget = tabListRef.current.lastChild;\n        break;\n\n      default:\n        break;\n    }\n\n    if (newFocusTarget !== null) {\n      newFocusTarget.focus();\n      event.preventDefault();\n    }\n  };\n\n  const conditionalElements = getConditionalElements();\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, vertical && classes.vertical),\n    ref: ref\n  }, other), conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.scroller, scrollable ? [vertical ? classes.scrollableY : classes.scrollableX, !visibleScrollbar && classes.hideScrollbar] : classes.fixed),\n    style: {\n      overflow: scrollerStyle.overflow,\n      [vertical ? `margin${isRtl ? 'Left' : 'Right'}` : 'marginBottom']: visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth\n    },\n    ref: tabsRef,\n    onScroll: handleTabsScroll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n    className: clsx(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),\n    onKeyDown: handleKeyDown,\n    ref: tabListRef,\n    role: \"tablist\"\n  }, children), mounted && indicator), conditionalElements.scrollButtonEnd);\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   * @default 'secondary'\n   */\n  indicatorColor: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The component used to render the scroll buttons.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOf(['auto', false, true]),\n\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n\n  /**\n   * Props applied to the tab indicator element.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.\n   */\n  TabScrollButtonProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'inherit'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n\n  /**\n   * If `true`, the scrollbar will be visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabs'\n})(Tabs);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Tabs/Tabs.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","isFragment","PropTypes","clsx","refType","debounce","ownerWindow","getNormalizedScrollLeft","detectScrollType","animate","ScrollbarSize","withStyles","TabIndicator","TabScrollButton","useEventCallback","useTheme","styles","theme","root","overflow","minHeight","WebkitOverflowScrolling","display","vertical","flexDirection","flexContainer","flexContainerVertical","centered","justifyContent","scroller","position","flex","whiteSpace","fixed","overflowX","width","scrollableX","overflowY","scrollableY","hideScrollbar","scrollbarWidth","scrollButtons","scrollButtonsHideMobile","breakpoints","down","indicator","Tabs","forwardRef","props","ref","ariaLabel","ariaLabelledBy","action","children","childrenProp","classes","className","component","Component","allowScrollButtonsMobile","indicatorColor","onChange","orientation","ScrollButtonComponent","selectionFollowsFocus","TabIndicatorProps","TabScrollButtonProps","textColor","value","variant","visibleScrollbar","other","scrollable","isRtl","direction","scrollStart","start","end","clientSize","size","process","env","NODE_ENV","console","error","mounted","setMounted","useState","indicatorStyle","setIndicatorStyle","displayScroll","setDisplayScroll","scrollerStyle","setScrollerStyle","valueToIndex","Map","tabsRef","useRef","tabListRef","getTabsMeta","tabsNode","current","tabsMeta","rect","getBoundingClientRect","clientWidth","scrollLeft","scrollTop","scrollLeftNormalized","scrollWidth","top","bottom","left","right","tabMeta","length","tab","get","keys","Array","from","join","updateIndicatorState","startValue","correction","newIndicatorStyle","isNaN","dStart","Math","abs","dSize","scroll","scrollValue","moveTabsScroll","delta","getScrollSize","containerSize","totalSize","i","handleStartScrollClick","handleEndScrollClick","handleScrollbarSizeChange","useCallback","getConditionalElements","conditionalElements","scrollbarSizeListener","createElement","scrollButtonsActive","showScrollButtons","scrollButtonStart","onClick","disabled","scrollButtonEnd","scrollSelectedIntoView","nextScrollStart","updateScrollButtonState","scrollHeight","clientHeight","showStartScroll","showEndScroll","useEffect","handleResize","win","addEventListener","clear","removeEventListener","handleTabsScroll","useMemo","useImperativeHandle","updateIndicator","updateScrollButtons","color","style","childIndex","Children","map","child","isValidElement","childValue","undefined","set","selected","cloneElement","fullWidth","tabIndex","handleKeyDown","event","target","role","getAttribute","newFocusTarget","previousItemKey","nextItemKey","key","previousElementSibling","lastChild","nextElementSibling","firstChild","focus","preventDefault","onScroll","onKeyDown","propTypes","bool","string","node","object","elementType","oneOf","func","any","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport ownerWindow from '../utils/ownerWindow';\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from '../TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nimport useTheme from '../styles/useTheme';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden',\n    minHeight: 48,\n    WebkitOverflowScrolling: 'touch',\n    // Add iOS momentum scrolling.\n    display: 'flex'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the flex container element. */\n  flexContainer: {\n    display: 'flex'\n  },\n\n  /* Styles applied to the flex container element if `orientation=\"vertical\"`. */\n  flexContainerVertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n  centered: {\n    justifyContent: 'center'\n  },\n\n  /* Styles applied to the tablist element. */\n  scroller: {\n    position: 'relative',\n    display: 'inline-block',\n    flex: '1 1 auto',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n  fixed: {\n    overflowX: 'hidden',\n    width: '100%'\n  },\n\n  /* Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"horizontal\"`. */\n  scrollableX: {\n    overflowX: 'auto',\n    overflowY: 'hidden'\n  },\n\n  /* Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"vertical\"`. */\n  scrollableY: {\n    overflowY: 'auto',\n    overflowX: 'hidden'\n  },\n\n  /* Styles applied to the tablist element if `variant=\"scrollable\"` and `visibleScrollbar={false}`. */\n  hideScrollbar: {\n    // Hide dimensionless scrollbar on MacOS\n    scrollbarWidth: 'none',\n    // Firefox\n    '&::-webkit-scrollbar': {\n      display: 'none' // Safari + Chrome\n\n    }\n  },\n\n  /* Styles applied to the `ScrollButtonComponent` component. */\n  scrollButtons: {},\n\n  /* Styles applied to the `ScrollButtonComponent` component if `allowScrollButtonsMobile={true}`. */\n  scrollButtonsHideMobile: {\n    [theme.breakpoints.down('sm')]: {\n      display: 'none'\n    }\n  },\n\n  /* Styles applied to the `TabIndicator` component. */\n  indicator: {}\n});\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(props, ref) {\n  const {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy,\n    action,\n    centered = false,\n    children: childrenProp,\n    classes,\n    className,\n    component: Component = 'div',\n    allowScrollButtonsMobile = false,\n    indicatorColor = 'secondary',\n    onChange,\n    orientation = 'horizontal',\n    ScrollButtonComponent = TabScrollButton,\n    scrollButtons = 'auto',\n    selectionFollowsFocus,\n    TabIndicatorProps = {},\n    TabScrollButtonProps,\n    textColor = 'inherit',\n    value,\n    variant = 'standard',\n    visibleScrollbar = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"allowScrollButtonsMobile\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\", \"visibleScrollbar\"]);\n\n  const theme = useTheme();\n  const scrollable = variant === 'scrollable';\n  const isRtl = theme.direction === 'rtl';\n  const vertical = orientation === 'vertical';\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  const start = vertical ? 'top' : 'left';\n  const end = vertical ? 'bottom' : 'right';\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  const size = vertical ? 'height' : 'width';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('Material-UI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  const [mounted, setMounted] = React.useState(false);\n  const [indicatorStyle, setIndicatorStyle] = React.useState({});\n  const [displayScroll, setDisplayScroll] = React.useState({\n    start: false,\n    end: false\n  });\n  const [scrollerStyle, setScrollerStyle] = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  });\n  const valueToIndex = new Map();\n  const tabsRef = React.useRef(null);\n  const tabListRef = React.useRef(null);\n\n  const getTabsMeta = () => {\n    const tabsNode = tabsRef.current;\n    let tabsMeta;\n\n    if (tabsNode) {\n      const rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    let tabMeta;\n\n    if (tabsNode && value !== false) {\n      const children = tabListRef.current.children;\n\n      if (children.length > 0) {\n        const tab = children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([`Material-UI: The value provided to the Tabs component is invalid.`, `None of the Tabs' children match with \\`${value}\\`.`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta,\n      tabMeta\n    };\n  };\n\n  const updateIndicatorState = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n    let startValue = 0;\n\n    if (tabMeta && tabsMeta) {\n      if (vertical) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      } else {\n        const correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = tabMeta.left - tabsMeta.left + correction;\n      }\n    }\n\n    const newIndicatorStyle = {\n      [start]: startValue,\n      // May be wrong until the font is loaded.\n      [size]: tabMeta ? tabMeta[size] : 0\n    }; // IE11 support, replace with Number.isNaN\n    // eslint-disable-next-line no-restricted-globals\n\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      const dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  const scroll = scrollValue => {\n    animate(scrollStart, tabsRef.current, scrollValue);\n  };\n\n  const moveTabsScroll = delta => {\n    let scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\n\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n\n    scroll(scrollValue);\n  };\n\n  const getScrollSize = () => {\n    const containerSize = tabsRef.current[clientSize];\n    let totalSize = 0;\n    const children = Array.from(tabListRef.current.children);\n\n    for (let i = 0; i < children.length; i += 1) {\n      const tab = children[i];\n\n      if (totalSize + tab[clientSize] > containerSize) {\n        break;\n      }\n\n      totalSize += tab[clientSize];\n    }\n\n    return totalSize;\n  };\n\n  const handleStartScrollClick = () => {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n\n  const handleEndScrollClick = () => {\n    moveTabsScroll(getScrollSize());\n  }; // TODO Remove <ScrollbarSize /> as browser support for hidding the scrollbar\n  // with CSS improves.\n\n\n  const handleScrollbarSizeChange = React.useCallback(scrollbarWidth => {\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth\n    });\n  }, []);\n\n  const getConditionalElements = () => {\n    const conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/React.createElement(ScrollbarSize, {\n      onChange: handleScrollbarSizeChange,\n      className: clsx(classes.scrollableX, classes.hideScrollbar)\n    }) : null;\n    const scrollButtonsActive = displayScroll.start || displayScroll.end;\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/React.createElement(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayScroll.start,\n      className: clsx(classes.scrollButtons, !allowScrollButtonsMobile && classes.scrollButtonsHideMobile)\n    }, TabScrollButtonProps)) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/React.createElement(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayScroll.end,\n      className: clsx(classes.scrollButtons, !allowScrollButtonsMobile && classes.scrollButtonsHideMobile)\n    }, TabScrollButtonProps)) : null;\n    return conditionalElements;\n  };\n\n  const scrollSelectedIntoView = useEventCallback(() => {\n    const {\n      tabsMeta,\n      tabMeta\n    } = getTabsMeta();\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart);\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n      scroll(nextScrollStart);\n    }\n  });\n  const updateScrollButtonState = useEventCallback(() => {\n    if (scrollable && scrollButtons !== false) {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight,\n        scrollWidth,\n        clientWidth\n      } = tabsRef.current;\n      let showStartScroll;\n      let showEndScroll;\n\n      if (vertical) {\n        showStartScroll = scrollTop > 1;\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\n      } else {\n        const scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      }\n\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\n        setDisplayScroll({\n          start: showStartScroll,\n          end: showEndScroll\n        });\n      }\n    }\n  });\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    const win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return () => {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  const handleTabsScroll = React.useMemo(() => debounce(() => {\n    updateScrollButtonState();\n  }), [updateScrollButtonState]);\n  React.useEffect(() => {\n    return () => {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  React.useEffect(() => {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(() => {\n    scrollSelectedIntoView();\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, () => ({\n    updateIndicator: updateIndicatorState,\n    updateScrollButtons: updateScrollButtonState\n  }), [updateIndicatorState, updateScrollButtonState]);\n  const indicator = /*#__PURE__*/React.createElement(TabIndicator, _extends({\n    className: classes.indicator,\n    orientation: orientation,\n    color: indicatorColor\n  }, TabIndicatorProps, {\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n  let childIndex = 0;\n  const children = React.Children.map(childrenProp, child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    const selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, _extends({\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected,\n      selectionFollowsFocus,\n      onChange,\n      textColor,\n      value: childValue\n    }, childIndex === 1 && value === false && !child.props.tabIndex ? {\n      tabIndex: 0\n    } : {}));\n  });\n\n  const handleKeyDown = event => {\n    const {\n      target\n    } = event; // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n\n    const role = target.getAttribute('role');\n\n    if (role !== 'tab') {\n      return;\n    }\n\n    let newFocusTarget = null;\n    let previousItemKey = orientation !== \"vertical\" ? 'ArrowLeft' : 'ArrowUp';\n    let nextItemKey = orientation !== \"vertical\" ? 'ArrowRight' : 'ArrowDown';\n\n    if (orientation !== \"vertical\" && theme.direction === 'rtl') {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n\n    switch (event.key) {\n      case previousItemKey:\n        newFocusTarget = target.previousElementSibling || tabListRef.current.lastChild;\n        break;\n\n      case nextItemKey:\n        newFocusTarget = target.nextElementSibling || tabListRef.current.firstChild;\n        break;\n\n      case 'Home':\n        newFocusTarget = tabListRef.current.firstChild;\n        break;\n\n      case 'End':\n        newFocusTarget = tabListRef.current.lastChild;\n        break;\n\n      default:\n        break;\n    }\n\n    if (newFocusTarget !== null) {\n      newFocusTarget.focus();\n      event.preventDefault();\n    }\n  };\n\n  const conditionalElements = getConditionalElements();\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, vertical && classes.vertical),\n    ref: ref\n  }, other), conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.scroller, scrollable ? [vertical ? classes.scrollableY : classes.scrollableX, !visibleScrollbar && classes.hideScrollbar] : classes.fixed),\n    style: {\n      overflow: scrollerStyle.overflow,\n      [vertical ? `margin${isRtl ? 'Left' : 'Right'}` : 'marginBottom']: visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth\n    },\n    ref: tabsRef,\n    onScroll: handleTabsScroll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n    className: clsx(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),\n    onKeyDown: handleKeyDown,\n    ref: tabListRef,\n    role: \"tablist\"\n  }, children), mounted && indicator), conditionalElements.scrollButtonEnd);\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Callback fired when the component mounts.\n   * This is useful when you want to trigger an action programmatically.\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\n   *\n   * @param {object} actions This object contains all possible actions\n   * that can be triggered programmatically.\n   */\n  action: refType,\n\n  /**\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\n   * @default false\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n\n  /**\n   * The label for the Tabs as a string.\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * An id or list of ids separated by a space that label the Tabs.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * If `true`, the tabs will be centered.\n   * This prop is intended for large views.\n   * @default false\n   */\n  centered: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Determines the color of the indicator.\n   * @default 'secondary'\n   */\n  indicatorColor: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {any} value We default to the index of the child (number)\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The component used to render the scroll buttons.\n   * @default TabScrollButton\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\n   * Determine behavior of scroll buttons when tabs are set to scroll:\n   *\n   * - `auto` will only present them when not all the items are visible.\n   * - `true` will always present them.\n   * - `false` will never present them.\n   *\n   * By default the scroll buttons are hidden on mobile.\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\n   * @default 'auto'\n   */\n  scrollButtons: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOf(['auto', false, true]),\n\n  /**\n   * If `true` the selected tab changes on focus. Otherwise it only\n   * changes on activation.\n   */\n  selectionFollowsFocus: PropTypes.bool,\n\n  /**\n   * Props applied to the tab indicator element.\n   * @default  {}\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.\n   */\n  TabScrollButtonProps: PropTypes.object,\n\n  /**\n   * Determines the color of the `Tab`.\n   * @default 'inherit'\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * The value of the currently selected `Tab`.\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\n   */\n  value: PropTypes.any,\n\n  /**\n   * Determines additional display behavior of the tabs:\n   *\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\n   *  scrolling (or swiping) of the tab bar.\n   *  -`fullWidth` will make the tabs grow to use all the available space,\n   *  which should be used for small views, like on mobile.\n   *  - `standard` will render the default state.\n   * @default 'standard'\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n\n  /**\n   * If `true`, the scrollbar will be visible. It can be useful when displaying\n   * a long vertical list of tabs.\n   * @default false\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabs'\n})(Tabs);"]},"metadata":{},"sourceType":"module"}