{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  root: {\n    position: 'absolute',\n    height: 2,\n    bottom: 0,\n    width: '100%',\n    transition: theme.transitions.create()\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.primary.main\n  },\n  colorSecondary: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  vertical: {\n    height: '100%',\n    width: 2,\n    right: 0\n  }\n});\n/**\n * @ignore - internal component.\n */\n\nconst TabIndicator = /*#__PURE__*/React.forwardRef(function TabIndicator(props, ref) {\n  const {\n    classes,\n    className,\n    color,\n    orientation\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"orientation\"]);\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, classes[`color${capitalize(color)}`], className, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabIndicator.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   * The color of the tab indicator.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']).isRequired,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateTabIndicator'\n})(TabIndicator);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Tabs/TabIndicator.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","capitalize","styles","theme","root","position","height","bottom","width","transition","transitions","create","colorPrimary","backgroundColor","palette","primary","main","colorSecondary","secondary","vertical","right","TabIndicator","forwardRef","props","ref","classes","className","color","orientation","other","createElement","process","env","NODE_ENV","propTypes","object","isRequired","string","oneOf","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAO,MAAMC,MAAM,GAAGC,KAAK,KAAK;AAC9BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,MAAM,EAAE,CAFJ;AAGJC,IAAAA,MAAM,EAAE,CAHJ;AAIJC,IAAAA,KAAK,EAAE,MAJH;AAKJC,IAAAA,UAAU,EAAEN,KAAK,CAACO,WAAN,CAAkBC,MAAlB;AALR,GADwB;AAQ9BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,eAAe,EAAEV,KAAK,CAACW,OAAN,CAAcC,OAAd,CAAsBC;AAD3B,GARgB;AAW9BC,EAAAA,cAAc,EAAE;AACdJ,IAAAA,eAAe,EAAEV,KAAK,CAACW,OAAN,CAAcI,SAAd,CAAwBF;AAD3B,GAXc;AAc9BG,EAAAA,QAAQ,EAAE;AACRb,IAAAA,MAAM,EAAE,MADA;AAERE,IAAAA,KAAK,EAAE,CAFC;AAGRY,IAAAA,KAAK,EAAE;AAHC;AAdoB,CAAL,CAApB;AAoBP;;;;AAIA,MAAMC,YAAY,GAAG,aAAaxB,KAAK,CAACyB,UAAN,CAAiB,SAASD,YAAT,CAAsBE,KAAtB,EAA6BC,GAA7B,EAAkC;AACnF,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA;AAJI,MAKFL,KALJ;AAAA,QAMMM,KAAK,GAAGjC,6BAA6B,CAAC2B,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,EAAyB,OAAzB,EAAkC,aAAlC,CAAR,CAN3C;;AAQA,SAAO,aAAa1B,KAAK,CAACiC,aAAN,CAAoB,MAApB,EAA4BnC,QAAQ,CAAC;AACvD+B,IAAAA,SAAS,EAAE3B,IAAI,CAAC0B,OAAO,CAACrB,IAAT,EAAeqB,OAAO,CAAE,QAAOxB,UAAU,CAAC0B,KAAD,CAAQ,EAA3B,CAAtB,EAAqDD,SAArD,EAAgEE,WAAW,KAAK,UAAhB,IAA8BH,OAAO,CAACN,QAAtG,CADwC;AAEvDK,IAAAA,GAAG,EAAEA;AAFkD,GAAD,EAGrDK,KAHqD,CAApC,CAApB;AAID,CAbiC,CAAlC;AAcAE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCZ,YAAY,CAACa,SAAb,GAAyB;AAC/D;;;;AAIAT,EAAAA,OAAO,EAAE3B,SAAS,CAACqC,MAAV,CAAiBC,UALqC;;AAO/D;;;AAGAV,EAAAA,SAAS,EAAE5B,SAAS,CAACuC,MAV0C;;AAY/D;;;;AAIAV,EAAAA,KAAK,EAAE7B,SAAS,CAACwC,KAAV,CAAgB,CAAC,SAAD,EAAY,WAAZ,CAAhB,EAA0CF,UAhBc;;AAkB/D;;;AAGAR,EAAAA,WAAW,EAAE9B,SAAS,CAACwC,KAAV,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB,EAA4CF;AArBM,CAAjE,GAsBI,KAAK,CAtBT;AAuBA,eAAepC,UAAU,CAACE,MAAD,EAAS;AAChCqC,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZlB,YAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport const styles = theme => ({\n  root: {\n    position: 'absolute',\n    height: 2,\n    bottom: 0,\n    width: '100%',\n    transition: theme.transitions.create()\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.primary.main\n  },\n  colorSecondary: {\n    backgroundColor: theme.palette.secondary.main\n  },\n  vertical: {\n    height: '100%',\n    width: 2,\n    right: 0\n  }\n});\n/**\n * @ignore - internal component.\n */\n\nconst TabIndicator = /*#__PURE__*/React.forwardRef(function TabIndicator(props, ref) {\n  const {\n    classes,\n    className,\n    color,\n    orientation\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"color\", \"orientation\"]);\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, classes[`color${capitalize(color)}`], className, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabIndicator.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   * The color of the tab indicator.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']).isRequired,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateTabIndicator'\n})(TabIndicator);"]},"metadata":{},"sourceType":"module"}