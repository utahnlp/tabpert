{"ast":null,"code":"/**\n * TODO v5: consider to make it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise make sure to cleanup previous {ref} if it changes. See\n * https://github.com/mui-org/material-ui/issues/13539\n *\n * useful if you want to expose the ref of an inner component to the public api\n * while still using it inside the component\n * @param ref a ref callback or ref object if anything falsy this is a no-op\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/utils/setRef.js"],"names":["setRef","ref","value","current"],"mappings":"AAAA;;;;;;;;;;;;;AAaA,eAAe,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC,KAArB,EAA4B;AACzC,MAAI,OAAOD,GAAP,KAAe,UAAnB,EAA+B;AAC7BA,IAAAA,GAAG,CAACC,KAAD,CAAH;AACD,GAFD,MAEO,IAAID,GAAJ,EAAS;AACdA,IAAAA,GAAG,CAACE,OAAJ,GAAcD,KAAd;AACD;AACF","sourcesContent":["/**\n * TODO v5: consider to make it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise make sure to cleanup previous {ref} if it changes. See\n * https://github.com/mui-org/material-ui/issues/13539\n *\n * useful if you want to expose the ref of an inner component to the public api\n * while still using it inside the component\n * @param ref a ref callback or ref object if anything falsy this is a no-op\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}"]},"metadata":{},"sourceType":"module"}