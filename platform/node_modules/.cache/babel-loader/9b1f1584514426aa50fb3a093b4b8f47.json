{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/CardContent/CardContent.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","styles","root","padding","paddingBottom","CardContent","forwardRef","props","ref","classes","className","component","Component","other","createElement","process","env","NODE_ENV","propTypes","children","node","object","string","elementType","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,MAAMC,MAAM,GAAG;AACpB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,EADL;AAEJ,oBAAgB;AACdC,MAAAA,aAAa,EAAE;AADD;AAFZ;AAFc,CAAf;AASP,MAAMC,WAAW,GAAG,aAAaR,KAAK,CAACS,UAAN,CAAiB,SAASD,WAAT,CAAqBE,KAArB,EAA4BC,GAA5B,EAAiC;AACjF,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,SAAS,EAAEC,SAAS,GAAG;AAHnB,MAIFL,KAJJ;AAAA,QAKMM,KAAK,GAAGjB,6BAA6B,CAACW,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,EAAyB,WAAzB,CAAR,CAL3C;;AAOA,SAAO,aAAaV,KAAK,CAACiB,aAAN,CAAoBF,SAApB,EAA+BjB,QAAQ,CAAC;AAC1De,IAAAA,SAAS,EAAEX,IAAI,CAACU,OAAO,CAACP,IAAT,EAAeQ,SAAf,CAD2C;AAE1DF,IAAAA,GAAG,EAAEA;AAFqD,GAAD,EAGxDK,KAHwD,CAAvC,CAApB;AAID,CAZgC,CAAjC;AAaAE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCZ,WAAW,CAACa,SAAZ,GAAwB;AAC9D;AACA;AACA;AACA;;AAEA;;;AAGAC,EAAAA,QAAQ,EAAErB,SAAS,CAACsB,IAT0C;;AAW9D;;;AAGAX,EAAAA,OAAO,EAAEX,SAAS,CAACuB,MAd2C;;AAgB9D;;;AAGAX,EAAAA,SAAS,EAAEZ,SAAS,CAACwB,MAnByC;;AAqB9D;;;;AAIAX,EAAAA,SAAS,EAAEb,SAAS,CAACyB;AAzByC,CAAhE,GA0BI,KAAK,CA1BT;AA2BA,eAAevB,UAAU,CAACC,MAAD,EAAS;AAChCuB,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZnB,WAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  const {\n    classes,\n    className,\n    component: Component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);"]},"metadata":{},"sourceType":"module"}