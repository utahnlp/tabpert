{"ast":null,"code":"var _jsxFileName = \"/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/Table.js\";\nimport React, { Component } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { getListStyle, getItemStyle } from \"./Colours\";\nimport { IconButton, TextareaAutosize } from \"@material-ui/core\";\nimport HypothesisModal from \"./HypothesisModal\";\nimport KeyModal from \"./KeyModal\";\nimport Hypothesis from \"./Hypothesis\";\n\nfunction Table(props) {\n  const pairs = props.pairs;\n  const type = props.type;\n  const name = props.name;\n  const editable = props.editable;\n  const checkboxes = props.checkboxes;\n  const hypo = props.hypotheses;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, Object.keys(pairs).map((key, key_idx) => {\n    var checkbox = key; // console.log(\"$$$$$$$$$$$$$$\");\n    // console.log(this.props);\n    // console.log(type, hypo);\n\n    if (checkboxes === true) {\n      checkbox = /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        custom: true,\n        type: \"checkbox\",\n        defaultChecked: props.hypo_info[hypo][2].includes(key) ? true : false,\n        id: type + \"_check_\" + key,\n        label: key,\n        className: \"checkbox label\",\n        onChange: () => {\n          props.handleRowChange(type, key, hypo);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      style: {\n        marginBottom: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: type + \"_\" + key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef,\n      style: getListStyle(snapshot.isDraggingOver, type)\n    }, provided.droppableProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }), !checkboxes && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\",\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 27\n      }\n    }, checkbox), \" \", /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      style: {\n        marginLeft: \"auto\"\n      },\n      onClick: () => {\n        var newState = props.getDefaultState();\n        newState[type + \"_keys\"][key_idx] = 1;\n        props.handleStateChange(newState);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 27\n      }\n    }, type !== \"original\" && /*#__PURE__*/React.createElement(EditIcon, {\n      className: \"float-right\",\n      style: {\n        width: \"15px\",\n        height: \"15px\",\n        opacity: \"0.5\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 31\n      }\n    })), type !== \"original\" && /*#__PURE__*/React.createElement(KeyModal, {\n      show: props.showArray[key_idx],\n      onHide: () => props.handleStateChange(props.getDefaultState()),\n      onDelete: (type, key) => {\n        props.deleteSection(type, key);\n      },\n      onEdit: new_key => {\n        props.editSectionName(type, key, new_key);\n      },\n      section_name: key,\n      type: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }))), checkboxes && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: bgcolors_dict[type],\n        marginLeft: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, checkbox)), pairs[key].map((value, id) => {\n      // console.log(\"value is ^^^^^\");\n      // console.log(value);\n      return /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: type + \"_\" + key + \"_\" + id,\n        index: id,\n        className: \"draggable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef\n      }, provided.draggableProps, provided.dragHandleProps, {\n        style: getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n        style: {\n          marginLeft: \"20px\",\n          background: \"transparent\",\n          resize: \"none\",\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\n          borderColor: \"rgba(0, 0, 0, 0)\"\n        },\n        name: name,\n        id: \"item_\" + type + \"_\" + key + \"_\" + id,\n        value: type === \"original\" ? value : Object.keys(value)[0],\n        onChange: e => props.handleChange(e, \"item_\" + type + \"_\" + key + \"_\" + id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 33\n        }\n      }))));\n    }))));\n  })), type !== \"original\" && !checkboxes && /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      var lastIdx = props.addSection(type, \"New Section Name\");\n      var newState = props.getDefaultState();\n      newState[type + \"_keys\"][lastIdx] = 1;\n      props.handleStateChange(newState);\n    },\n    className: \"text-white ml-auto float-right\",\n    style: {\n      alignContent: \"right\",\n      fontSize: \"15px\",\n      marginRight: \"-16px\",\n      marginTop: \"-15px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, \"Add section\", /*#__PURE__*/React.createElement(AddIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }))))));\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/Table.js"],"names":["React","Component","Droppable","Draggable","Container","Row","Col","Form","Button","AddIcon","EditIcon","getListStyle","getItemStyle","IconButton","TextareaAutosize","HypothesisModal","KeyModal","Hypothesis","Table","props","pairs","type","name","editable","checkboxes","hypo","hypotheses","Object","keys","map","key","key_idx","checkbox","hypo_info","includes","handleRowChange","marginBottom","provided","snapshot","innerRef","isDraggingOver","droppableProps","display","whiteSpace","width","marginLeft","newState","getDefaultState","handleStateChange","height","opacity","showArray","deleteSection","new_key","editSectionName","backgroundColor","bgcolors_dict","value","id","draggableProps","dragHandleProps","isDragging","style","background","resize","borderColor","e","handleChange","lastIdx","addSection","alignContent","fontSize","marginRight","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { getListStyle, getItemStyle } from \"./Colours\";\nimport { IconButton, TextareaAutosize } from \"@material-ui/core\";\nimport HypothesisModal from \"./HypothesisModal\";\nimport KeyModal from \"./KeyModal\";\nimport Hypothesis from \"./Hypothesis\";\n\nfunction Table(props) {\n  const pairs = props.pairs;\n  const type = props.type;\n  const name = props.name;\n  const editable = props.editable;\n  const checkboxes = props.checkboxes;\n  const hypo = props.hypotheses;\n\n  return (\n    <>\n      {\" \"}\n      <Container>\n        {Object.keys(pairs).map((key, key_idx) => {\n          var checkbox = key;\n          // console.log(\"$$$$$$$$$$$$$$\");\n          // console.log(this.props);\n          // console.log(type, hypo);\n          if (checkboxes === true) {\n            checkbox = (\n              <Form>\n                <Form.Check\n                  custom\n                  type={\"checkbox\"}\n                  defaultChecked={\n                    props.hypo_info[hypo][2].includes(key) ? true : false\n                  }\n                  id={type + \"_check_\" + key}\n                  label={key}\n                  className=\"checkbox label\"\n                  onChange={() => {\n                    props.handleRowChange(type, key, hypo);\n                  }}\n                />\n              </Form>\n            );\n          }\n\n          return (\n            <Container style={{ marginBottom: \"20px\" }}>\n              <Droppable droppableId={type + \"_\" + key}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    style={getListStyle(snapshot.isDraggingOver, type)}\n                    {...provided.droppableProps}\n                  >\n                    {!checkboxes && (\n                      <div\n                        style={{\n                          display: \"inline-block\",\n                          whiteSpace: \"nowrap\",\n                          width: \"100%\",\n                        }}\n                      >\n                        {\" \"}\n                        <center>\n                          <strong>{checkbox}</strong>{\" \"}\n                          <IconButton\n                            size=\"small\"\n                            style={{ marginLeft: \"auto\" }}\n                            onClick={() => {\n                              var newState = props.getDefaultState();\n                              newState[type + \"_keys\"][key_idx] = 1;\n                              props.handleStateChange(newState);\n                            }}\n                          >\n                            {type !== \"original\" && (\n                              <EditIcon\n                                className=\"float-right\"\n                                style={{\n                                  width: \"15px\",\n                                  height: \"15px\",\n                                  opacity: \"0.5\",\n                                }}\n                              />\n                            )}\n                          </IconButton>\n                          {type !== \"original\" && (\n                            <KeyModal\n                              show={props.showArray[key_idx]}\n                              onHide={() =>\n                                props.handleStateChange(props.getDefaultState())\n                              }\n                              onDelete={(type, key) => {\n                                props.deleteSection(type, key);\n                              }}\n                              onEdit={(new_key) => {\n                                props.editSectionName(type, key, new_key);\n                              }}\n                              section_name={key}\n                              type={type}\n                            />\n                          )}\n                        </center>\n                      </div>\n                    )}\n                    {checkboxes && (\n                      <div\n                        style={{\n                          backgroundColor: bgcolors_dict[type],\n                          marginLeft: \"20px\",\n                        }}\n                      >\n                        <strong>{checkbox}</strong>\n                      </div>\n                    )}\n                    {pairs[key].map((value, id) => {\n                      // console.log(\"value is ^^^^^\");\n                      // console.log(value);\n                      return (\n                        <Draggable\n                          draggableId={type + \"_\" + key + \"_\" + id}\n                          index={id}\n                          className=\"draggable\"\n                        >\n                          {(provided, snapshot) => (\n                            <div\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              style={getItemStyle(\n                                snapshot.isDragging,\n                                provided.draggableProps.style\n                              )}\n                            >\n                              <Row>\n                                <TextareaAutosize\n                                  style={{\n                                    marginLeft: \"20px\",\n                                    background: \"transparent\",\n                                    resize: \"none\",\n                                    backgroundColor: \"rgba(0, 0, 0, 0)\",\n                                    borderColor: \"rgba(0, 0, 0, 0)\",\n                                  }}\n                                  name={name}\n                                  id={\"item_\" + type + \"_\" + key + \"_\" + id}\n                                  value={\n                                    type === \"original\"\n                                      ? value\n                                      : Object.keys(value)[0]\n                                  }\n                                  onChange={(e) =>\n                                    props.handleChange(\n                                      e,\n                                      \"item_\" + type + \"_\" + key + \"_\" + id\n                                    )\n                                  }\n                                />\n                              </Row>\n                            </div>\n                          )}\n                        </Draggable>\n                      );\n                    })}\n                  </div>\n                )}\n              </Droppable>\n            </Container>\n          );\n        })}\n      </Container>\n      {type !== \"original\" && !checkboxes && (\n        <Container>\n          {\" \"}\n          <Row>\n            <div className=\"float-right\" style={{ width: \"100%\" }}>\n              <Button\n                onClick={() => {\n                  var lastIdx = props.addSection(type, \"New Section Name\");\n                  var newState = props.getDefaultState();\n                  newState[type + \"_keys\"][lastIdx] = 1;\n                  props.handleStateChange(newState);\n                }}\n                className=\"text-white ml-auto float-right\"\n                style={{\n                  alignContent: \"right\",\n                  fontSize: \"15px\",\n                  marginRight: \"-16px\",\n                  marginTop: \"-15px\",\n                }}\n              >\n                Add section\n                <AddIcon />\n              </Button>\n            </div>\n          </Row>\n        </Container>\n      )}\n    </>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}