{"ast":null,"code":"var _jsxFileName = \"/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/View.js\";\nimport React, { Component } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { IconButton, TextareaAutosize } from \"@material-ui/core\";\nimport ShowModal from \"./Modal\";\nconst grid = 5;\nconst bgcolor = \"#92d5e6\";\nconst rowcolor = \"#f5eef8\";\nconst hypotheses_dark_colour = \"lightgreen\";\nconst hypotheses_light_colour = \"#E1ECF4\";\n\nclass View extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRows = this.tableRows.bind(this);\n    this.showView = this.showView.bind(this);\n    this.hypothesesDisplay = this.hypothesesDisplay.bind(this);\n    this.state = this.getDefaultState();\n  }\n\n  getDefaultState() {\n    let a = new Array(9).fill(0);\n    let b = new Array(9).fill(0);\n    let c = new Array(9).fill(0);\n    let state_var = {\n      A: a,\n      B: b,\n      C: c\n    };\n    return state_var;\n  }\n\n  getListStyle(isDraggingOver) {\n    return {\n      background: isDraggingOver ? \"#BADDE0\" : bgcolor,\n      padding: grid,\n      minWidth: \"250px\",\n      minHeight: \"50px\"\n    };\n  }\n\n  getItemStyle(isDragging, draggableStyle) {\n    return {\n      // some basic styles to make the items look a bit nicer\n      userSelect: \"none\",\n      padding: grid * 2,\n      margin: `0 0 ${grid}px 0`,\n      // change background colour if dragging\n      background: isDragging ? \"lightgreen\" : rowcolor,\n      // styles we need to apply on draggables\n      ...draggableStyle\n    };\n  }\n\n  tableRows(pairs, type, name = \"draggable\", editable = true, checkboxes = false, hypo) {\n    return Object.keys(pairs).map(key => {\n      var checkbox = key; // console.log(\"$$$$$$$$$$$$$$\");\n      // console.log(this.props);\n      // console.log(type, hypo);\n\n      if (checkboxes === true) {\n        checkbox = /*#__PURE__*/React.createElement(Form, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check, {\n          custom: true,\n          type: \"checkbox\",\n          defaultChecked: this.props[type.toLowerCase() + \"h\"][hypo][2].includes(key) ? true : false,\n          id: type + \"_check_\" + key,\n          label: key,\n          onChange: () => {\n            this.props.handleRowChange(type, key, hypo);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: type + \"_\" + key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef,\n        style: this.getListStyle(snapshot.isDraggingOver)\n      }, provided.droppableProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"center\", {\n        style: {\n          backgroundColor: bgcolor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 19\n        }\n      }, checkbox)), pairs[key].map((value, id) => {\n        // console.log(\"value is ^^^^^\");\n        // console.log(value);\n        return /*#__PURE__*/React.createElement(Draggable, {\n          draggableId: type + \"_\" + key + \"_\" + id,\n          index: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }\n        }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          style: this.getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n          style: {\n            marginLeft: \"20px\",\n            background: \"transparent\",\n            resize: \"none\",\n            backgroundColor: \"rgba(0, 0, 0, 0)\",\n            borderColor: \"rgba(0, 0, 0, 0)\"\n          },\n          name: name,\n          id: \"item_\" + type + \"_\" + key + \"_\" + id,\n          value: type === \"original\" ? value : Object.keys(value)[0],\n          onChange: e => this.props.handleChange(e, \"item_\" + type + \"_\" + key + \"_\" + id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }\n        }))));\n      }))));\n    });\n  }\n\n  hypothesesDisplay(hypo, hypo_info, type, idx) {\n    var stylecolor = idx % 2 ? {\n      backgroundColor: hypotheses_light_colour\n    } : {\n      backgroundColor: hypotheses_dark_colour\n    };\n    var showModal = /*#__PURE__*/React.createElement(React.Fragment, null); // console.log(type, hypo_info, type, idx);\n\n    if (type !== \"original\") {\n      // console.log(\"~~~~~~~~~~~~~~~\");\n      // console.log(this.props[type.toLowerCase() + \"h\"][hypo]);\n      // console.log(hypo);\n      // console.log(\"show modal is \");\n      // console.log(type == \"original\" ? false : this.state[type][idx]);\n      showModal = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => {\n          if (type == \"original\") return;\n          var newState = this.getDefaultState();\n          newState[type][idx] = 1;\n          this.setState(newState); // console.log(\"^^^^^^^^^we changed the state!\");\n          // console.log(newState[type][idx]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(ShowModal, {\n        show: type == \"original\" ? false : this.state[type][idx],\n        onHide: () => this.setState(this.getDefaultState()),\n        hypo: hypo,\n        idx: idx,\n        type: type,\n        table: this.tableRows(this.props[type], type, \"non-draggable\", false, true, hypo),\n        strategies: this.props[type.toLowerCase() + \"h\"][hypo][1],\n        rows: this.props[type.toLowerCase() + \"h\"][hypo][2],\n        handleStrategyChange: this.props.handleStrategyChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(Row, {\n      className: \"align-items-center\",\n      style: stylecolor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      style: {\n        height: \"100%s\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right\",\n      style: {\n        width: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, type == \"original\" && /*#__PURE__*/React.createElement(\"select\", {\n      defaultValue: hypo_info,\n      id: \"label_\" + type + idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: hypo_info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 19\n      }\n    }, hypo_info)), type !== \"original\" && /*#__PURE__*/React.createElement(\"select\", {\n      defaultValue: this.props[type.toLowerCase() + \"h\"][hypo][0],\n      id: \"label_\" + type + idx,\n      onChange: e => this.props.handleLabelChange(e, type, idx),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"E\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    }, \"E\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"N\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 19\n      }\n    }, \"N\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    }, \"C\"))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, showModal))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: \"230px\",\n        overflow: \"hidden\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n      id: \"hypothesis_\" + type + idx,\n      type: \"textarea\",\n      defaultValue: hypo,\n      style: {\n        resize: \"none\",\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\n        borderColor: \"rgba(0, 0, 0, 0)\"\n      },\n      onChange: e => this.props.handleHypothesisChange(e, type, hypo),\n      contentEditable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n  trash() {\n    return /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"trash\",\n      style: {\n        height: \"40px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef,\n      style: this.getListStyle(snapshot.isDraggingOver)\n    }, provided.droppableProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: \"15px\",\n        marginBottom: \"15px\",\n        marginLeft: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 13\n      }\n    }, \"Drag and drop a value here to delete it\"), () => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }));\n  }\n\n  addCard() {\n    // console.log(\"ADD\");\n    return /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 7\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef,\n      style: this.getListStyle(snapshot.isDraggingOver)\n    }, provided.droppableProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }\n    }), [1].map(value => {\n      return /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: \"new\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 17\n        }\n      }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef\n      }, provided.draggableProps, provided.dragHandleProps, {\n        style: this.getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          marginLeft: \"20px\",\n          background: \"transparent\",\n          resize: \"none\",\n          backgroundColor: \"rgba(0, 0, 0, 0)\",\n          borderColor: \"rgba(0, 0, 0, 0)\",\n          width: \"100%\"\n        },\n        name: \"draggable\",\n        id: \"NEW\",\n        defaultValue: \"Add a new value here! (write text, then drag and drop)\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }\n      }))));\n    })));\n  }\n\n  showView(type) {\n    const ohy = Object.keys(this.props.oh).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, this.props.oh[hypo], \"original\", idx);\n    });\n    var ah_items = Object.keys(this.props.ah).map(key => [key, this.props.ah[key]]);\n    ah_items.sort((first, second) => second[1][3] - first[1][3]); // console.log(ah_items);\n\n    const ahy = ah_items.map((hypo, idx) => {\n      // console.log(hypo);\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"A\", idx);\n    });\n    var bh_items = Object.keys(this.props.bh).map(key => [key, this.props.bh[key]]);\n    bh_items.sort((first, second) => second[1][3] - first[1][3]);\n    const bhy = bh_items.map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"B\", idx);\n    });\n    var ch_items = Object.keys(this.props.ch).map(key => [key, this.props.ch[key]]);\n    ch_items.sort((first, second) => second[1][3] - first[1][3]);\n    const chy = ch_items.map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"C\", idx);\n    });\n\n    if (type === \"drag\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 17\n        }\n      }, \"Original Table\")), this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 17\n        }\n      }, \"Table A\")), this.tableRows(this.props.A, \"A\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 17\n        }\n      }, \"Table B\")), this.tableRows(this.props.B, \"B\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 17\n        }\n      }, \"Table C\")), this.tableRows(this.props.C, \"C\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          width: \"100%\",\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }\n      }, ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }\n      }, ahy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }\n      }, bhy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }\n      }, chy)));\n    } else if (type === \"focusA\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.A, \"A\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }\n      }, ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }\n      }, ahy)));\n    } else if (type === \"focusB\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.B, \"B\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }\n      }, ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }\n      }, bhy)));\n    } else if (type === \"focusC\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.C, \"C\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }\n      }, ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }\n      }, chy)));\n    } else if (type == \"trash\") {\n      return /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 14\n        }\n      }, this.trash());\n    } else if (type == \"add\") {\n      return /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 14\n        }\n      }, this.addCard());\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.showView(this.props.type));\n  }\n\n}\n\nexport default View;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/View.js"],"names":["React","Component","Droppable","Draggable","Container","Row","Col","Form","AddIcon","IconButton","TextareaAutosize","ShowModal","grid","bgcolor","rowcolor","hypotheses_dark_colour","hypotheses_light_colour","View","constructor","props","tableRows","bind","showView","hypothesesDisplay","state","getDefaultState","a","Array","fill","b","c","state_var","A","B","C","getListStyle","isDraggingOver","background","padding","minWidth","minHeight","getItemStyle","isDragging","draggableStyle","userSelect","margin","pairs","type","name","editable","checkboxes","hypo","Object","keys","map","key","checkbox","toLowerCase","includes","handleRowChange","provided","snapshot","innerRef","droppableProps","backgroundColor","value","id","draggableProps","dragHandleProps","style","marginLeft","resize","borderColor","e","handleChange","hypo_info","idx","stylecolor","showModal","newState","setState","handleStrategyChange","height","width","handleLabelChange","overflow","handleHypothesisChange","trash","marginTop","marginBottom","addCard","ohy","oh","ah_items","ah","sort","first","second","ahy","bh_items","bh","bhy","ch_items","ch","chy","original","paddingRight","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { IconButton, TextareaAutosize } from \"@material-ui/core\";\nimport ShowModal from \"./Modal\";\n\nconst grid = 5;\nconst bgcolor = \"#92d5e6\";\nconst rowcolor = \"#f5eef8\";\nconst hypotheses_dark_colour = \"lightgreen\";\nconst hypotheses_light_colour = \"#E1ECF4\";\nclass View extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRows = this.tableRows.bind(this);\n    this.showView = this.showView.bind(this);\n    this.hypothesesDisplay = this.hypothesesDisplay.bind(this);\n    this.state = this.getDefaultState();\n  }\n\n  getDefaultState() {\n    let a = new Array(9).fill(0);\n    let b = new Array(9).fill(0);\n    let c = new Array(9).fill(0);\n    let state_var = { A: a, B: b, C: c };\n    return state_var;\n  }\n  getListStyle(isDraggingOver) {\n    return {\n      background: isDraggingOver ? \"#BADDE0\" : bgcolor,\n      padding: grid,\n      minWidth: \"250px\",\n      minHeight: \"50px\",\n    };\n  }\n  getItemStyle(isDragging, draggableStyle) {\n    return {\n      // some basic styles to make the items look a bit nicer\n      userSelect: \"none\",\n      padding: grid * 2,\n      margin: `0 0 ${grid}px 0`,\n\n      // change background colour if dragging\n      background: isDragging ? \"lightgreen\" : rowcolor,\n\n      // styles we need to apply on draggables\n      ...draggableStyle,\n    };\n  }\n  tableRows(\n    pairs,\n    type,\n    name = \"draggable\",\n    editable = true,\n    checkboxes = false,\n    hypo\n  ) {\n    return Object.keys(pairs).map((key) => {\n      var checkbox = key;\n      // console.log(\"$$$$$$$$$$$$$$\");\n      // console.log(this.props);\n      // console.log(type, hypo);\n      if (checkboxes === true) {\n        checkbox = (\n          <Form>\n            <Form.Check\n              custom\n              type={\"checkbox\"}\n              defaultChecked={\n                this.props[type.toLowerCase() + \"h\"][hypo][2].includes(key)\n                  ? true\n                  : false\n              }\n              id={type + \"_check_\" + key}\n              label={key}\n              onChange={() => {\n                this.props.handleRowChange(type, key, hypo);\n              }}\n            />\n          </Form>\n        );\n      }\n\n      return (\n        <Container>\n          <Droppable droppableId={type + \"_\" + key}>\n            {(provided, snapshot) => (\n              <div\n                ref={provided.innerRef}\n                style={this.getListStyle(snapshot.isDraggingOver)}\n                {...provided.droppableProps}\n              >\n                <center\n                  style={{\n                    backgroundColor: bgcolor,\n                  }}\n                >\n                  <strong>{checkbox}</strong>\n                </center>\n                {pairs[key].map((value, id) => {\n                  // console.log(\"value is ^^^^^\");\n                  // console.log(value);\n                  return (\n                    <Draggable\n                      draggableId={type + \"_\" + key + \"_\" + id}\n                      index={id}\n                    >\n                      {(provided, snapshot) => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={this.getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}\n                        >\n                          <Row>\n                            <TextareaAutosize\n                              style={{\n                                marginLeft: \"20px\",\n                                background: \"transparent\",\n                                resize: \"none\",\n                                backgroundColor: \"rgba(0, 0, 0, 0)\",\n                                borderColor: \"rgba(0, 0, 0, 0)\",\n                              }}\n                              name={name}\n                              id={\"item_\" + type + \"_\" + key + \"_\" + id}\n                              value={\n                                type === \"original\"\n                                  ? value\n                                  : Object.keys(value)[0]\n                              }\n                              onChange={(e) =>\n                                this.props.handleChange(\n                                  e,\n                                  \"item_\" + type + \"_\" + key + \"_\" + id\n                                )\n                              }\n                            />\n                          </Row>\n                        </div>\n                      )}\n                    </Draggable>\n                  );\n                })}\n              </div>\n            )}\n          </Droppable>\n        </Container>\n      );\n    });\n  }\n\n  hypothesesDisplay(hypo, hypo_info, type, idx) {\n    var stylecolor =\n      idx % 2\n        ? { backgroundColor: hypotheses_light_colour }\n        : { backgroundColor: hypotheses_dark_colour };\n\n    var showModal = <></>;\n    // console.log(type, hypo_info, type, idx);\n    if (type !== \"original\") {\n      // console.log(\"~~~~~~~~~~~~~~~\");\n      // console.log(this.props[type.toLowerCase() + \"h\"][hypo]);\n      // console.log(hypo);\n      // console.log(\"show modal is \");\n      // console.log(type == \"original\" ? false : this.state[type][idx]);\n      showModal = (\n        <>\n          <IconButton\n            onClick={() => {\n              if (type == \"original\") return;\n              var newState = this.getDefaultState();\n              newState[type][idx] = 1;\n              this.setState(newState);\n              // console.log(\"^^^^^^^^^we changed the state!\");\n              // console.log(newState[type][idx]);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n          <ShowModal\n            show={type == \"original\" ? false : this.state[type][idx]}\n            onHide={() => this.setState(this.getDefaultState())}\n            hypo={hypo}\n            idx={idx}\n            type={type}\n            table={this.tableRows(\n              this.props[type],\n              type,\n              \"non-draggable\",\n              false,\n              true,\n              hypo\n            )}\n            strategies={this.props[type.toLowerCase() + \"h\"][hypo][1]}\n            rows={this.props[type.toLowerCase() + \"h\"][hypo][2]}\n            handleStrategyChange={this.props.handleStrategyChange}\n          />\n        </>\n      );\n    }\n    return (\n      <Row className=\"align-items-center\" style={stylecolor}>\n        <Col style={{ height: \"100%s\" }}>\n          <div className=\"float-right\" style={{ width: \"20px\" }}>\n            <Row>\n              {type == \"original\" && (\n                <select defaultValue={hypo_info} id={\"label_\" + type + idx}>\n                  <option value={hypo_info}>{hypo_info}</option>\n                </select>\n              )}\n              {type !== \"original\" && (\n                <select\n                  defaultValue={this.props[type.toLowerCase() + \"h\"][hypo][0]}\n                  id={\"label_\" + type + idx}\n                  onChange={(e) => this.props.handleLabelChange(e, type, idx)}\n                >\n                  <option value=\"E\">E</option>\n                  <option value=\"N\">N</option>\n                  <option value=\"C\">C</option>\n                </select>\n              )}\n            </Row>\n            <Row>{showModal}</Row>\n          </div>\n        </Col>\n        <Col>\n          <div style={{ width: \"230px\", overflow: \"hidden\" }}>\n            <TextareaAutosize\n              id={\"hypothesis_\" + type + idx}\n              type=\"textarea\"\n              defaultValue={hypo}\n              style={{\n                resize: \"none\",\n                backgroundColor: \"rgba(0, 0, 0, 0)\",\n                borderColor: \"rgba(0, 0, 0, 0)\",\n              }}\n              onChange={(e) => this.props.handleHypothesisChange(e, type, hypo)}\n              contentEditable\n            />\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n  trash() {\n    return (\n      <Droppable droppableId={\"trash\"} style={{ height: \"40px\" }}>\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            style={this.getListStyle(snapshot.isDraggingOver)}\n            {...provided.droppableProps}\n          >\n            <div\n              style={{\n                marginTop: \"15px\",\n                marginBottom: \"15px\",\n                marginLeft: \"20px\",\n              }}\n            >\n              Drag and drop a value here to delete it\n            </div>\n            {() => {\n              return <></>;\n            }}\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n  addCard() {\n    // console.log(\"ADD\");\n    return (\n      <Droppable droppableId={\"add\"}>\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            style={this.getListStyle(snapshot.isDraggingOver)}\n            {...provided.droppableProps}\n          >\n            {[1].map((value) => {\n              return (\n                <Draggable draggableId={\"new\"}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={this.getItemStyle(\n                        snapshot.isDragging,\n                        provided.draggableProps.style\n                      )}\n                    >\n                      <Row>\n                        <input\n                          style={{\n                            marginLeft: \"20px\",\n                            background: \"transparent\",\n                            resize: \"none\",\n                            backgroundColor: \"rgba(0, 0, 0, 0)\",\n                            borderColor: \"rgba(0, 0, 0, 0)\",\n                            width: \"100%\",\n                          }}\n                          name=\"draggable\"\n                          id={\"NEW\"}\n                          defaultValue={\n                            \"Add a new value here! (write text, then drag and drop)\"\n                          }\n                        />\n                      </Row>\n                    </div>\n                  )}\n                </Draggable>\n              );\n            })}\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n  showView(type) {\n    const ohy = Object.keys(this.props.oh).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, this.props.oh[hypo], \"original\", idx);\n    });\n    var ah_items = Object.keys(this.props.ah).map((key) => [\n      key,\n      this.props.ah[key],\n    ]);\n    ah_items.sort((first, second) => second[1][3] - first[1][3]);\n    // console.log(ah_items);\n    const ahy = ah_items.map((hypo, idx) => {\n      // console.log(hypo);\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"A\", idx);\n    });\n    var bh_items = Object.keys(this.props.bh).map((key) => [\n      key,\n      this.props.bh[key],\n    ]);\n    bh_items.sort((first, second) => second[1][3] - first[1][3]);\n    const bhy = bh_items.map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"B\", idx);\n    });\n    var ch_items = Object.keys(this.props.ch).map((key) => [\n      key,\n      this.props.ch[key],\n    ]);\n    ch_items.sort((first, second) => second[1][3] - first[1][3]);\n    const chy = ch_items.map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"C\", idx);\n    });\n    if (type === \"drag\") {\n      return (\n        <>\n          <Row>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Table</h5>\n              </Row>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table A</h5>\n              </Row>\n              {this.tableRows(this.props.A, \"A\")}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table B</h5>\n              </Row>\n              {this.tableRows(this.props.B, \"B\")}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table C</h5>\n              </Row>\n              {this.tableRows(this.props.C, \"C\")}\n            </Col>\n          </Row>\n          <Row>\n            <Col md={3} style={{ width: \"100%\", paddingRight: \"10px\" }}>\n              {ohy}\n            </Col>\n            <Col md={3} style={{ width: \"100%\" }}>\n              {ahy}\n            </Col>\n            <Col md={3} style={{ width: \"100%\" }}>\n              {bhy}\n            </Col>\n            <Col md={3} style={{ width: \"100%\" }}>\n              {chy}\n            </Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusA\") {\n      return (\n        <>\n          <Row>\n            <Col md={6}>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={6}>{this.tableRows(this.props.A, \"A\")}</Col>\n          </Row>\n          <Row>\n            <Col md={6}>{ohy}</Col>\n            <Col md={6}>{ahy}</Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusB\") {\n      return (\n        <>\n          <Row>\n            {\" \"}\n            <Col md={6}>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={6}>{this.tableRows(this.props.B, \"B\")}</Col>\n          </Row>\n          <Row>\n            <Col md={6}>{ohy}</Col>\n            <Col md={6}>{bhy}</Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusC\") {\n      return (\n        <>\n          <Row>\n            <Col md={6}>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={6}>{this.tableRows(this.props.C, \"C\")}</Col>\n          </Row>\n          <Row>\n            <Col md={6}>{ohy}</Col>\n            <Col md={6}>{chy}</Col>\n          </Row>\n        </>\n      );\n    } else if (type == \"trash\") {\n      return <Col md={6}>{this.trash()}</Col>;\n    } else if (type == \"add\") {\n      return <Col md={6}>{this.addCard()}</Col>;\n    }\n  }\n\n  render() {\n    return <>{this.showView(this.props.type)}</>;\n  }\n}\n\nexport default View;\n"]},"metadata":{},"sourceType":"module"}