{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    zIndex: -1,\n    position: 'fixed',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent'\n  },\n\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent'\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nconst SimpleBackdrop = /*#__PURE__*/React.forwardRef(function SimpleBackdrop(props, ref) {\n  const {\n    invisible = false,\n    open\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"invisible\", \"open\"]);\n\n  return open ? /*#__PURE__*/React.createElement(\"div\", _extends({\n    \"aria-hidden\": true,\n    ref: ref\n  }, other, {\n    style: _extends({}, styles.root, invisible ? styles.invisible : {}, other.style)\n  })) : null;\n});\nprocess.env.NODE_ENV !== \"production\" ? SimpleBackdrop.propTypes = {\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default SimpleBackdrop;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Modal/SimpleBackdrop.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","styles","root","zIndex","position","right","bottom","top","left","backgroundColor","WebkitTapHighlightColor","invisible","SimpleBackdrop","forwardRef","props","ref","open","other","createElement","style","process","env","NODE_ENV","propTypes","bool","isRequired"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,MAAMC,MAAM,GAAG;AACpB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,CAAC,CADL;AAEJC,IAAAA,QAAQ,EAAE,OAFN;AAGJC,IAAAA,KAAK,EAAE,CAHH;AAIJC,IAAAA,MAAM,EAAE,CAJJ;AAKJC,IAAAA,GAAG,EAAE,CALD;AAMJC,IAAAA,IAAI,EAAE,CANF;AAOJC,IAAAA,eAAe,EAAE,oBAPb;AAQJC,IAAAA,uBAAuB,EAAE;AARrB,GAFc;;AAapB;AACAC,EAAAA,SAAS,EAAE;AACTF,IAAAA,eAAe,EAAE;AADR;AAdS,CAAf;AAkBP;;;;AAIA,MAAMG,cAAc,GAAG,aAAab,KAAK,CAACc,UAAN,CAAiB,SAASD,cAAT,CAAwBE,KAAxB,EAA+BC,GAA/B,EAAoC;AACvF,QAAM;AACJJ,IAAAA,SAAS,GAAG,KADR;AAEJK,IAAAA;AAFI,MAGFF,KAHJ;AAAA,QAIMG,KAAK,GAAGnB,6BAA6B,CAACgB,KAAD,EAAQ,CAAC,WAAD,EAAc,MAAd,CAAR,CAJ3C;;AAMA,SAAOE,IAAI,GAAG,aAAajB,KAAK,CAACmB,aAAN,CAAoB,KAApB,EAA2BrB,QAAQ,CAAC;AAC7D,mBAAe,IAD8C;AAE7DkB,IAAAA,GAAG,EAAEA;AAFwD,GAAD,EAG3DE,KAH2D,EAGpD;AACRE,IAAAA,KAAK,EAAEtB,QAAQ,CAAC,EAAD,EAAKI,MAAM,CAACC,IAAZ,EAAkBS,SAAS,GAAGV,MAAM,CAACU,SAAV,GAAsB,EAAjD,EAAqDM,KAAK,CAACE,KAA3D;AADP,GAHoD,CAAnC,CAAhB,GAKL,IALN;AAMD,CAbmC,CAApC;AAcAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,cAAc,CAACW,SAAf,GAA2B;AACjE;;;;AAIAZ,EAAAA,SAAS,EAAEX,SAAS,CAACwB,IAL4C;;AAOjE;;;AAGAR,EAAAA,IAAI,EAAEhB,SAAS,CAACwB,IAAV,CAAeC;AAV4C,CAAnE,GAWI,KAAK,CAXT;AAYA,eAAeb,cAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    zIndex: -1,\n    position: 'fixed',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent'\n  },\n\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent'\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nconst SimpleBackdrop = /*#__PURE__*/React.forwardRef(function SimpleBackdrop(props, ref) {\n  const {\n    invisible = false,\n    open\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"invisible\", \"open\"]);\n\n  return open ? /*#__PURE__*/React.createElement(\"div\", _extends({\n    \"aria-hidden\": true,\n    ref: ref\n  }, other, {\n    style: _extends({}, styles.root, invisible ? styles.invisible : {}, other.style)\n  })) : null;\n});\nprocess.env.NODE_ENV !== \"production\" ? SimpleBackdrop.propTypes = {\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default SimpleBackdrop;"]},"metadata":{},"sourceType":"module"}