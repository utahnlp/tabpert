{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nexport const styles = theme => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      overflowAnchor: 'none',\n      // Keep the same scrolling position\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element unless `square={true}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the region element, the container of the children. */\n    region: {}\n  };\n};\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\n  const {\n    children: childrenProp,\n    classes,\n    className,\n    defaultExpanded = false,\n    disabled = false,\n    expanded: expandedProp,\n    onChange,\n    square = false,\n    TransitionComponent = Collapse,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    toggle: handleChange\n  }), [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\",\n    className: classes.region\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the accordion will be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordion'\n})(Accordion);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Accordion/Accordion.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","isFragment","PropTypes","clsx","chainPropTypes","Collapse","Paper","withStyles","AccordionContext","useControlled","styles","theme","transition","duration","transitions","shortest","root","position","create","overflowAnchor","left","top","right","height","content","opacity","backgroundColor","palette","divider","display","margin","marginTop","marginBottom","action","disabledBackground","rounded","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","expanded","disabled","region","Accordion","forwardRef","props","ref","children","childrenProp","classes","className","defaultExpanded","expandedProp","onChange","square","TransitionComponent","TransitionProps","other","setExpandedState","controlled","default","name","state","handleChange","useCallback","event","summary","Children","toArray","contextValue","useMemo","toggle","createElement","Provider","value","in","timeout","id","role","process","env","NODE_ENV","propTypes","node","isRequired","Error","isValidElement","object","string","bool","func","elementType"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport AccordionContext from './AccordionContext';\nimport useControlled from '../utils/useControlled';\nexport const styles = theme => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      overflowAnchor: 'none',\n      // Keep the same scrolling position\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element unless `square={true}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the region element, the container of the children. */\n    region: {}\n  };\n};\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(props, ref) {\n  const {\n    children: childrenProp,\n    classes,\n    className,\n    defaultExpanded = false,\n    disabled = false,\n    expanded: expandedProp,\n    onChange,\n    square = false,\n    TransitionComponent = Collapse,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    toggle: handleChange\n  }), [expanded, disabled, handleChange]);\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), /*#__PURE__*/React.createElement(AccordionContext.Provider, {\n    value: contextValue\n  }, summary), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\",\n    className: classes.region\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the accordion.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('Material-UI: Expected the first child of Accordion to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the accordion will be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Collapse\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAccordion'\n})(Accordion);"]},"metadata":{},"sourceType":"module"}