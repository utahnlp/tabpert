{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nconst Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  const {\n    classes,\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Card/Card.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","Paper","withStyles","styles","root","overflow","Card","forwardRef","props","ref","classes","className","raised","other","createElement","elevation","process","env","NODE_ENV","propTypes","children","node","object","string","bool","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,MAAMC,MAAM,GAAG;AACpB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AAFc,CAAf;AAMP,MAAMC,IAAI,GAAG,aAAaR,KAAK,CAACS,UAAN,CAAiB,SAASD,IAAT,CAAcE,KAAd,EAAqBC,GAArB,EAA0B;AACnE,QAAM;AACJC,IAAAA,OADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,MAAM,GAAG;AAHL,MAIFJ,KAJJ;AAAA,QAKMK,KAAK,GAAGhB,6BAA6B,CAACW,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,EAAyB,QAAzB,CAAR,CAL3C;;AAOA,SAAO,aAAaV,KAAK,CAACgB,aAAN,CAAoBb,KAApB,EAA2BL,QAAQ,CAAC;AACtDe,IAAAA,SAAS,EAAEX,IAAI,CAACU,OAAO,CAACN,IAAT,EAAeO,SAAf,CADuC;AAEtDI,IAAAA,SAAS,EAAEH,MAAM,GAAG,CAAH,GAAO,CAF8B;AAGtDH,IAAAA,GAAG,EAAEA;AAHiD,GAAD,EAIpDI,KAJoD,CAAnC,CAApB;AAKD,CAbyB,CAA1B;AAcAG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCZ,IAAI,CAACa,SAAL,GAAiB;AACvD;AACA;AACA;AACA;;AAEA;;;AAGAC,EAAAA,QAAQ,EAAErB,SAAS,CAACsB,IATmC;;AAWvD;;;AAGAX,EAAAA,OAAO,EAAEX,SAAS,CAACuB,MAdoC;;AAgBvD;;;AAGAX,EAAAA,SAAS,EAAEZ,SAAS,CAACwB,MAnBkC;;AAqBvD;;;;AAIAX,EAAAA,MAAM,EAAEb,SAAS,CAACyB;AAzBqC,CAAzD,GA0BI,KAAK,CA1BT;AA2BA,eAAetB,UAAU,CAACC,MAAD,EAAS;AAChCsB,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZnB,IAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nconst Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  const {\n    classes,\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);"]},"metadata":{},"sourceType":"module"}