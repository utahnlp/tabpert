{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport StepperContext from '../Stepper/StepperContext';\nimport StepContext from './StepContext';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    paddingLeft: 8,\n    paddingRight: 8\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {},\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    flex: 1,\n    position: 'relative'\n  },\n\n  /* Pseudo-class applied to the root element if `completed={true}`. */\n  completed: {}\n};\nconst Step = /*#__PURE__*/React.forwardRef(function Step(props, ref) {\n  const {\n    active: activeProp,\n    children,\n    classes,\n    className,\n    completed: completedProp,\n    disabled: disabledProp,\n    expanded = false,\n    index,\n    last\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"active\", \"children\", \"classes\", \"className\", \"completed\", \"disabled\", \"expanded\", \"index\", \"last\"]);\n\n  const {\n    activeStep,\n    connector,\n    alternativeLabel,\n    orientation,\n    nonLinear\n  } = React.useContext(StepperContext);\n  let [active = false, completed = false, disabled = false] = [activeProp, completedProp, disabledProp];\n\n  if (activeStep === index) {\n    active = activeProp !== undefined ? activeProp : true;\n  } else if (!nonLinear && activeStep > index) {\n    completed = completedProp !== undefined ? completedProp : true;\n  } else if (!nonLinear && activeStep < index) {\n    disabled = disabledProp !== undefined ? disabledProp : true;\n  }\n\n  const contextValue = React.useMemo(() => ({\n    index,\n    last,\n    expanded,\n    icon: index + 1,\n    active,\n    completed,\n    disabled\n  }), [index, last, expanded, active, completed, disabled]);\n  const newChildren = /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, completed && classes.completed),\n    ref: ref\n  }, other), connector && alternativeLabel && index !== 0 ? connector : null, children);\n  return /*#__PURE__*/React.createElement(StepContext.Provider, {\n    value: contextValue\n  }, connector && !alternativeLabel && index !== 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, connector, newChildren) : newChildren);\n});\nprocess.env.NODE_ENV !== \"production\" ? Step.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Sets the step as active. Is passed to child components.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * Mark the step as disabled, will also disable the button if\n   * `StepButton` is a child of `Step`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Expand the step.\n   * @default false\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * The position of the step.\n   * The prop defaults to the value inherited from the parent Stepper component.\n   */\n  index: PropTypes.number,\n\n  /**\n   * If `true`, the Step will be displayed as rendered last.\n   * The prop defaults to the value inherited from the parent Stepper component.\n   */\n  last: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStep'\n})(Step);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Step/Step.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","StepperContext","StepContext","styles","root","horizontal","paddingLeft","paddingRight","vertical","alternativeLabel","flex","position","completed","Step","forwardRef","props","ref","active","activeProp","children","classes","className","completedProp","disabled","disabledProp","expanded","index","last","other","activeStep","connector","orientation","nonLinear","useContext","undefined","contextValue","useMemo","icon","newChildren","createElement","Provider","value","Fragment","process","env","NODE_ENV","propTypes","bool","node","object","string","number","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport StepperContext from '../Stepper/StepperContext';\nimport StepContext from './StepContext';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    paddingLeft: 8,\n    paddingRight: 8\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {},\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    flex: 1,\n    position: 'relative'\n  },\n\n  /* Pseudo-class applied to the root element if `completed={true}`. */\n  completed: {}\n};\nconst Step = /*#__PURE__*/React.forwardRef(function Step(props, ref) {\n  const {\n    active: activeProp,\n    children,\n    classes,\n    className,\n    completed: completedProp,\n    disabled: disabledProp,\n    expanded = false,\n    index,\n    last\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"active\", \"children\", \"classes\", \"className\", \"completed\", \"disabled\", \"expanded\", \"index\", \"last\"]);\n\n  const {\n    activeStep,\n    connector,\n    alternativeLabel,\n    orientation,\n    nonLinear\n  } = React.useContext(StepperContext);\n  let [active = false, completed = false, disabled = false] = [activeProp, completedProp, disabledProp];\n\n  if (activeStep === index) {\n    active = activeProp !== undefined ? activeProp : true;\n  } else if (!nonLinear && activeStep > index) {\n    completed = completedProp !== undefined ? completedProp : true;\n  } else if (!nonLinear && activeStep < index) {\n    disabled = disabledProp !== undefined ? disabledProp : true;\n  }\n\n  const contextValue = React.useMemo(() => ({\n    index,\n    last,\n    expanded,\n    icon: index + 1,\n    active,\n    completed,\n    disabled\n  }), [index, last, expanded, active, completed, disabled]);\n  const newChildren = /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, completed && classes.completed),\n    ref: ref\n  }, other), connector && alternativeLabel && index !== 0 ? connector : null, children);\n  return /*#__PURE__*/React.createElement(StepContext.Provider, {\n    value: contextValue\n  }, connector && !alternativeLabel && index !== 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, connector, newChildren) : newChildren);\n});\nprocess.env.NODE_ENV !== \"production\" ? Step.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Sets the step as active. Is passed to child components.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * Mark the step as disabled, will also disable the button if\n   * `StepButton` is a child of `Step`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Expand the step.\n   * @default false\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * The position of the step.\n   * The prop defaults to the value inherited from the parent Stepper component.\n   */\n  index: PropTypes.number,\n\n  /**\n   * If `true`, the Step will be displayed as rendered last.\n   * The prop defaults to the value inherited from the parent Stepper component.\n   */\n  last: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStep'\n})(Step);"]},"metadata":{},"sourceType":"module"}