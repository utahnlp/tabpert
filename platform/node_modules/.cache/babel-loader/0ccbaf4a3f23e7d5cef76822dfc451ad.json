{"ast":null,"code":"var _jsxFileName = \"/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/Tables.js\";\nimport React, { Component } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { Container, Row, Button } from \"react-bootstrap\";\nimport View from \"./View\";\n\nconst axios = require(\"axios\");\n\nfunction difference(setA, setB) {\n  let _difference = new Set(setA);\n\n  for (let elem of setB) {\n    _difference.delete(elem);\n  }\n\n  return _difference;\n}\n\nclass Tables extends Component {\n  constructor(props) {\n    super(props);\n    this.onDragEnd = this.onDragEnd.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleLabelChange = this.handleLabelChange.bind(this);\n    this.handleRowChange = this.handleRowChange.bind(this);\n    this.handleStrategyChange = this.handleStrategyChange.bind(this);\n    this.handleHypothesisChange = this.handleHypothesisChange.bind(this);\n    this.state = {\n      title: \"\",\n      original: \"\",\n      A: \"\",\n      B: \"\",\n      C: \"\",\n      view: \"drag\",\n      oh: \"\",\n      ah: \"\",\n      bh: \"\",\n      ch: \"\",\n      cats: \"\",\n      id: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getTables();\n  }\n\n  handleChange(e, id) {\n    var table = id.split(\"_\")[1];\n    var key = id.split(\"_\")[2];\n    var index = id.split(\"_\")[3];\n    const newState = JSON.parse(JSON.stringify(this.state));\n    const old_dict = newState[table][key][index];\n    const [old_meta] = Object.values(old_dict);\n    const new_meta = this.setCharAt(old_meta, 5, \"1\");\n    const new_dict = {};\n    new_dict[e.target.value] = new_meta;\n    console.log(new_dict);\n    newState[table][key][index] = new_dict;\n    this.setState(newState);\n  }\n\n  handleHypothesisChange(e, type, old_hypo) {\n    console.log(e.target);\n    old_hypo = e.target.value;\n    console.log(old_hypo);\n    const state_name = type.toLowerCase() + \"h\";\n    const old_hyps = Object.keys(this.state[state_name]);\n    const new_hyp_elems = new Set(document.querySelectorAll('*[id^=\"hypothesis_' + type + '\"]'));\n    console.log(new_hyp_elems);\n    const new_hyps_arr = new Array();\n\n    for (let elem of new_hyp_elems) {\n      new_hyps_arr.push(elem.textContent);\n    }\n\n    const new_hyps = new Set(new_hyps_arr);\n    console.log(old_hyps);\n    console.log(new_hyps);\n    let difference = new Set([...old_hyps].filter(x => !new_hyps.has(x)));\n  }\n\n  getTables() {\n    console.log(this.props);\n    const table_id = this.props.match.params.id;\n    console.log(\"table_id is **************\" + table_id);\n    fetch(`/api/table/?id=${table_id}`).then(res => res.json()).then(data => {\n      this.setState({\n        title: data.title,\n        original: data.original,\n        A: data.A,\n        B: data.B,\n        C: data.C,\n        oh: data.oh,\n        ah: data.ah,\n        bh: data.bh,\n        ch: data.ch,\n        id: table_id\n      });\n      console.log(this.state);\n    });\n    fetch(`/api/cats`).then(res => res.json()).then(data => {\n      console.log(this.state);\n      this.setState({\n        cats: data\n      });\n    });\n  }\n\n  submit() {\n    console.log(this.state);\n    var title = this.state.title;\n    var A = this.state.A;\n    var B = this.state.B;\n    var C = this.state.C;\n    A[\"title\"] = title;\n    B[\"title\"] = title;\n    C[\"title\"] = title;\n    var id = this.state.id;\n    var ah = this.state.ah;\n    var bh = this.state.bh;\n    var ch = this.state.ch;\n    axios.post(`/api/save`, {\n      title: title,\n      A: A,\n      B: B,\n      C: C,\n      id: id,\n      ah: ah,\n      bh: bh,\n      ch: ch\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {//console.log(error);\n    });\n  } // helper function to change character at index of a string to chr\n\n\n  setCharAt(str, index, chr) {\n    if (index > str.length - 1) return str;\n    return str.substring(0, index) + chr + str.substring(index + 1);\n  }\n\n  reorder(list, startIndex, endIndex) {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  }\n\n  move(source, destination, droppableSource, droppableDestination) {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    for (var key in removed) removed[key] = this.setCharAt(removed[key], 4, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    console.log(\"removed is\");\n    console.log(removed);\n    return result;\n  }\n\n  copy(source, destination, droppableSource, droppableDestination) {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    var newDict = {};\n    newDict[removed] = \"0000100\";\n    destClone.splice(droppableDestination.index, 0, newDict);\n    return destClone;\n  }\n\n  remove(source, droppableSource) {\n    const sourceClone = Array.from(source);\n    sourceClone.splice(droppableSource.index, 1);\n    return sourceClone;\n  }\n\n  add(destination, droppableDestination) {\n    console.log(document.getElementById(\"NEW\").value);\n    const text = document.getElementById(\"NEW\").value;\n    var new_dict = {};\n    new_dict[text] = \"0000011\";\n    const destClone = Array.from(destination);\n    destClone.splice(droppableDestination.index, 0, new_dict);\n    console.log(new_dict);\n    return destClone;\n  }\n\n  onDragEnd(result) {\n    const {\n      source,\n      destination\n    } = result; // dropped outside the list\n\n    if (!destination) {\n      return;\n    } // droppableIds are of the form <table_name>_<key> | trash | add\n\n\n    const sInd = source.droppableId;\n    const dInd = destination.droppableId;\n    console.log(\"sInd \" + sInd);\n    console.log(\"dInd \" + dInd);\n    console.log(JSON.parse(JSON.stringify(this.state))); // dropped in original table or the add card space\n\n    if (dInd === \"add\" || dInd.split(\"_\")[0] === \"original\") {\n      return;\n    } // if put into trash, delete\n    else if (dInd === \"trash\") {\n        const newSource = this.remove(this.state[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]], source);\n        const newState = JSON.parse(JSON.stringify(this.state));\n        newState[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]] = newSource;\n        this.setState(newState);\n      } // if pulled from add space, add new card\n      else if (sInd == \"add\") {\n          console.log(\"we are in\");\n          const newDestination = this.add(this.state[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]], destination);\n          const newState = JSON.parse(JSON.stringify(this.state));\n          newState[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]] = newDestination;\n          console.log(newState);\n          this.setState(newState);\n        } // if not the same key-category and not the same field name, drop is not allowed\n        else if (sInd.split(\"_\")[1] !== dInd.split(\"_\")[1] && this.state.cats[sInd.split(\"_\")[1]] !== this.state.cats[dInd.split(\"_\")[1]]) {\n            return;\n          } // if pulled from original table, copy\n          else if (sInd.split(\"_\")[0] === \"original\") {\n              const newDestination = this.copy(this.state[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]], this.state[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]], source, destination);\n              const newState = JSON.parse(JSON.stringify(this.state));\n              newState[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]] = newDestination;\n              this.setState(newState);\n              console.log(newState);\n            } // if dropped in the same place, we reorder the items\n            else if (sInd === dInd) {\n                const items = this.reorder(this.state[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]], source.index, destination.index);\n                const newState = JSON.parse(JSON.stringify(this.state));\n                newState[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]] = items;\n                this.setState(newState);\n              } // if dropped in a different place, move\n              else {\n                  const result = this.move(this.state[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]], this.state[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]], source, destination);\n                  const newState = JSON.parse(JSON.stringify(this.state));\n                  newState[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]] = result[sInd];\n                  newState[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]] = result[dInd];\n                  this.setState(newState);\n                }\n  }\n\n  handleLabelChange(e, type, idx) {\n    console.log(\"event*********\");\n    console.log(e.target.value);\n    const new_label = e.target.value;\n    const state_name = type.toLowerCase() + \"h\";\n    const hypothesis = document.getElementById(\"hypothesis_\" + type + idx).innerText;\n    const newState = JSON.parse(JSON.stringify(this.state));\n    newState[state_name][hypothesis][0] = new_label;\n    this.setState(newState);\n    console.log(newState[state_name]);\n  }\n\n  handleRowChange(type, key, hypo) {\n    var newState = this.state;\n    var keys = newState[type.toLowerCase() + \"h\"][hypo][2];\n\n    if (keys.includes(key)) {\n      const idx = keys.indexOf(key);\n\n      if (idx > -1) {\n        keys.splice(idx, 1);\n      }\n    } else {\n      keys.push(key);\n    }\n\n    newState[type.toLowerCase() + \"h\"][hypo][2] = keys;\n    this.setState(newState);\n    console.log(newState);\n  }\n\n  handleStrategyChange(type, hypo, strat_index) {\n    const newState = this.state;\n    console.log(\"******&&&&&&&&&&&&&&&***********&&&&&&&&&\");\n    var strategies = newState[type.toLowerCase() + \"h\"][hypo][1];\n    const curr_strategy = strategies.charAt(strat_index);\n    strategies = this.setCharAt(strategies, strat_index, curr_strategy === \"1\" ? \"0\" : \"1\");\n    console.log(strategies);\n    newState[type.toLowerCase() + \"h\"][hypo][1] = strategies;\n    this.setState(newState);\n    console.log(newState);\n  }\n\n  render() {\n    console.log(\"We have re-rendered:\");\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.setState({\n          view: \"drag\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 13\n      }\n    }, \"Drag and Drop\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.setState({\n          view: \"focusA\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }\n    }, \"Focus A\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.setState({\n        view: \"focusB\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }\n    }, \"Focus B\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.setState({\n        view: \"focusC\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 13\n      }\n    }, \"Focus C\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 13\n      }\n    }, this.state.title)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      type: \"add\",\n      original: this.state.original,\n      A: this.state.A,\n      B: this.state.B,\n      C: this.state.C,\n      oh: this.state.oh,\n      ah: this.state.ah,\n      bh: this.state.bh,\n      ch: this.state.ch,\n      handleChange: this.handleChange,\n      handleLabelChange: this.handleLabelChange,\n      handleRowChange: this.handleRowChange,\n      handleStrategyChange: this.handleStrategyChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(View, {\n      type: \"trash\",\n      original: this.state.original,\n      A: this.state.A,\n      B: this.state.B,\n      C: this.state.C,\n      oh: this.state.oh,\n      ah: this.state.ah,\n      bh: this.state.bh,\n      ch: this.state.ch,\n      handleChange: this.handleChange,\n      handleLabelChange: this.handleLabelChange,\n      handleRowChange: this.handleRowChange,\n      handleStrategyChange: this.handleStrategyChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      show: this.state.view === \"drag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(View, {\n      type: this.state.view,\n      original: this.state.original,\n      A: this.state.A,\n      B: this.state.B,\n      C: this.state.C,\n      oh: this.state.oh,\n      ah: this.state.ah,\n      bh: this.state.bh,\n      ch: this.state.ch,\n      handleChange: this.handleChange,\n      handleLabelChange: this.handleLabelChange,\n      handleRowChange: this.handleRowChange,\n      handleStrategyChange: this.handleStrategyChange,\n      handleHypothesisChange: this.handleHypothesisChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default Tables;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/Tables.js"],"names":["React","Component","DragDropContext","Container","Row","Button","View","axios","require","difference","setA","setB","_difference","Set","elem","delete","Tables","constructor","props","onDragEnd","bind","submit","handleChange","handleLabelChange","handleRowChange","handleStrategyChange","handleHypothesisChange","state","title","original","A","B","C","view","oh","ah","bh","ch","cats","id","componentDidMount","getTables","e","table","split","key","index","newState","JSON","parse","stringify","old_dict","old_meta","Object","values","new_meta","setCharAt","new_dict","target","value","console","log","setState","type","old_hypo","state_name","toLowerCase","old_hyps","keys","new_hyp_elems","document","querySelectorAll","new_hyps_arr","Array","push","textContent","new_hyps","filter","x","has","table_id","match","params","fetch","then","res","json","data","post","response","catch","error","str","chr","length","substring","reorder","list","startIndex","endIndex","result","from","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","droppableId","copy","newDict","remove","add","getElementById","text","sInd","dInd","newSource","newDestination","items","idx","new_label","hypothesis","innerText","hypo","includes","indexOf","strat_index","strategies","curr_strategy","charAt","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { Container, Row, Button } from \"react-bootstrap\";\nimport View from \"./View\";\n\nconst axios = require(\"axios\");\n\nfunction difference(setA, setB) {\n  let _difference = new Set(setA);\n  for (let elem of setB) {\n    _difference.delete(elem);\n  }\n  return _difference;\n}\n\nclass Tables extends Component {\n  constructor(props) {\n    super(props);\n    this.onDragEnd = this.onDragEnd.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleLabelChange = this.handleLabelChange.bind(this);\n    this.handleRowChange = this.handleRowChange.bind(this);\n    this.handleStrategyChange = this.handleStrategyChange.bind(this);\n    this.handleHypothesisChange = this.handleHypothesisChange.bind(this);\n    this.state = {\n      title: \"\",\n      original: \"\",\n      A: \"\",\n      B: \"\",\n      C: \"\",\n      view: \"drag\",\n      oh: \"\",\n      ah: \"\",\n      bh: \"\",\n      ch: \"\",\n      cats: \"\",\n      id: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.getTables();\n  }\n\n  handleChange(e, id) {\n    var table = id.split(\"_\")[1];\n    var key = id.split(\"_\")[2];\n    var index = id.split(\"_\")[3];\n    const newState = JSON.parse(JSON.stringify(this.state));\n    const old_dict = newState[table][key][index];\n    const [old_meta] = Object.values(old_dict);\n    const new_meta = this.setCharAt(old_meta, 5, \"1\");\n    const new_dict = {};\n    new_dict[e.target.value] = new_meta;\n    console.log(new_dict);\n    newState[table][key][index] = new_dict;\n    this.setState(newState);\n  }\n\n  handleHypothesisChange(e, type, old_hypo) {\n    console.log(e.target);\n\n    old_hypo = e.target.value;\n    console.log(old_hypo);\n    const state_name = type.toLowerCase() + \"h\";\n    const old_hyps = Object.keys(this.state[state_name]);\n    const new_hyp_elems = new Set(\n      document.querySelectorAll('*[id^=\"hypothesis_' + type + '\"]')\n    );\n    console.log(new_hyp_elems);\n    const new_hyps_arr = new Array();\n    for (let elem of new_hyp_elems) {\n      new_hyps_arr.push(elem.textContent);\n    }\n    const new_hyps = new Set(new_hyps_arr);\n\n    console.log(old_hyps);\n    console.log(new_hyps);\n    let difference = new Set([...old_hyps].filter((x) => !new_hyps.has(x)));\n  }\n\n  getTables() {\n    console.log(this.props);\n    const table_id = this.props.match.params.id;\n    console.log(\"table_id is **************\" + table_id);\n    fetch(`/api/table/?id=${table_id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({\n          title: data.title,\n          original: data.original,\n          A: data.A,\n          B: data.B,\n          C: data.C,\n          oh: data.oh,\n          ah: data.ah,\n          bh: data.bh,\n          ch: data.ch,\n          id: table_id,\n        });\n        console.log(this.state);\n      });\n    fetch(`/api/cats`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(this.state);\n        this.setState({\n          cats: data,\n        });\n      });\n  }\n\n  submit() {\n    console.log(this.state);\n    var title = this.state.title;\n    var A = this.state.A;\n    var B = this.state.B;\n    var C = this.state.C;\n    A[\"title\"] = title;\n    B[\"title\"] = title;\n    C[\"title\"] = title;\n    var id = this.state.id;\n    var ah = this.state.ah;\n    var bh = this.state.bh;\n    var ch = this.state.ch;\n    axios\n      .post(`/api/save`, {\n        title: title,\n        A: A,\n        B: B,\n        C: C,\n        id: id,\n        ah: ah,\n        bh: bh,\n        ch: ch,\n      })\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        //console.log(error);\n      });\n  }\n\n  // helper function to change character at index of a string to chr\n  setCharAt(str, index, chr) {\n    if (index > str.length - 1) return str;\n    return str.substring(0, index) + chr + str.substring(index + 1);\n  }\n\n  reorder(list, startIndex, endIndex) {\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n\n    return result;\n  }\n\n  move(source, destination, droppableSource, droppableDestination) {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    for (var key in removed) removed[key] = this.setCharAt(removed[key], 4, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    console.log(\"removed is\");\n    console.log(removed);\n    return result;\n  }\n  copy(source, destination, droppableSource, droppableDestination) {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    var newDict = {};\n    newDict[removed] = \"0000100\";\n    destClone.splice(droppableDestination.index, 0, newDict);\n    return destClone;\n  }\n\n  remove(source, droppableSource) {\n    const sourceClone = Array.from(source);\n    sourceClone.splice(droppableSource.index, 1);\n    return sourceClone;\n  }\n  add(destination, droppableDestination) {\n    console.log(document.getElementById(\"NEW\").value);\n    const text = document.getElementById(\"NEW\").value;\n    var new_dict = {};\n    new_dict[text] = \"0000011\";\n    const destClone = Array.from(destination);\n    destClone.splice(droppableDestination.index, 0, new_dict);\n    console.log(new_dict);\n    return destClone;\n  }\n\n  onDragEnd(result) {\n    const { source, destination } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      return;\n    }\n    // droppableIds are of the form <table_name>_<key> | trash | add\n    const sInd = source.droppableId;\n    const dInd = destination.droppableId;\n    console.log(\"sInd \" + sInd);\n    console.log(\"dInd \" + dInd);\n    console.log(JSON.parse(JSON.stringify(this.state)));\n    // dropped in original table or the add card space\n    if (dInd === \"add\" || dInd.split(\"_\")[0] === \"original\") {\n      return;\n    }\n    // if put into trash, delete\n    else if (dInd === \"trash\") {\n      const newSource = this.remove(\n        this.state[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]],\n        source\n      );\n      const newState = JSON.parse(JSON.stringify(this.state));\n      newState[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]] = newSource;\n      this.setState(newState);\n    }\n    // if pulled from add space, add new card\n    else if (sInd == \"add\") {\n      console.log(\"we are in\");\n      const newDestination = this.add(\n        this.state[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]],\n        destination\n      );\n      const newState = JSON.parse(JSON.stringify(this.state));\n      newState[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]] = newDestination;\n      console.log(newState);\n      this.setState(newState);\n    }\n    // if not the same key-category and not the same field name, drop is not allowed\n    else if (\n      sInd.split(\"_\")[1] !== dInd.split(\"_\")[1] &&\n      this.state.cats[sInd.split(\"_\")[1]] !==\n        this.state.cats[dInd.split(\"_\")[1]]\n    ) {\n      return;\n    }\n    // if pulled from original table, copy\n    else if (sInd.split(\"_\")[0] === \"original\") {\n      const newDestination = this.copy(\n        this.state[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]],\n        this.state[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]],\n        source,\n        destination\n      );\n      const newState = JSON.parse(JSON.stringify(this.state));\n      newState[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]] = newDestination;\n      this.setState(newState);\n      console.log(newState);\n    }\n    // if dropped in the same place, we reorder the items\n    else if (sInd === dInd) {\n      const items = this.reorder(\n        this.state[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]],\n        source.index,\n        destination.index\n      );\n      const newState = JSON.parse(JSON.stringify(this.state));\n      newState[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]] = items;\n      this.setState(newState);\n    }\n    // if dropped in a different place, move\n    else {\n      const result = this.move(\n        this.state[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]],\n        this.state[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]],\n        source,\n        destination\n      );\n      const newState = JSON.parse(JSON.stringify(this.state));\n      newState[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]] = result[sInd];\n      newState[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]] = result[dInd];\n\n      this.setState(newState);\n    }\n  }\n\n  handleLabelChange(e, type, idx) {\n    console.log(\"event*********\");\n    console.log(e.target.value);\n    const new_label = e.target.value;\n    const state_name = type.toLowerCase() + \"h\";\n    const hypothesis = document.getElementById(\"hypothesis_\" + type + idx)\n      .innerText;\n    const newState = JSON.parse(JSON.stringify(this.state));\n    newState[state_name][hypothesis][0] = new_label;\n    this.setState(newState);\n    console.log(newState[state_name]);\n  }\n  handleRowChange(type, key, hypo) {\n    var newState = this.state;\n    var keys = newState[type.toLowerCase() + \"h\"][hypo][2];\n    if (keys.includes(key)) {\n      const idx = keys.indexOf(key);\n      if (idx > -1) {\n        keys.splice(idx, 1);\n      }\n    } else {\n      keys.push(key);\n    }\n    newState[type.toLowerCase() + \"h\"][hypo][2] = keys;\n    this.setState(newState);\n    console.log(newState);\n  }\n  handleStrategyChange(type, hypo, strat_index) {\n    const newState = this.state;\n    console.log(\"******&&&&&&&&&&&&&&&***********&&&&&&&&&\");\n    var strategies = newState[type.toLowerCase() + \"h\"][hypo][1];\n    const curr_strategy = strategies.charAt(strat_index);\n    strategies = this.setCharAt(\n      strategies,\n      strat_index,\n      curr_strategy === \"1\" ? \"0\" : \"1\"\n    );\n    console.log(strategies);\n    newState[type.toLowerCase() + \"h\"][hypo][1] = strategies;\n    this.setState(newState);\n    console.log(newState);\n  }\n  render() {\n    console.log(\"We have re-rendered:\");\n    return (\n      <Container>\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <Row className=\"justify-content-center\">\n            <Button\n              onClick={() => {\n                this.setState({ view: \"drag\" });\n              }}\n            >\n              Drag and Drop\n            </Button>\n            <Button\n              onClick={() => {\n                this.setState({ view: \"focusA\" });\n              }}\n            >\n              Focus A\n            </Button>\n            <Button onClick={() => this.setState({ view: \"focusB\" })}>\n              Focus B\n            </Button>\n            <Button onClick={() => this.setState({ view: \"focusC\" })}>\n              Focus C\n            </Button>\n            <h1>{this.state.title}</h1>\n          </Row>\n          <Row>\n            <View\n              type={\"add\"}\n              original={this.state.original}\n              A={this.state.A}\n              B={this.state.B}\n              C={this.state.C}\n              oh={this.state.oh}\n              ah={this.state.ah}\n              bh={this.state.bh}\n              ch={this.state.ch}\n              handleChange={this.handleChange}\n              handleLabelChange={this.handleLabelChange}\n              handleRowChange={this.handleRowChange}\n              handleStrategyChange={this.handleStrategyChange}\n            />\n            <View\n              type={\"trash\"}\n              original={this.state.original}\n              A={this.state.A}\n              B={this.state.B}\n              C={this.state.C}\n              oh={this.state.oh}\n              ah={this.state.ah}\n              bh={this.state.bh}\n              ch={this.state.ch}\n              handleChange={this.handleChange}\n              handleLabelChange={this.handleLabelChange}\n              handleRowChange={this.handleRowChange}\n              handleStrategyChange={this.handleStrategyChange}\n            />\n          </Row>\n          <Row show={this.state.view === \"drag\"}>\n            <View\n              type={this.state.view}\n              original={this.state.original}\n              A={this.state.A}\n              B={this.state.B}\n              C={this.state.C}\n              oh={this.state.oh}\n              ah={this.state.ah}\n              bh={this.state.bh}\n              ch={this.state.ch}\n              handleChange={this.handleChange}\n              handleLabelChange={this.handleLabelChange}\n              handleRowChange={this.handleRowChange}\n              handleStrategyChange={this.handleStrategyChange}\n              handleHypothesisChange={this.handleHypothesisChange}\n            />\n          </Row>\n        </DragDropContext>\n        <Button onClick={this.submit}>Submit</Button>\n      </Container>\n    );\n  }\n}\n\nexport default Tables;\n"]},"metadata":{},"sourceType":"module"}