{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { duration } from '../styles/transitions';\nimport withStyles from '../styles/withStyles';\nimport Zoom from '../Zoom';\nimport Fab from '../Fab';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\n\nfunction getOrientation(direction) {\n  if (direction === 'up' || direction === 'down') {\n    return 'vertical';\n  }\n\n  if (direction === 'right' || direction === 'left') {\n    return 'horizontal';\n  }\n\n  return undefined;\n}\n\nfunction clamp(value, min, max) {\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n}\n\nconst dialRadius = 32;\nconst spacingActions = 16;\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    zIndex: theme.zIndex.speedDial,\n    display: 'flex',\n    alignItems: 'center',\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied to the Fab component. */\n  fab: {\n    pointerEvents: 'auto'\n  },\n\n  /* Styles applied to the root if direction=\"up\" */\n  directionUp: {\n    flexDirection: 'column-reverse',\n    '& $actions': {\n      flexDirection: 'column-reverse',\n      marginBottom: -dialRadius,\n      paddingBottom: spacingActions + dialRadius\n    }\n  },\n\n  /* Styles applied to the root if direction=\"down\" */\n  directionDown: {\n    flexDirection: 'column',\n    '& $actions': {\n      flexDirection: 'column',\n      marginTop: -dialRadius,\n      paddingTop: spacingActions + dialRadius\n    }\n  },\n\n  /* Styles applied to the root if direction=\"left\" */\n  directionLeft: {\n    flexDirection: 'row-reverse',\n    '& $actions': {\n      flexDirection: 'row-reverse',\n      marginRight: -dialRadius,\n      paddingRight: spacingActions + dialRadius\n    }\n  },\n\n  /* Styles applied to the root if direction=\"right\" */\n  directionRight: {\n    flexDirection: 'row',\n    '& $actions': {\n      flexDirection: 'row',\n      marginLeft: -dialRadius,\n      paddingLeft: spacingActions + dialRadius\n    }\n  },\n\n  /* Styles applied to the actions (`children` wrapper) element. */\n  actions: {\n    display: 'flex',\n    pointerEvents: 'auto'\n  },\n\n  /* Styles applied to the actions (`children` wrapper) element if `open={false}`. */\n  actionsClosed: {\n    transition: 'top 0s linear 0.2s',\n    pointerEvents: 'none'\n  }\n});\nconst SpeedDial = /*#__PURE__*/React.forwardRef(function SpeedDial(props, ref) {\n  const {\n    ariaLabel,\n    FabProps: {\n      ref: origDialButtonRef\n    } = {},\n    children: childrenProp,\n    classes,\n    className,\n    direction = 'up',\n    hidden = false,\n    icon,\n    onBlur,\n    onClose,\n    onFocus,\n    onKeyDown,\n    onMouseEnter,\n    onMouseLeave,\n    onOpen,\n    open: openProp,\n    TransitionComponent = Zoom,\n    transitionDuration = {\n      enter: duration.enteringScreen,\n      exit: duration.leavingScreen\n    },\n    TransitionProps\n  } = props,\n        FabProps = _objectWithoutPropertiesLoose(props.FabProps, [\"ref\"]),\n        other = _objectWithoutPropertiesLoose(props, [\"ariaLabel\", \"FabProps\", \"children\", \"classes\", \"className\", \"direction\", \"hidden\", \"icon\", \"onBlur\", \"onClose\", \"onFocus\", \"onKeyDown\", \"onMouseEnter\", \"onMouseLeave\", \"onOpen\", \"open\", \"openIcon\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'SpeedDial',\n    state: 'open'\n  });\n  const eventTimer = React.useRef();\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(eventTimer.current);\n    };\n  }, []);\n  /**\n   * an index in actions.current\n   */\n\n  const focusedAction = React.useRef(0);\n  /**\n   * pressing this key while the focus is on a child SpeedDialAction focuses\n   * the next SpeedDialAction.\n   * It is equal to the first arrow key pressed while focus is on the SpeedDial\n   * that is not orthogonal to the direction.\n   * @type {utils.ArrowKey?}\n   */\n\n  const nextItemArrowKey = React.useRef();\n  /**\n   * refs to the Button that have an action associated to them in this SpeedDial\n   * [Fab, ...(SpeedDialActions > Button)]\n   * @type {HTMLButtonElement[]}\n   */\n\n  const actions = React.useRef([]);\n  actions.current = [actions.current[0]];\n  const handleOwnFabRef = React.useCallback(fabFef => {\n    actions.current[0] = fabFef;\n  }, []);\n  const handleFabRef = useForkRef(origDialButtonRef, handleOwnFabRef);\n  /**\n   * creates a ref callback for the Button in a SpeedDialAction\n   * Is called before the original ref callback for Button that was set in buttonProps\n   *\n   * @param dialActionIndex {number}\n   * @param origButtonRef {React.RefObject?}\n   */\n\n  const createHandleSpeedDialActionButtonRef = (dialActionIndex, origButtonRef) => {\n    return buttonRef => {\n      actions.current[dialActionIndex + 1] = buttonRef;\n\n      if (origButtonRef) {\n        origButtonRef(buttonRef);\n      }\n    };\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    const key = event.key.replace('Arrow', '').toLowerCase();\n    const {\n      current: nextItemArrowKeyCurrent = key\n    } = nextItemArrowKey;\n\n    if (event.key === 'Escape') {\n      setOpenState(false);\n\n      if (onClose) {\n        actions.current[0].focus();\n        onClose(event, 'escapeKeyDown');\n      }\n\n      return;\n    }\n\n    if (getOrientation(key) === getOrientation(nextItemArrowKeyCurrent) && getOrientation(key) !== undefined) {\n      event.preventDefault();\n      const actionStep = key === nextItemArrowKeyCurrent ? 1 : -1; // stay within array indices\n\n      const nextAction = clamp(focusedAction.current + actionStep, 0, actions.current.length - 1);\n      actions.current[nextAction].focus();\n      focusedAction.current = nextAction;\n      nextItemArrowKey.current = nextItemArrowKeyCurrent;\n    }\n  };\n\n  React.useEffect(() => {\n    // actions were closed while navigation state was not reset\n    if (!open) {\n      focusedAction.current = 0;\n      nextItemArrowKey.current = undefined;\n    }\n  }, [open]);\n\n  const handleClose = event => {\n    if (event.type === 'mouseleave' && onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    if (event.type === 'blur' && onBlur) {\n      onBlur(event);\n    }\n\n    clearTimeout(eventTimer.current);\n\n    if (event.type === 'blur') {\n      event.persist();\n      eventTimer.current = setTimeout(() => {\n        setOpenState(false);\n\n        if (onClose) {\n          onClose(event, 'blur');\n        }\n      });\n    } else {\n      setOpenState(false);\n\n      if (onClose) {\n        onClose(event, 'mouseLeave');\n      }\n    }\n  };\n\n  const handleClick = event => {\n    if (FabProps.onClick) {\n      FabProps.onClick(event);\n    }\n\n    clearTimeout(eventTimer.current);\n\n    if (open) {\n      setOpenState(false);\n\n      if (onClose) {\n        onClose(event, 'toggle');\n      }\n    } else {\n      setOpenState(true);\n\n      if (onOpen) {\n        onOpen(event, 'toggle');\n      }\n    }\n  };\n\n  const handleOpen = event => {\n    if (event.type === 'mouseenter' && onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    if (event.type === 'focus' && onFocus) {\n      onFocus(event);\n    } // When moving the focus between two items,\n    // a chain if blur and focus event is triggered.\n    // We only handle the last event.\n\n\n    clearTimeout(eventTimer.current);\n\n    if (!open) {\n      event.persist(); // Wait for a future focus or click event\n\n      eventTimer.current = setTimeout(() => {\n        setOpenState(true);\n\n        if (onOpen) {\n          const eventMap = {\n            focus: 'focus',\n            mouseenter: 'mouseEnter'\n          };\n          onOpen(event, eventMap[event.type]);\n        }\n      });\n    }\n  }; // Filter the label for valid id characters.\n\n\n  const id = ariaLabel.replace(/^[^a-z]+|[^\\w:.-]+/gi, '');\n  const allItems = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The SpeedDial component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const children = allItems.map((child, index) => {\n    const {\n      FabProps: {\n        ref: origButtonRef\n      } = {}\n    } = child.props,\n          ChildFabProps = _objectWithoutPropertiesLoose(child.props.FabProps, [\"ref\"]);\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      FabProps: _extends({}, ChildFabProps, {\n        ref: createHandleSpeedDialActionButtonRef(index, origButtonRef)\n      }),\n      delay: 30 * (open ? index : allItems.length - index),\n      open,\n      id: `${id}-action-${index}`\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[`direction${capitalize(direction)}`], className),\n    ref: ref,\n    role: \"presentation\",\n    onKeyDown: handleKeyDown,\n    onBlur: handleClose,\n    onFocus: handleOpen,\n    onMouseEnter: handleOpen,\n    onMouseLeave: handleClose\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: !hidden,\n    timeout: transitionDuration,\n    unmountOnExit: true\n  }, TransitionProps), /*#__PURE__*/React.createElement(Fab, _extends({\n    color: \"primary\",\n    \"aria-label\": ariaLabel,\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": open,\n    \"aria-controls\": `${id}-actions`\n  }, FabProps, {\n    onClick: handleClick,\n    className: clsx(classes.fab, FabProps.className),\n    ref: handleFabRef\n  }), /*#__PURE__*/React.isValidElement(icon) && isMuiElement(icon, ['SpeedDialIcon']) ? /*#__PURE__*/React.cloneElement(icon, {\n    open\n  }) : icon)), /*#__PURE__*/React.createElement(\"div\", {\n    id: `${id}-actions`,\n    role: \"menu\",\n    \"aria-orientation\": getOrientation(direction),\n    className: clsx(classes.actions, !open && classes.actionsClosed)\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? SpeedDial.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The aria-label of the button element.\n   * Also used to provide the `id` for the `SpeedDial` element and its children.\n   */\n  ariaLabel: PropTypes.string.isRequired,\n\n  /**\n   * SpeedDialActions to display when the SpeedDial is `open`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The direction the actions open relative to the floating action button.\n   * @default 'up'\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * Props applied to the [`Fab`](/api/fab/) element.\n   * @default {}\n   */\n  FabProps: PropTypes.object,\n\n  /**\n   * If `true`, the SpeedDial will be hidden.\n   * @default false\n   */\n  hidden: PropTypes.bool,\n\n  /**\n   * The icon to display in the SpeedDial Fab. The `SpeedDialIcon` component\n   * provides a default Icon with animation.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggle\"`, `\"blur\"`, `\"mouseLeave\"`, `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggle\"`, `\"focus\"`, `\"mouseEnter\"`.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the SpeedDial is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The icon to display in the SpeedDial Fab when the SpeedDial is open.\n   */\n  openIcon: PropTypes.node,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Zoom\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSpeedDial'\n})(SpeedDial);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/SpeedDial/SpeedDial.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","isFragment","PropTypes","clsx","duration","withStyles","Zoom","Fab","capitalize","isMuiElement","useForkRef","useControlled","getOrientation","direction","undefined","clamp","value","min","max","dialRadius","spacingActions","styles","theme","root","zIndex","speedDial","display","alignItems","pointerEvents","fab","directionUp","flexDirection","marginBottom","paddingBottom","directionDown","marginTop","paddingTop","directionLeft","marginRight","paddingRight","directionRight","marginLeft","paddingLeft","actions","actionsClosed","transition","SpeedDial","forwardRef","props","ref","ariaLabel","FabProps","origDialButtonRef","children","childrenProp","classes","className","hidden","icon","onBlur","onClose","onFocus","onKeyDown","onMouseEnter","onMouseLeave","onOpen","open","openProp","TransitionComponent","transitionDuration","enter","enteringScreen","exit","leavingScreen","TransitionProps","other","setOpenState","controlled","default","name","state","eventTimer","useRef","useEffect","clearTimeout","current","focusedAction","nextItemArrowKey","handleOwnFabRef","useCallback","fabFef","handleFabRef","createHandleSpeedDialActionButtonRef","dialActionIndex","origButtonRef","buttonRef","handleKeyDown","event","key","replace","toLowerCase","nextItemArrowKeyCurrent","focus","preventDefault","actionStep","nextAction","length","handleClose","type","persist","setTimeout","handleClick","onClick","handleOpen","eventMap","mouseenter","id","allItems","Children","toArray","filter","child","process","env","NODE_ENV","console","error","join","isValidElement","map","index","ChildFabProps","cloneElement","delay","createElement","role","in","timeout","unmountOnExit","color","propTypes","string","isRequired","node","object","oneOf","bool","func","openIcon","elementType","oneOfType","number","shape","appear"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { duration } from '../styles/transitions';\nimport withStyles from '../styles/withStyles';\nimport Zoom from '../Zoom';\nimport Fab from '../Fab';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\n\nfunction getOrientation(direction) {\n  if (direction === 'up' || direction === 'down') {\n    return 'vertical';\n  }\n\n  if (direction === 'right' || direction === 'left') {\n    return 'horizontal';\n  }\n\n  return undefined;\n}\n\nfunction clamp(value, min, max) {\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n}\n\nconst dialRadius = 32;\nconst spacingActions = 16;\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    zIndex: theme.zIndex.speedDial,\n    display: 'flex',\n    alignItems: 'center',\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied to the Fab component. */\n  fab: {\n    pointerEvents: 'auto'\n  },\n\n  /* Styles applied to the root if direction=\"up\" */\n  directionUp: {\n    flexDirection: 'column-reverse',\n    '& $actions': {\n      flexDirection: 'column-reverse',\n      marginBottom: -dialRadius,\n      paddingBottom: spacingActions + dialRadius\n    }\n  },\n\n  /* Styles applied to the root if direction=\"down\" */\n  directionDown: {\n    flexDirection: 'column',\n    '& $actions': {\n      flexDirection: 'column',\n      marginTop: -dialRadius,\n      paddingTop: spacingActions + dialRadius\n    }\n  },\n\n  /* Styles applied to the root if direction=\"left\" */\n  directionLeft: {\n    flexDirection: 'row-reverse',\n    '& $actions': {\n      flexDirection: 'row-reverse',\n      marginRight: -dialRadius,\n      paddingRight: spacingActions + dialRadius\n    }\n  },\n\n  /* Styles applied to the root if direction=\"right\" */\n  directionRight: {\n    flexDirection: 'row',\n    '& $actions': {\n      flexDirection: 'row',\n      marginLeft: -dialRadius,\n      paddingLeft: spacingActions + dialRadius\n    }\n  },\n\n  /* Styles applied to the actions (`children` wrapper) element. */\n  actions: {\n    display: 'flex',\n    pointerEvents: 'auto'\n  },\n\n  /* Styles applied to the actions (`children` wrapper) element if `open={false}`. */\n  actionsClosed: {\n    transition: 'top 0s linear 0.2s',\n    pointerEvents: 'none'\n  }\n});\nconst SpeedDial = /*#__PURE__*/React.forwardRef(function SpeedDial(props, ref) {\n  const {\n    ariaLabel,\n    FabProps: {\n      ref: origDialButtonRef\n    } = {},\n    children: childrenProp,\n    classes,\n    className,\n    direction = 'up',\n    hidden = false,\n    icon,\n    onBlur,\n    onClose,\n    onFocus,\n    onKeyDown,\n    onMouseEnter,\n    onMouseLeave,\n    onOpen,\n    open: openProp,\n    TransitionComponent = Zoom,\n    transitionDuration = {\n      enter: duration.enteringScreen,\n      exit: duration.leavingScreen\n    },\n    TransitionProps\n  } = props,\n        FabProps = _objectWithoutPropertiesLoose(props.FabProps, [\"ref\"]),\n        other = _objectWithoutPropertiesLoose(props, [\"ariaLabel\", \"FabProps\", \"children\", \"classes\", \"className\", \"direction\", \"hidden\", \"icon\", \"onBlur\", \"onClose\", \"onFocus\", \"onKeyDown\", \"onMouseEnter\", \"onMouseLeave\", \"onOpen\", \"open\", \"openIcon\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'SpeedDial',\n    state: 'open'\n  });\n  const eventTimer = React.useRef();\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(eventTimer.current);\n    };\n  }, []);\n  /**\n   * an index in actions.current\n   */\n\n  const focusedAction = React.useRef(0);\n  /**\n   * pressing this key while the focus is on a child SpeedDialAction focuses\n   * the next SpeedDialAction.\n   * It is equal to the first arrow key pressed while focus is on the SpeedDial\n   * that is not orthogonal to the direction.\n   * @type {utils.ArrowKey?}\n   */\n\n  const nextItemArrowKey = React.useRef();\n  /**\n   * refs to the Button that have an action associated to them in this SpeedDial\n   * [Fab, ...(SpeedDialActions > Button)]\n   * @type {HTMLButtonElement[]}\n   */\n\n  const actions = React.useRef([]);\n  actions.current = [actions.current[0]];\n  const handleOwnFabRef = React.useCallback(fabFef => {\n    actions.current[0] = fabFef;\n  }, []);\n  const handleFabRef = useForkRef(origDialButtonRef, handleOwnFabRef);\n  /**\n   * creates a ref callback for the Button in a SpeedDialAction\n   * Is called before the original ref callback for Button that was set in buttonProps\n   *\n   * @param dialActionIndex {number}\n   * @param origButtonRef {React.RefObject?}\n   */\n\n  const createHandleSpeedDialActionButtonRef = (dialActionIndex, origButtonRef) => {\n    return buttonRef => {\n      actions.current[dialActionIndex + 1] = buttonRef;\n\n      if (origButtonRef) {\n        origButtonRef(buttonRef);\n      }\n    };\n  };\n\n  const handleKeyDown = event => {\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    const key = event.key.replace('Arrow', '').toLowerCase();\n    const {\n      current: nextItemArrowKeyCurrent = key\n    } = nextItemArrowKey;\n\n    if (event.key === 'Escape') {\n      setOpenState(false);\n\n      if (onClose) {\n        actions.current[0].focus();\n        onClose(event, 'escapeKeyDown');\n      }\n\n      return;\n    }\n\n    if (getOrientation(key) === getOrientation(nextItemArrowKeyCurrent) && getOrientation(key) !== undefined) {\n      event.preventDefault();\n      const actionStep = key === nextItemArrowKeyCurrent ? 1 : -1; // stay within array indices\n\n      const nextAction = clamp(focusedAction.current + actionStep, 0, actions.current.length - 1);\n      actions.current[nextAction].focus();\n      focusedAction.current = nextAction;\n      nextItemArrowKey.current = nextItemArrowKeyCurrent;\n    }\n  };\n\n  React.useEffect(() => {\n    // actions were closed while navigation state was not reset\n    if (!open) {\n      focusedAction.current = 0;\n      nextItemArrowKey.current = undefined;\n    }\n  }, [open]);\n\n  const handleClose = event => {\n    if (event.type === 'mouseleave' && onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    if (event.type === 'blur' && onBlur) {\n      onBlur(event);\n    }\n\n    clearTimeout(eventTimer.current);\n\n    if (event.type === 'blur') {\n      event.persist();\n      eventTimer.current = setTimeout(() => {\n        setOpenState(false);\n\n        if (onClose) {\n          onClose(event, 'blur');\n        }\n      });\n    } else {\n      setOpenState(false);\n\n      if (onClose) {\n        onClose(event, 'mouseLeave');\n      }\n    }\n  };\n\n  const handleClick = event => {\n    if (FabProps.onClick) {\n      FabProps.onClick(event);\n    }\n\n    clearTimeout(eventTimer.current);\n\n    if (open) {\n      setOpenState(false);\n\n      if (onClose) {\n        onClose(event, 'toggle');\n      }\n    } else {\n      setOpenState(true);\n\n      if (onOpen) {\n        onOpen(event, 'toggle');\n      }\n    }\n  };\n\n  const handleOpen = event => {\n    if (event.type === 'mouseenter' && onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    if (event.type === 'focus' && onFocus) {\n      onFocus(event);\n    } // When moving the focus between two items,\n    // a chain if blur and focus event is triggered.\n    // We only handle the last event.\n\n\n    clearTimeout(eventTimer.current);\n\n    if (!open) {\n      event.persist(); // Wait for a future focus or click event\n\n      eventTimer.current = setTimeout(() => {\n        setOpenState(true);\n\n        if (onOpen) {\n          const eventMap = {\n            focus: 'focus',\n            mouseenter: 'mouseEnter'\n          };\n          onOpen(event, eventMap[event.type]);\n        }\n      });\n    }\n  }; // Filter the label for valid id characters.\n\n\n  const id = ariaLabel.replace(/^[^a-z]+|[^\\w:.-]+/gi, '');\n  const allItems = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The SpeedDial component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const children = allItems.map((child, index) => {\n    const {\n      FabProps: {\n        ref: origButtonRef\n      } = {}\n    } = child.props,\n          ChildFabProps = _objectWithoutPropertiesLoose(child.props.FabProps, [\"ref\"]);\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      FabProps: _extends({}, ChildFabProps, {\n        ref: createHandleSpeedDialActionButtonRef(index, origButtonRef)\n      }),\n      delay: 30 * (open ? index : allItems.length - index),\n      open,\n      id: `${id}-action-${index}`\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[`direction${capitalize(direction)}`], className),\n    ref: ref,\n    role: \"presentation\",\n    onKeyDown: handleKeyDown,\n    onBlur: handleClose,\n    onFocus: handleOpen,\n    onMouseEnter: handleOpen,\n    onMouseLeave: handleClose\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: !hidden,\n    timeout: transitionDuration,\n    unmountOnExit: true\n  }, TransitionProps), /*#__PURE__*/React.createElement(Fab, _extends({\n    color: \"primary\",\n    \"aria-label\": ariaLabel,\n    \"aria-haspopup\": \"true\",\n    \"aria-expanded\": open,\n    \"aria-controls\": `${id}-actions`\n  }, FabProps, {\n    onClick: handleClick,\n    className: clsx(classes.fab, FabProps.className),\n    ref: handleFabRef\n  }), /*#__PURE__*/React.isValidElement(icon) && isMuiElement(icon, ['SpeedDialIcon']) ? /*#__PURE__*/React.cloneElement(icon, {\n    open\n  }) : icon)), /*#__PURE__*/React.createElement(\"div\", {\n    id: `${id}-actions`,\n    role: \"menu\",\n    \"aria-orientation\": getOrientation(direction),\n    className: clsx(classes.actions, !open && classes.actionsClosed)\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? SpeedDial.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The aria-label of the button element.\n   * Also used to provide the `id` for the `SpeedDial` element and its children.\n   */\n  ariaLabel: PropTypes.string.isRequired,\n\n  /**\n   * SpeedDialActions to display when the SpeedDial is `open`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The direction the actions open relative to the floating action button.\n   * @default 'up'\n   */\n  direction: PropTypes.oneOf(['down', 'left', 'right', 'up']),\n\n  /**\n   * Props applied to the [`Fab`](/api/fab/) element.\n   * @default {}\n   */\n  FabProps: PropTypes.object,\n\n  /**\n   * If `true`, the SpeedDial will be hidden.\n   * @default false\n   */\n  hidden: PropTypes.bool,\n\n  /**\n   * The icon to display in the SpeedDial Fab. The `SpeedDialIcon` component\n   * provides a default Icon with animation.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggle\"`, `\"blur\"`, `\"mouseLeave\"`, `\"escapeKeyDown\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggle\"`, `\"focus\"`, `\"mouseEnter\"`.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the SpeedDial is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The icon to display in the SpeedDial Fab when the SpeedDial is open.\n   */\n  openIcon: PropTypes.node,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Zoom\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSpeedDial'\n})(SpeedDial);"]},"metadata":{},"sourceType":"module"}