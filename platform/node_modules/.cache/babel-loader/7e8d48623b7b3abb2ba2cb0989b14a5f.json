{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport merge from './merge';\n\nfunction omit(input, fields) {\n  const output = {};\n  Object.keys(input).forEach(prop => {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n}\n\nfunction css(styleFunction) {\n  const newStyleFunction = props => {\n    const output = styleFunction(props);\n\n    if (props.css) {\n      return _extends({}, merge(output, styleFunction(_extends({\n        theme: props.theme\n      }, props.css))), omit(props.css, [styleFunction.filterProps]));\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    css: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['css', ...styleFunction.filterProps];\n  return newStyleFunction;\n}\n\nexport default css;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/system/esm/css.js"],"names":["_extends","PropTypes","merge","omit","input","fields","output","Object","keys","forEach","prop","indexOf","css","styleFunction","newStyleFunction","props","theme","filterProps","propTypes","process","env","NODE_ENV","object"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqBC,MAArB,EAA6B;AAC3B,QAAMC,MAAM,GAAG,EAAf;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,OAAnB,CAA2BC,IAAI,IAAI;AACjC,QAAIL,MAAM,CAACM,OAAP,CAAeD,IAAf,MAAyB,CAAC,CAA9B,EAAiC;AAC/BJ,MAAAA,MAAM,CAACI,IAAD,CAAN,GAAeN,KAAK,CAACM,IAAD,CAApB;AACD;AACF,GAJD;AAKA,SAAOJ,MAAP;AACD;;AAED,SAASM,GAAT,CAAaC,aAAb,EAA4B;AAC1B,QAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAChC,UAAMT,MAAM,GAAGO,aAAa,CAACE,KAAD,CAA5B;;AAEA,QAAIA,KAAK,CAACH,GAAV,EAAe;AACb,aAAOZ,QAAQ,CAAC,EAAD,EAAKE,KAAK,CAACI,MAAD,EAASO,aAAa,CAACb,QAAQ,CAAC;AACvDgB,QAAAA,KAAK,EAAED,KAAK,CAACC;AAD0C,OAAD,EAErDD,KAAK,CAACH,GAF+C,CAAT,CAAtB,CAAV,EAEET,IAAI,CAACY,KAAK,CAACH,GAAP,EAAY,CAACC,aAAa,CAACI,WAAf,CAAZ,CAFN,CAAf;AAGD;;AAED,WAAOX,MAAP;AACD,GAVD;;AAYAQ,EAAAA,gBAAgB,CAACI,SAAjB,GAA6BC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCrB,QAAQ,CAAC,EAAD,EAAKa,aAAa,CAACK,SAAnB,EAA8B;AACzGN,IAAAA,GAAG,EAAEX,SAAS,CAACqB;AAD0F,GAA9B,CAAhD,GAExB,EAFL;AAGAR,EAAAA,gBAAgB,CAACG,WAAjB,GAA+B,CAAC,KAAD,EAAQ,GAAGJ,aAAa,CAACI,WAAzB,CAA/B;AACA,SAAOH,gBAAP;AACD;;AAED,eAAeF,GAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport merge from './merge';\n\nfunction omit(input, fields) {\n  const output = {};\n  Object.keys(input).forEach(prop => {\n    if (fields.indexOf(prop) === -1) {\n      output[prop] = input[prop];\n    }\n  });\n  return output;\n}\n\nfunction css(styleFunction) {\n  const newStyleFunction = props => {\n    const output = styleFunction(props);\n\n    if (props.css) {\n      return _extends({}, merge(output, styleFunction(_extends({\n        theme: props.theme\n      }, props.css))), omit(props.css, [styleFunction.filterProps]));\n    }\n\n    return output;\n  };\n\n  newStyleFunction.propTypes = process.env.NODE_ENV !== 'production' ? _extends({}, styleFunction.propTypes, {\n    css: PropTypes.object\n  }) : {};\n  newStyleFunction.filterProps = ['css', ...styleFunction.filterProps];\n  return newStyleFunction;\n}\n\nexport default css;"]},"metadata":{},"sourceType":"module"}