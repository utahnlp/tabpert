{"ast":null,"code":"var _jsxFileName = \"/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/Hypothesis.js\";\nimport React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { IconButton, TextareaAutosize } from \"@material-ui/core\";\nimport HypothesisModal from \"./HypothesisModal\";\nimport { hypotheses_dark_colour, hypotheses_light_colour } from \"./Colours\";\n\nfunction Hypothesis(props) {\n  var stylecolor = idx % 2 ? {\n    backgroundColor: hypotheses_light_colour\n  } : {\n    backgroundColor: hypotheses_dark_colour\n  };\n  var type = props.type;\n  var idx = props.idx;\n  var hypo_info = props.hypo_info;\n  var hypo = props.hypo;\n  var showModal = /*#__PURE__*/React.createElement(React.Fragment, null); // console.log(type, hypo_info, type, idx);\n\n  if (type !== \"original\") {\n    // console.log(\"~~~~~~~~~~~~~~~\");\n    // console.log(props.info[hypo]);\n    // console.log(hypo);\n    // console.log(\"show modal is \");\n    // console.log(type == \"original\" ? false : this.state[type][idx]);\n    showModal = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      style: {\n        marginRight: \"-15px\"\n      },\n      onClick: () => {\n        if (type == \"original\") return;\n        var newState = props.getDefaultState();\n        newState[type][idx] = 1;\n        props.handleStateChange(newState); // console.log(\"^^^^^^^^^we changed the state!\");\n        // console.log(newState[type][idx]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(HypothesisModal, {\n      show: props.showValue,\n      onHide: () => props.handleStateChange(props.getDefaultState()),\n      hypo: hypo,\n      idx: idx,\n      type: type,\n      table: props.tableRows(props.rows, type, \"non-draggable\", false, true, hypo),\n      strategies: props.info[hypo][1],\n      rows: props.info[hypo][2],\n      handleStrategyChange: props.handleStrategyChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Row, {\n    className: \"align-items-center ml-2\",\n    style: stylecolor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-icon-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"align-items-center\",\n    style: {\n      height: \"100%\",\n      width: \"30px\",\n      marginLeft: \"7px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, type == \"original\" && /*#__PURE__*/React.createElement(\"select\", {\n    defaultValue: hypo_info,\n    className: \"disabled-dropdown-arrow text-align-center pl-2\",\n    id: \"label_\" + type + idx,\n    style: {\n      border: \"0px\",\n      backgroundColor: \"white\",\n      width: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: hypo_info,\n    className: \"text-align-center pl-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, hypo_info)), type !== \"original\" && /*#__PURE__*/React.createElement(\"select\", {\n    style: {\n      border: \"0px\",\n      backgroundColor: \"white\"\n    },\n    defaultValue: props.info[hypo][0],\n    id: \"label_\" + type + idx,\n    onChange: e => props.handleLabelChange(e, type, idx),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"E\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"E\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"N\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"N\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"C\"))), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      paddingTop: \"7px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, showModal)), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n    className: \"input-with-icon\",\n    id: \"hypothesis_\" + type + idx,\n    type: \"textarea\",\n    defaultValue: hypo,\n    style: {\n      resize: \"none\",\n      backgroundColor: \"rgba(0, 0, 0, 0)\",\n      borderColor: \"rgba(0, 0, 0, 0)\"\n    },\n    onChange: e => props.handleHypothesisChange(e, type, hypo),\n    contentEditable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default Hypothesis;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/Hypothesis.js"],"names":["React","Row","Col","AddIcon","IconButton","TextareaAutosize","HypothesisModal","hypotheses_dark_colour","hypotheses_light_colour","Hypothesis","props","stylecolor","idx","backgroundColor","type","hypo_info","hypo","showModal","marginRight","newState","getDefaultState","handleStateChange","showValue","tableRows","rows","info","handleStrategyChange","height","width","marginLeft","paddingTop","border","e","handleLabelChange","resize","borderColor","handleHypothesisChange"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { IconButton, TextareaAutosize } from \"@material-ui/core\";\nimport HypothesisModal from \"./HypothesisModal\";\nimport { hypotheses_dark_colour, hypotheses_light_colour } from \"./Colours\";\n\nfunction Hypothesis(props) {\n  var stylecolor =\n    idx % 2\n      ? { backgroundColor: hypotheses_light_colour }\n      : { backgroundColor: hypotheses_dark_colour };\n\n  var type = props.type;\n  var idx = props.idx;\n  var hypo_info = props.hypo_info;\n  var hypo = props.hypo;\n\n  var showModal = <></>;\n  // console.log(type, hypo_info, type, idx);\n  if (type !== \"original\") {\n    // console.log(\"~~~~~~~~~~~~~~~\");\n    // console.log(props.info[hypo]);\n    // console.log(hypo);\n    // console.log(\"show modal is \");\n    // console.log(type == \"original\" ? false : this.state[type][idx]);\n    showModal = (\n      <>\n        <IconButton\n          size=\"small\"\n          style={{ marginRight: \"-15px\" }}\n          onClick={() => {\n            if (type == \"original\") return;\n            var newState = props.getDefaultState();\n            newState[type][idx] = 1;\n            props.handleStateChange(newState);\n            // console.log(\"^^^^^^^^^we changed the state!\");\n            // console.log(newState[type][idx]);\n          }}\n        >\n          <AddIcon />\n        </IconButton>\n        <HypothesisModal\n          show={props.showValue}\n          onHide={() => props.handleStateChange(props.getDefaultState())}\n          hypo={hypo}\n          idx={idx}\n          type={type}\n          table={props.tableRows(\n            props.rows,\n            type,\n            \"non-draggable\",\n            false,\n            true,\n            hypo\n          )}\n          strategies={props.info[hypo][1]}\n          rows={props.info[hypo][2]}\n          handleStrategyChange={props.handleStrategyChange}\n        />\n      </>\n    );\n  }\n  return (\n    <Row className=\"align-items-center ml-2\" style={stylecolor}>\n      <div className=\"input-icon-wrap\">\n        <Col\n          className=\"align-items-center\"\n          style={{ height: \"100%\", width: \"30px\", marginLeft: \"7px\" }}\n        >\n          <Row style={{ paddingTop: \"20px\" }}>\n            {type == \"original\" && (\n              <select\n                defaultValue={hypo_info}\n                className=\"disabled-dropdown-arrow text-align-center pl-2\"\n                id={\"label_\" + type + idx}\n                style={{\n                  border: \"0px\",\n                  backgroundColor: \"white\",\n                  width: \"40px\",\n                }}\n              >\n                <option value={hypo_info} className=\"text-align-center pl-2\">\n                  {hypo_info}\n                </option>\n              </select>\n            )}\n            {type !== \"original\" && (\n              <select\n                style={{ border: \"0px\", backgroundColor: \"white\" }}\n                defaultValue={props.info[hypo][0]}\n                id={\"label_\" + type + idx}\n                onChange={(e) => props.handleLabelChange(e, type, idx)}\n              >\n                <option value=\"E\">E</option>\n                <option value=\"N\">N</option>\n                <option value=\"C\">C</option>\n              </select>\n            )}\n          </Row>\n          <Row style={{ paddingTop: \"7px\" }}>{showModal}</Row>\n        </Col>\n        <Col>\n          <TextareaAutosize\n            className=\"input-with-icon\"\n            id={\"hypothesis_\" + type + idx}\n            type=\"textarea\"\n            defaultValue={hypo}\n            style={{\n              resize: \"none\",\n              backgroundColor: \"rgba(0, 0, 0, 0)\",\n              borderColor: \"rgba(0, 0, 0, 0)\",\n            }}\n            onChange={(e) => props.handleHypothesisChange(e, type, hypo)}\n            contentEditable\n          />\n        </Col>\n      </div>\n    </Row>\n  );\n}\n\nexport default Hypothesis;\n"]},"metadata":{},"sourceType":"module"}