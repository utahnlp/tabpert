{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'relative',\n    display: 'inline-flex',\n    // For correct alignment with the text.\n    verticalAlign: 'middle',\n    flexShrink: 0\n  },\n\n  /* Styles applied to the badge `span` element. */\n  badge: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(12),\n    minWidth: RADIUS_STANDARD * 2,\n    lineHeight: 1,\n    padding: '0 6px',\n    height: RADIUS_STANDARD * 2,\n    borderRadius: RADIUS_STANDARD,\n    zIndex: 1,\n    // Render the badge on top of potential ripples.\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  },\n\n  /* Styles applied to the root element if `color=\"error\"`. */\n  colorError: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText\n  },\n\n  /* Styles applied to the root element if `variant=\"dot\"`. */\n  dot: {\n    borderRadius: RADIUS_DOT,\n    height: RADIUS_DOT * 2,\n    minWidth: RADIUS_DOT * 2,\n    padding: 0\n  },\n\n  /* Styles applied to the root element if `variant=\"standard\"`. */\n  standard: {},\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"rectangular\"`. */\n  anchorOriginTopRightRectangular: {\n    top: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"rectangular\"`. */\n  anchorOriginBottomRightRectangular: {\n    bottom: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, 50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"rectangular\"`. */\n  anchorOriginTopLeftRectangular: {\n    top: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"rectangular\"`. */\n  anchorOriginBottomLeftRectangular: {\n    bottom: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, 50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"circular\"`. */\n  anchorOriginTopRightCircular: {\n    top: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"circular\"`. */\n  anchorOriginBottomRightCircular: {\n    bottom: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, 50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"circular\"`. */\n  anchorOriginTopLeftCircular: {\n    top: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"circular\"`. */\n  anchorOriginBottomLeftCircular: {\n    bottom: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, 50%)'\n    }\n  },\n\n  /* Pseudo-class to the badge `span` element if `invisible={true}`. */\n  invisible: {\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  }\n});\n\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(props, ref) {\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    badgeContent: badgeContentProp,\n    children,\n    classes,\n    className,\n    color: colorProp = 'default',\n    component: ComponentProp = 'span',\n    invisible: invisibleProp,\n    max: maxProp = 99,\n    overlap: overlapProp = 'rectangular',\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"anchorOrigin\", \"badgeContent\", \"children\", \"classes\", \"className\", \"color\", \"component\", \"invisible\", \"max\", \"overlap\", \"showZero\", \"variant\"]);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    badgeContent: badgeContentProp,\n    color: colorProp,\n    max: maxProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    anchorOrigin = anchorOriginProp,\n    badgeContent,\n    color = colorProp,\n    max = maxProp,\n    overlap = overlapProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    anchorOrigin,\n    badgeContent,\n    color,\n    component: ComponentProp,\n    invisible,\n    max,\n    overlap,\n    showZero,\n    variant\n  }), 'MuiBadge');\n  let displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? `${max}+` : badgeContent;\n  }\n\n  return /*#__PURE__*/React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.badge, classes[variant], classes[`anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`], themeVariantsClasses, color !== 'default' && classes[`color${capitalize(color)}`], invisible && classes.invisible)\n  }, displayValue));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'error', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the badge will be invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBadge'\n})(Badge);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Badge/Badge.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","useThemeVariants","withStyles","capitalize","RADIUS_STANDARD","RADIUS_DOT","styles","theme","root","position","display","verticalAlign","flexShrink","badge","flexDirection","flexWrap","justifyContent","alignContent","alignItems","boxSizing","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","minWidth","lineHeight","padding","height","borderRadius","zIndex","transition","transitions","create","easing","easeInOut","duration","enteringScreen","colorPrimary","backgroundColor","palette","primary","main","color","contrastText","colorSecondary","secondary","colorError","error","dot","standard","anchorOriginTopRightRectangular","top","right","transform","transformOrigin","anchorOriginBottomRightRectangular","bottom","anchorOriginTopLeftRectangular","left","anchorOriginBottomLeftRectangular","anchorOriginTopRightCircular","anchorOriginBottomRightCircular","anchorOriginTopLeftCircular","anchorOriginBottomLeftCircular","invisible","leavingScreen","usePreviousProps","value","ref","useRef","useEffect","current","Badge","forwardRef","props","anchorOrigin","anchorOriginProp","vertical","horizontal","badgeContent","badgeContentProp","children","classes","className","colorProp","component","ComponentProp","invisibleProp","max","maxProp","overlap","overlapProp","showZero","variant","variantProp","other","prevProps","themeVariantsClasses","displayValue","createElement","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","node","object","string","elementType","bool","number","oneOfType","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useThemeVariants } from '@material-ui/styles';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    position: 'relative',\n    display: 'inline-flex',\n    // For correct alignment with the text.\n    verticalAlign: 'middle',\n    flexShrink: 0\n  },\n\n  /* Styles applied to the badge `span` element. */\n  badge: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    boxSizing: 'border-box',\n    fontFamily: theme.typography.fontFamily,\n    fontWeight: theme.typography.fontWeightMedium,\n    fontSize: theme.typography.pxToRem(12),\n    minWidth: RADIUS_STANDARD * 2,\n    lineHeight: 1,\n    padding: '0 6px',\n    height: RADIUS_STANDARD * 2,\n    borderRadius: RADIUS_STANDARD,\n    zIndex: 1,\n    // Render the badge on top of potential ripples.\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n\n  /* Styles applied to the root element if `color=\"primary\"`. */\n  colorPrimary: {\n    backgroundColor: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText\n  },\n\n  /* Styles applied to the root element if `color=\"secondary\"`. */\n  colorSecondary: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  },\n\n  /* Styles applied to the root element if `color=\"error\"`. */\n  colorError: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText\n  },\n\n  /* Styles applied to the root element if `variant=\"dot\"`. */\n  dot: {\n    borderRadius: RADIUS_DOT,\n    height: RADIUS_DOT * 2,\n    minWidth: RADIUS_DOT * 2,\n    padding: 0\n  },\n\n  /* Styles applied to the root element if `variant=\"standard\"`. */\n  standard: {},\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"rectangular\"`. */\n  anchorOriginTopRightRectangular: {\n    top: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"rectangular\"`. */\n  anchorOriginBottomRightRectangular: {\n    bottom: 0,\n    right: 0,\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, 50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"rectangular\"`. */\n  anchorOriginTopLeftRectangular: {\n    top: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"rectangular\"`. */\n  anchorOriginBottomLeftRectangular: {\n    bottom: 0,\n    left: 0,\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, 50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }} overlap=\"circular\"`. */\n  anchorOriginTopRightCircular: {\n    top: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, -50%)',\n    transformOrigin: '100% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }} overlap=\"circular\"`. */\n  anchorOriginBottomRightCircular: {\n    bottom: '14%',\n    right: '14%',\n    transform: 'scale(1) translate(50%, 50%)',\n    transformOrigin: '100% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(50%, 50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }} overlap=\"circular\"`. */\n  anchorOriginTopLeftCircular: {\n    top: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, -50%)',\n    transformOrigin: '0% 0%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, -50%)'\n    }\n  },\n\n  /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }} overlap=\"circular\"`. */\n  anchorOriginBottomLeftCircular: {\n    bottom: '14%',\n    left: '14%',\n    transform: 'scale(1) translate(-50%, 50%)',\n    transformOrigin: '0% 100%',\n    '&$invisible': {\n      transform: 'scale(0) translate(-50%, 50%)'\n    }\n  },\n\n  /* Pseudo-class to the badge `span` element if `invisible={true}`. */\n  invisible: {\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  }\n});\n\nconst usePreviousProps = value => {\n  const ref = React.useRef({});\n  React.useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(props, ref) {\n  const {\n    anchorOrigin: anchorOriginProp = {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    badgeContent: badgeContentProp,\n    children,\n    classes,\n    className,\n    color: colorProp = 'default',\n    component: ComponentProp = 'span',\n    invisible: invisibleProp,\n    max: maxProp = 99,\n    overlap: overlapProp = 'rectangular',\n    showZero = false,\n    variant: variantProp = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"anchorOrigin\", \"badgeContent\", \"children\", \"classes\", \"className\", \"color\", \"component\", \"invisible\", \"max\", \"overlap\", \"showZero\", \"variant\"]);\n\n  const prevProps = usePreviousProps({\n    anchorOrigin: anchorOriginProp,\n    badgeContent: badgeContentProp,\n    color: colorProp,\n    max: maxProp,\n    overlap: overlapProp,\n    variant: variantProp\n  });\n  let invisible = invisibleProp;\n\n  if (invisibleProp == null && (badgeContentProp === 0 && !showZero || badgeContentProp == null && variantProp !== 'dot')) {\n    invisible = true;\n  }\n\n  const {\n    anchorOrigin = anchorOriginProp,\n    badgeContent,\n    color = colorProp,\n    max = maxProp,\n    overlap = overlapProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const themeVariantsClasses = useThemeVariants(_extends({}, props, {\n    anchorOrigin,\n    badgeContent,\n    color,\n    component: ComponentProp,\n    invisible,\n    max,\n    overlap,\n    showZero,\n    variant\n  }), 'MuiBadge');\n  let displayValue = '';\n\n  if (variant !== 'dot') {\n    displayValue = badgeContent > max ? `${max}+` : badgeContent;\n  }\n\n  return /*#__PURE__*/React.createElement(ComponentProp, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.badge, classes[variant], classes[`anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`], themeVariantsClasses, color !== 'default' && classes[`color${capitalize(color)}`], invisible && classes.invisible)\n  }, displayValue));\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'error', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the badge will be invisible.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBadge'\n})(Badge);"]},"metadata":{},"sourceType":"module"}