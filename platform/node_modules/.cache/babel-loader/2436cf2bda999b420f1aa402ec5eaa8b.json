{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nimport { useForkRef } from '../utils';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    height: 0,\n    overflow: 'hidden',\n    transition: theme.transitions.create('height'),\n    '&$horizontal': {\n      height: 'auto',\n      width: 0,\n      transition: theme.transitions.create('width')\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {},\n\n  /* Styles applied to the root element when the transition has entered. */\n  entered: {\n    height: 'auto',\n    overflow: 'visible',\n    '&$horizontal': {\n      width: 'auto'\n    }\n  },\n\n  /* Styles applied to the root element when the transition has exited and `collapsedSize` != 0px. */\n  hidden: {\n    visibility: 'hidden'\n  },\n\n  /* Styles applied to the outer wrapper element. */\n  wrapper: {\n    // Hack to get children with a negative margin to not falsify the height computation.\n    display: 'flex',\n    width: '100%',\n    '&$horizontal': {\n      width: 'auto',\n      height: '100%'\n    }\n  },\n\n  /* Styles applied to the inner wrapper element. */\n  wrapperInner: {\n    width: '100%',\n    '&$horizontal': {\n      width: 'auto',\n      height: '100%'\n    }\n  }\n});\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Collapse = /*#__PURE__*/React.forwardRef(function Collapse(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    collapsedSize: collapsedSizeProp = '0px',\n    component: Component = 'div',\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    orientation = 'vertical',\n    style,\n    timeout = duration.standard,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"collapsedSize\", \"component\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"orientation\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const theme = useTheme();\n  const timer = React.useRef();\n  const wrapperRef = React.useRef(null);\n  const autoTransitionDuration = React.useRef();\n  const collapsedSize = typeof collapsedSizeProp === 'number' ? `${collapsedSizeProp}px` : collapsedSizeProp;\n  const isHorizontal = orientation !== \"vertical\";\n  const size = isHorizontal ? 'width' : 'height';\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(ref, nodeRef);\n\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n\n  const getWrapperSize = () => wrapperRef.current ? wrapperRef.current[isHorizontal ? 'clientWidth' : 'clientHeight'] : 0;\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    if (wrapperRef.current && isHorizontal) {\n      // Set absolute position to get the size of collapsed content\n      wrapperRef.current.style.position = 'absolute';\n    }\n\n    node.style[size] = collapsedSize;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const wrapperSize = getWrapperSize();\n\n    if (wrapperRef.current && isHorizontal) {\n      // After the size is read reset the position back to default\n      wrapperRef.current.style.position = '';\n    }\n\n    const {\n      duration: transitionDuration\n    } = getTransitionProps({\n      style,\n      timeout\n    }, {\n      mode: 'enter'\n    });\n\n    if (timeout === 'auto') {\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n\n    node.style[size] = `${wrapperSize}px`;\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback((node, isAppearing) => {\n    node.style[size] = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  const handleExit = normalizedTransitionCallback(node => {\n    node.style[size] = `${getWrapperSize()}px`;\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleExiting = normalizedTransitionCallback(node => {\n    const wrapperSize = getWrapperSize();\n    const {\n      duration: transitionDuration\n    } = getTransitionProps({\n      style,\n      timeout\n    }, {\n      mode: 'exit'\n    });\n\n    if (timeout === 'auto') {\n      // TODO: rename getAutoHeightDuration to something more generic (width support)\n      // Actually it just calculates animation duration based on size\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n\n    node.style[size] = collapsedSize;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n\n  const addEndListener = next => {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    nodeRef: nodeRef,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), (state, childProps) => /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isHorizontal && classes.horizontal, {\n      'entered': classes.entered,\n      'exited': !inProp && collapsedSize === '0px' && classes.hidden\n    }[state]),\n    style: _extends({\n      [isHorizontal ? 'minWidth' : 'minHeight']: collapsedSize\n    }, style),\n    ref: handleRef\n  }, childProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.wrapper, isHorizontal && classes.horizontal),\n    ref: wrapperRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.wrapperInner, isHorizontal && classes.horizontal)\n  }, children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width (horizontal) or height (vertical) of the container when collapsed.\n   * @default '0px'\n   */\n  collapsedSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * The collapse transition orientation.\n   * @default 'vertical'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default duration.standard\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default withStyles(styles, {\n  name: 'MuiCollapse'\n})(Collapse);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Collapse/Collapse.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","clsx","PropTypes","Transition","elementTypeAcceptingRef","withStyles","duration","getTransitionProps","useTheme","useForkRef","styles","theme","root","height","overflow","transition","transitions","create","width","horizontal","entered","hidden","visibility","wrapper","display","wrapperInner","Collapse","forwardRef","props","ref","children","classes","className","collapsedSize","collapsedSizeProp","component","Component","in","inProp","onEnter","onEntered","onEntering","onExit","onExited","onExiting","orientation","style","timeout","standard","TransitionComponent","other","timer","useRef","wrapperRef","autoTransitionDuration","isHorizontal","size","useEffect","clearTimeout","current","nodeRef","handleRef","normalizedTransitionCallback","callback","maybeIsAppearing","node","undefined","getWrapperSize","handleEnter","isAppearing","position","handleEntering","wrapperSize","transitionDuration","mode","duration2","getAutoHeightDuration","handleEntered","handleExit","handleExited","handleExiting","addEndListener","next","setTimeout","createElement","state","childProps","process","env","NODE_ENV","propTypes","object","string","oneOfType","number","bool","func","oneOf","shape","appear","enter","exit","muiSupportAuto","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Transition } from 'react-transition-group';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport { getTransitionProps } from '../transitions/utils';\nimport useTheme from '../styles/useTheme';\nimport { useForkRef } from '../utils';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    height: 0,\n    overflow: 'hidden',\n    transition: theme.transitions.create('height'),\n    '&$horizontal': {\n      height: 'auto',\n      width: 0,\n      transition: theme.transitions.create('width')\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {},\n\n  /* Styles applied to the root element when the transition has entered. */\n  entered: {\n    height: 'auto',\n    overflow: 'visible',\n    '&$horizontal': {\n      width: 'auto'\n    }\n  },\n\n  /* Styles applied to the root element when the transition has exited and `collapsedSize` != 0px. */\n  hidden: {\n    visibility: 'hidden'\n  },\n\n  /* Styles applied to the outer wrapper element. */\n  wrapper: {\n    // Hack to get children with a negative margin to not falsify the height computation.\n    display: 'flex',\n    width: '100%',\n    '&$horizontal': {\n      width: 'auto',\n      height: '100%'\n    }\n  },\n\n  /* Styles applied to the inner wrapper element. */\n  wrapperInner: {\n    width: '100%',\n    '&$horizontal': {\n      width: 'auto',\n      height: '100%'\n    }\n  }\n});\n/**\n * The Collapse transition is used by the\n * [Vertical Stepper](/components/steppers/#vertical-stepper) StepContent component.\n * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.\n */\n\nconst Collapse = /*#__PURE__*/React.forwardRef(function Collapse(props, ref) {\n  const {\n    children,\n    classes,\n    className,\n    collapsedSize: collapsedSizeProp = '0px',\n    component: Component = 'div',\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    orientation = 'vertical',\n    style,\n    timeout = duration.standard,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"classes\", \"className\", \"collapsedSize\", \"component\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"orientation\", \"style\", \"timeout\", \"TransitionComponent\"]);\n\n  const theme = useTheme();\n  const timer = React.useRef();\n  const wrapperRef = React.useRef(null);\n  const autoTransitionDuration = React.useRef();\n  const collapsedSize = typeof collapsedSizeProp === 'number' ? `${collapsedSizeProp}px` : collapsedSizeProp;\n  const isHorizontal = orientation !== \"vertical\";\n  const size = isHorizontal ? 'width' : 'height';\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef(ref, nodeRef);\n\n  const normalizedTransitionCallback = callback => maybeIsAppearing => {\n    if (callback) {\n      const node = nodeRef.current; // onEnterXxx and onExitXxx callbacks have a different arguments.length value.\n\n      if (maybeIsAppearing === undefined) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n\n  const getWrapperSize = () => wrapperRef.current ? wrapperRef.current[isHorizontal ? 'clientWidth' : 'clientHeight'] : 0;\n\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    if (wrapperRef.current && isHorizontal) {\n      // Set absolute position to get the size of collapsed content\n      wrapperRef.current.style.position = 'absolute';\n    }\n\n    node.style[size] = collapsedSize;\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const wrapperSize = getWrapperSize();\n\n    if (wrapperRef.current && isHorizontal) {\n      // After the size is read reset the position back to default\n      wrapperRef.current.style.position = '';\n    }\n\n    const {\n      duration: transitionDuration\n    } = getTransitionProps({\n      style,\n      timeout\n    }, {\n      mode: 'enter'\n    });\n\n    if (timeout === 'auto') {\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n\n    node.style[size] = `${wrapperSize}px`;\n\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback((node, isAppearing) => {\n    node.style[size] = 'auto';\n\n    if (onEntered) {\n      onEntered(node, isAppearing);\n    }\n  });\n  const handleExit = normalizedTransitionCallback(node => {\n    node.style[size] = `${getWrapperSize()}px`;\n\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleExiting = normalizedTransitionCallback(node => {\n    const wrapperSize = getWrapperSize();\n    const {\n      duration: transitionDuration\n    } = getTransitionProps({\n      style,\n      timeout\n    }, {\n      mode: 'exit'\n    });\n\n    if (timeout === 'auto') {\n      // TODO: rename getAutoHeightDuration to something more generic (width support)\n      // Actually it just calculates animation duration based on size\n      const duration2 = theme.transitions.getAutoHeightDuration(wrapperSize);\n      node.style.transitionDuration = `${duration2}ms`;\n      autoTransitionDuration.current = duration2;\n    } else {\n      node.style.transitionDuration = typeof transitionDuration === 'string' ? transitionDuration : `${transitionDuration}ms`;\n    }\n\n    node.style[size] = collapsedSize;\n\n    if (onExiting) {\n      onExiting(node);\n    }\n  });\n\n  const addEndListener = next => {\n    if (timeout === 'auto') {\n      timer.current = setTimeout(next, autoTransitionDuration.current || 0);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: inProp,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: addEndListener,\n    nodeRef: nodeRef,\n    timeout: timeout === 'auto' ? null : timeout\n  }, other), (state, childProps) => /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isHorizontal && classes.horizontal, {\n      'entered': classes.entered,\n      'exited': !inProp && collapsedSize === '0px' && classes.hidden\n    }[state]),\n    style: _extends({\n      [isHorizontal ? 'minWidth' : 'minHeight']: collapsedSize\n    }, style),\n    ref: handleRef\n  }, childProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.wrapper, isHorizontal && classes.horizontal),\n    ref: wrapperRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.wrapperInner, isHorizontal && classes.horizontal)\n  }, children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Collapse.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content node to be collapsed.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The width (horizontal) or height (vertical) of the container when collapsed.\n   * @default '0px'\n   */\n  collapsedSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * The collapse transition orientation.\n   * @default 'vertical'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   *\n   * Set to 'auto' to automatically calculate transition time based on height.\n   * @default duration.standard\n   */\n  timeout: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nCollapse.muiSupportAuto = true;\nexport default withStyles(styles, {\n  name: 'MuiCollapse'\n})(Collapse);"]},"metadata":{},"sourceType":"module"}