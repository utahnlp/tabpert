{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n/* eslint-disable jsx-a11y/aria-role */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: 40,\n    flexShrink: 0,\n    opacity: 0.8,\n    '&$disabled': {\n      opacity: 0\n    }\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: 'rotate(90deg)'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {}\n};\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\n\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(props, ref) {\n  const {\n    classes,\n    className: classNameProp,\n    direction,\n    orientation,\n    disabled\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"direction\", \"orientation\", \"disabled\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"div\",\n    className: clsx(classes.root, classNameProp, disabled && classes.disabled, orientation === 'vertical' && classes.vertical),\n    ref: ref,\n    role: null,\n    tabIndex: null\n  }, other), direction === 'left' ? _ref : _ref2);\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Which direction should the button indicate?\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * If `true`, the element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabScrollButton'\n})(TabScrollButton);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/TabScrollButton/TabScrollButton.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","KeyboardArrowLeft","KeyboardArrowRight","withStyles","ButtonBase","styles","root","width","flexShrink","opacity","vertical","height","transform","disabled","_ref","createElement","fontSize","_ref2","TabScrollButton","forwardRef","props","ref","classes","className","classNameProp","direction","orientation","other","component","role","tabIndex","process","env","NODE_ENV","propTypes","children","node","object","string","oneOf","isRequired","bool","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport const styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: 40,\n    flexShrink: 0,\n    opacity: 0.8,\n    '&$disabled': {\n      opacity: 0\n    }\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: 'rotate(90deg)'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {}\n};\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\n\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(props, ref) {\n  const {\n    classes,\n    className: classNameProp,\n    direction,\n    orientation,\n    disabled\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"direction\", \"orientation\", \"disabled\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"div\",\n    className: clsx(classes.root, classNameProp, disabled && classes.disabled, orientation === 'vertical' && classes.vertical),\n    ref: ref,\n    role: null,\n    tabIndex: null\n  }, other), direction === 'left' ? _ref : _ref2);\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Which direction should the button indicate?\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * If `true`, the element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The tabs orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabScrollButton'\n})(TabScrollButton);"]},"metadata":{},"sourceType":"module"}