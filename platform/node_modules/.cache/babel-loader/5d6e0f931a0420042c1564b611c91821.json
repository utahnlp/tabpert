{"ast":null,"code":"var _jsxFileName = \"/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/Tables.js\";\nimport React, { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\n\nconst axios = require('axios');\n\nclass Tables extends Component {\n  constructor(props) {\n    super(props);\n    this.onDragEnd = this.onDragEnd.bind(this);\n    this.submit = this.submit.bind(this);\n    this.state = {\n      title: '',\n      original: '',\n      A: '',\n      B: '',\n      C: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getTables();\n  }\n\n  getTables() {\n    fetch(`/api/table?id=${this.props.tableid}`).then(res => res.json()).then(data => {\n      this.setState({\n        title: data.title,\n        'original': data.original,\n        'A': data['A'],\n        'B': data.B,\n        'C': data.C\n      });\n    });\n  }\n\n  submit() {\n    axios.post(`/api/save`, {\n      'title': this.state.title,\n      'id': this.props.tableid\n    }).then(function (response) {\n      console.log(\"STATE: \" + this.state.title);\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  tableRows(pairs, type) {\n    return Object.keys(pairs).map(key => {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 54\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 70\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 75\n        }\n      }, key)), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 103\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: type + '_' + key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef\n      }, provided.droppableProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }), pairs[key].map((value, id) => {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          draggableId: type + '_' + key + '_' + id,\n          index: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }\n        }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 67\n          }\n        }, value)));\n      }))))));\n    });\n  }\n\n  reorder(list, startIndex, endIndex) {\n    console.log(list);\n    const result = Array.from(list);\n    const [removed] = result.splice(startIndex, 1);\n    result.splice(endIndex, 0, removed);\n    return result;\n  }\n\n  move(source, destination, droppableSource, droppableDestination) {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n    destClone.splice(droppableDestination.index, 0, removed);\n    const result = {};\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n    return result;\n  }\n\n  onDragEnd(result) {\n    console.log(result);\n    const {\n      source,\n      destination\n    } = result; // dropped outside the list\n\n    if (!destination) {\n      return;\n    }\n\n    const sInd = source.droppableId;\n    const dInd = destination.droppableId;\n    console.log(this.state[sInd.split(\"_\")[0]]);\n    console.log(this.state[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]]);\n\n    if (sInd === dInd) {\n      const items = this.reorder(this.state[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]], source.index, destination.index);\n      const newState = JSON.parse(JSON.stringify(this.state));\n      newState[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]] = items;\n      this.setState(newState);\n    } else {\n      const result = this.move(this.state[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]], this.state[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]], source, destination);\n      const newState = JSON.parse(JSON.stringify(this.state));\n      newState[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]] = result[sInd];\n      newState[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]] = result[dInd];\n      this.setState(newState);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, this.state.title)), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, this.tableRows(this.state.original, 'original')), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, this.tableRows(this.state.A, 'A')), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, this.tableRows(this.state.B, 'B')), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, this.tableRows(this.state.C, 'C')))), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default Tables;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/Tables.js"],"names":["React","Component","DragDropContext","Droppable","Draggable","Container","Row","Col","Button","axios","require","Tables","constructor","props","onDragEnd","bind","submit","state","title","original","A","B","C","componentDidMount","getTables","fetch","tableid","then","res","json","data","setState","post","response","console","log","catch","error","tableRows","pairs","type","Object","keys","map","key","provided","snapshot","innerRef","droppableProps","value","id","draggableProps","dragHandleProps","reorder","list","startIndex","endIndex","result","Array","from","removed","splice","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","sInd","dInd","split","items","newState","JSON","parse","stringify","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport {Container, Row, Col, Button} from 'react-bootstrap';\n\nconst axios = require('axios'); \n\n\nclass Tables extends Component {\n    constructor(props) {\n        super(props);\n        this.onDragEnd = this.onDragEnd.bind(this)\n        this.submit = this.submit.bind(this)\n        this.state = {title: '', original: '', A: '', B: '', C: ''}\n    }\n\n    componentDidMount() {\n        this.getTables();\n    }\n    \n    getTables() {\n        fetch(`/api/table?id=${this.props.tableid}`).then(res => res.json()).then(data => {this.setState({title: data.title, 'original': data.original, 'A': data['A'], 'B': data.B, 'C': data.C})})\n    }\n\n    submit() {\n        axios.post(`/api/save`, {\n            'title': this.state.title,\n            'id': this.props.tableid\n            })\n            .then(function (response) {\n                console.log(\"STATE: \" + this.state.title)\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });     \n    }\n    \n    tableRows(pairs, type) {\n        return(Object.keys(pairs).map(key => {return(<Container><Row><Col><strong>{key}</strong></Col><Col>\n        <Droppable droppableId={type + '_' + key}>\n            {(provided, snapshot) => (\n                <div ref={provided.innerRef} {...provided.droppableProps}>\n                    {pairs[key].map((value, id) => {\n                        return(\n                            <Draggable draggableId={type + '_' + key + '_' + id} index={id}>\n                                {(provided, snapshot) => (\n                                    <div ref={provided.innerRef} {...provided.draggableProps}\n                                    {...provided.dragHandleProps}><Row>{value}</Row></div>\n                                )}\n                            </Draggable>\n                        )\n                    })}\n                </div>\n            )}\n        </Droppable>\n        </Col></Row></Container>)}))\n    }\n\n    reorder(list, startIndex, endIndex) {\n        console.log(list)\n        const result = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n\n      \n        return result;\n      };\n\n    move(source, destination, droppableSource, droppableDestination) {\n        const sourceClone = Array.from(source);\n        const destClone = Array.from(destination);\n        const [removed] = sourceClone.splice(droppableSource.index, 1);\n      \n        destClone.splice(droppableDestination.index, 0, removed);\n      \n        const result = {};\n        result[droppableSource.droppableId] = sourceClone;\n        result[droppableDestination.droppableId] = destClone;\n      \n        return result;\n      };\n\n    onDragEnd(result) {\n        console.log(result)\n        const { source, destination } = result;\n    \n        // dropped outside the list\n        if (!destination) {\n          return;\n        }\n        const sInd = source.droppableId;\n        const dInd = destination.droppableId;\n\n        console.log(this.state[sInd.split(\"_\")[0]]);\n        console.log(this.state[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]])\n        if (sInd === dInd) {\n          const items = this.reorder(this.state[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]], source.index, destination.index);\n          const newState = JSON.parse(JSON.stringify(this.state)) ;\n          newState[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]] = items;\n          this.setState(newState);\n        } else {\n          const result = this.move(this.state[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]], this.state[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]], source, destination);\n          const newState = JSON.parse(JSON.stringify(this.state)) ;\n          newState[sInd.split(\"_\")[0]][sInd.split(\"_\")[1]] = result[sInd];\n          newState[dInd.split(\"_\")[0]][dInd.split(\"_\")[1]] = result[dInd];\n    \n          this.setState(newState);\n        }\n      }\n    \n    render() {\n        return(\n            <Container >\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                <Row className=\"justify-content-center\">\n                    <h1>{this.state.title}</h1>\n                </Row>\n                <Row>\n                <Col md={3}>\n                {this.tableRows(this.state.original, 'original')}\n                </Col>\n                <Col md={3}>\n                {this.tableRows(this.state.A, 'A')}\n                </Col>\n                <Col md={3}>\n                {this.tableRows(this.state.B, 'B')}\n                </Col>\n                <Col md={3}>\n                {this.tableRows(this.state.C, 'C')}\n                </Col>\n                </Row>\n                </DragDropContext>\n                <Button onClick={this.submit}>Submit</Button>\n            </Container>\n        );\n    }\n}\n\nexport default Tables;"]},"metadata":{},"sourceType":"module"}