{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport AddIcon from '../internal/svg-icons/Add';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    height: 24\n  },\n\n  /* Styles applied to the icon component. */\n  icon: {\n    transition: theme.transitions.create(['transform', 'opacity'], {\n      duration: theme.transitions.duration.short\n    })\n  },\n\n  /* Styles applied to the icon component if `open={true}`. */\n  iconOpen: {\n    transform: 'rotate(45deg)'\n  },\n\n  /* Styles applied to the icon when an `openIcon` is provided and if `open={true}`. */\n  iconWithOpenIconOpen: {\n    opacity: 0\n  },\n\n  /* Styles applied to the `openIcon` if provided. */\n  openIcon: {\n    position: 'absolute',\n    transition: theme.transitions.create(['transform', 'opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    transform: 'rotate(-45deg)'\n  },\n\n  /* Styles applied to the `openIcon` if provided and if `open={true}`. */\n  openIconOpen: {\n    transform: 'rotate(0deg)',\n    opacity: 1\n  }\n});\nconst SpeedDialIcon = /*#__PURE__*/React.forwardRef(function SpeedDialIcon(props, ref) {\n  const {\n    className,\n    classes,\n    icon: iconProp,\n    open,\n    openIcon: openIconProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"classes\", \"icon\", \"open\", \"openIcon\"]);\n\n  const iconClassName = clsx(classes.icon, open && [classes.iconOpen, openIconProp && classes.iconWithOpenIconOpen]);\n  const openIconClassName = clsx(classes.openIcon, open && classes.openIconOpen);\n\n  function formatIcon(icon, newClassName) {\n    if ( /*#__PURE__*/React.isValidElement(icon)) {\n      return /*#__PURE__*/React.cloneElement(icon, {\n        className: newClassName\n      });\n    }\n\n    return icon;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), openIconProp ? formatIcon(openIconProp, openIconClassName) : null, iconProp ? formatIcon(iconProp, iconClassName) : /*#__PURE__*/React.createElement(AddIcon, {\n    className: iconClassName\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SpeedDialIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in the SpeedDial Floating Action Button.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * @ignore\n   * If `true`, the SpeedDial is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The icon to display in the SpeedDial Floating Action Button when the SpeedDial is open.\n   */\n  openIcon: PropTypes.node\n} : void 0;\nSpeedDialIcon.muiName = 'SpeedDialIcon';\nexport default withStyles(styles, {\n  name: 'MuiSpeedDialIcon'\n})(SpeedDialIcon);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/SpeedDialIcon/SpeedDialIcon.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","withStyles","AddIcon","styles","theme","root","height","icon","transition","transitions","create","duration","short","iconOpen","transform","iconWithOpenIconOpen","opacity","openIcon","position","openIconOpen","SpeedDialIcon","forwardRef","props","ref","className","classes","iconProp","open","openIconProp","other","iconClassName","openIconClassName","formatIcon","newClassName","isValidElement","cloneElement","createElement","process","env","NODE_ENV","propTypes","object","string","node","bool","muiName","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport AddIcon from '../internal/svg-icons/Add';\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    height: 24\n  },\n\n  /* Styles applied to the icon component. */\n  icon: {\n    transition: theme.transitions.create(['transform', 'opacity'], {\n      duration: theme.transitions.duration.short\n    })\n  },\n\n  /* Styles applied to the icon component if `open={true}`. */\n  iconOpen: {\n    transform: 'rotate(45deg)'\n  },\n\n  /* Styles applied to the icon when an `openIcon` is provided and if `open={true}`. */\n  iconWithOpenIconOpen: {\n    opacity: 0\n  },\n\n  /* Styles applied to the `openIcon` if provided. */\n  openIcon: {\n    position: 'absolute',\n    transition: theme.transitions.create(['transform', 'opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    transform: 'rotate(-45deg)'\n  },\n\n  /* Styles applied to the `openIcon` if provided and if `open={true}`. */\n  openIconOpen: {\n    transform: 'rotate(0deg)',\n    opacity: 1\n  }\n});\nconst SpeedDialIcon = /*#__PURE__*/React.forwardRef(function SpeedDialIcon(props, ref) {\n  const {\n    className,\n    classes,\n    icon: iconProp,\n    open,\n    openIcon: openIconProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"classes\", \"icon\", \"open\", \"openIcon\"]);\n\n  const iconClassName = clsx(classes.icon, open && [classes.iconOpen, openIconProp && classes.iconWithOpenIconOpen]);\n  const openIconClassName = clsx(classes.openIcon, open && classes.openIconOpen);\n\n  function formatIcon(icon, newClassName) {\n    if ( /*#__PURE__*/React.isValidElement(icon)) {\n      return /*#__PURE__*/React.cloneElement(icon, {\n        className: newClassName\n      });\n    }\n\n    return icon;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), openIconProp ? formatIcon(openIconProp, openIconClassName) : null, iconProp ? formatIcon(iconProp, iconClassName) : /*#__PURE__*/React.createElement(AddIcon, {\n    className: iconClassName\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SpeedDialIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in the SpeedDial Floating Action Button.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * @ignore\n   * If `true`, the SpeedDial is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The icon to display in the SpeedDial Floating Action Button when the SpeedDial is open.\n   */\n  openIcon: PropTypes.node\n} : void 0;\nSpeedDialIcon.muiName = 'SpeedDialIcon';\nexport default withStyles(styles, {\n  name: 'MuiSpeedDialIcon'\n})(SpeedDialIcon);"]},"metadata":{},"sourceType":"module"}