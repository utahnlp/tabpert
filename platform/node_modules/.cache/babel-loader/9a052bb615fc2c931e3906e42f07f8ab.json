{"ast":null,"code":"var _jsxFileName = \"/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/Modal.js\";\nimport React, { Component } from \"react\";\nimport { Container, Row, Col, Modal, Button, Form } from \"react-bootstrap\";\n\nclass ShowModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      strategies: this.props.strategies\n    };\n  }\n\n  render() {\n    const modal_options = [\"Change table to flip label\", \"Change hypothesis to flip label\", \"Add ‘true’ information from the table to confuse the model, or use text from other places in the table to\", \"Use the hypothesis as a prompt to write a new hypothesis\", \"Write a completely new hypothesis\", \"Other\"];\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.props.show,\n      onHide: () => this.props.onHide(this.state),\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \" \", this.props.hypo)), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fliud: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, this.props.table)), /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, modal_options.map((text, idx) => /*#__PURE__*/React.createElement(Form.Check, {\n      type: \"checkbox\",\n      label: text,\n      defaultChecked: this.props.strategies.charAt(idx) === \"1\" ? true : false,\n      onChange: e => {\n        this.props.handleStrategyChange(this.props.type, this.props.hypo, idx);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }))))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.props.onHide(this.state),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, \"Close\")));\n  }\n\n}\n\nexport default ShowModal;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/Modal.js"],"names":["React","Component","Container","Row","Col","Modal","Button","Form","ShowModal","constructor","props","state","strategies","render","modal_options","show","onHide","hypo","table","map","text","idx","charAt","e","handleStrategyChange","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6CC,IAA7C,QAAyD,iBAAzD;;AACA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAChCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE;AADZ,KAAb;AAGD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAG,CACpB,4BADoB,EAEpB,iCAFoB,EAGpB,2GAHoB,EAIpB,0DAJoB,EAKpB,mCALoB,EAMpB,OANoB,CAAtB;AAQA,wBACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWK,IADnB;AAEE,MAAA,MAAM,EAAE,MAAM,KAAKL,KAAL,CAAWM,MAAX,CAAkB,KAAKL,KAAvB,CAFhB;AAGE,MAAA,IAAI,EAAC,IAHP;AAIE,yBAAgB,+BAJlB;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE,oBAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAe,KAAKD,KAAL,CAAWO,IAA1B,CADF,CAPF,eAWE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8B,KAAKP,KAAL,CAAWQ,KAAzC,CADF,CADF,eAIE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,aAAa,CAACK,GAAd,CAAkB,CAACC,IAAD,EAAOC,GAAP,kBACjB,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAED,IAFT;AAGE,MAAA,cAAc,EACZ,KAAKV,KAAL,CAAWE,UAAX,CAAsBU,MAAtB,CAA6BD,GAA7B,MAAsC,GAAtC,GAA4C,IAA5C,GAAmD,KAJvD;AAME,MAAA,QAAQ,EAAGE,CAAD,IAAO;AACf,aAAKb,KAAL,CAAWc,oBAAX,CACE,KAAKd,KAAL,CAAWe,IADb,EAEE,KAAKf,KAAL,CAAWO,IAFb,EAGEI,GAHF;AAKD,OAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF,CADF,CAJF,CADF,CAXF,eAwCE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKX,KAAL,CAAWM,MAAX,CAAkB,KAAKL,KAAvB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAxCF,CADF;AA8CD;;AA9D+B;;AAgElC,eAAeH,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Row, Col, Modal, Button, Form } from \"react-bootstrap\";\nclass ShowModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      strategies: this.props.strategies,\n    };\n  }\n  render() {\n    const modal_options = [\n      \"Change table to flip label\",\n      \"Change hypothesis to flip label\",\n      \"Add ‘true’ information from the table to confuse the model, or use text from other places in the table to\",\n      \"Use the hypothesis as a prompt to write a new hypothesis\",\n      \"Write a completely new hypothesis\",\n      \"Other\",\n    ];\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={() => this.props.onHide(this.state)}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title> {this.props.hypo}</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Container fliud>\n            <Col md={6}>\n              <div className=\"float-right\">{this.props.table}</div>\n            </Col>\n            <Col md={3}>\n              <div>\n                <Form>\n                  {modal_options.map((text, idx) => (\n                    <Form.Check\n                      type=\"checkbox\"\n                      label={text}\n                      defaultChecked={\n                        this.props.strategies.charAt(idx) === \"1\" ? true : false\n                      }\n                      onChange={(e) => {\n                        this.props.handleStrategyChange(\n                          this.props.type,\n                          this.props.hypo,\n                          idx\n                        );\n                      }}\n                    />\n                  ))}\n                </Form>\n              </div>\n            </Col>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={() => this.props.onHide(this.state)}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default ShowModal;\n"]},"metadata":{},"sourceType":"module"}