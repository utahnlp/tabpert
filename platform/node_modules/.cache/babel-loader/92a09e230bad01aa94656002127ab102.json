{"ast":null,"code":"var _jsxFileName = \"/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/View.js\";\nimport React, { Component } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { getListStyle, getItemStyle } from \"./Colours\";\nimport { IconButton, TextareaAutosize } from \"@material-ui/core\";\nimport HypothesisModal from \"./HypothesisModal\";\nimport KeyModal from \"./KeyModal\";\nimport Hypothesis from \"./Hypothesis\";\nimport Table from \"./Table\"; // for dark mode\n\nconst bgcolors_dict = {\n  original: \"#DEB2F4\",\n  A: \"#A4CDF0\",\n  B: \"#A2DCE2\",\n  C: \"#F9D3BC\",\n  trash: \"#ccc5b4\",\n  add: \"#ccc5b4\"\n}; // for light mode\n// const bgcolors_dict = {\n//   original: \"#ca76f5\",\n//   A: \"#5ca1db\",\n//   B: \"#56d3e3\",\n//   C: \"#ffae7d\",\n//   trash: \"#ccc5b4\",\n//   add: \"#ccc5b4\",\n// };\n\nconst hypotheses_dark_colour = \"#92d5e6\";\nconst hypotheses_light_colour = \"#e1edf0\";\n\nclass View extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRows = this.tableRows.bind(this);\n    this.showView = this.showView.bind(this);\n    this.hypothesesDisplay = this.hypothesesDisplay.bind(this);\n    this.getDefaultState = this.getDefaultState.bind(this);\n    this.handleStateChange = this.handleStateChange.bind(this);\n    this.state = this.getDefaultState();\n  }\n\n  getDefaultState() {\n    let a = new Array(9).fill(0);\n    let b = new Array(9).fill(0);\n    let c = new Array(9).fill(0);\n    let a_rows = new Array(Object.keys(this.props.A).length).fill(0);\n    let b_rows = new Array(Object.keys(this.props.B).length).fill(0);\n    let c_rows = new Array(Object.keys(this.props.C).length).fill(0);\n    let state_var = {\n      A: a,\n      B: b,\n      C: c,\n      A_keys: a_rows,\n      B_keys: b_rows,\n      C_keys: c_rows\n    };\n    return state_var;\n  }\n\n  tableRows(pairs, type, name = \"draggable\", editable = true, checkboxes = false, hypotheses) {\n    return /*#__PURE__*/React.createElement(Table, {\n      pairs: pairs,\n      type: type,\n      name: name,\n      editable: editable,\n      checkboxes: checkboxes,\n      hypotheses: hypotheses,\n      hypo_info: this.props[type.toLowerCase() + \"h\"],\n      deleteSection: this.props.deleteSection,\n      editSectionName: this.props.editSectionName,\n      handleChange: this.props.handleChange,\n      addSection: this.props.addSection,\n      getDefaultState: this.getDefaultState,\n      handleRowChange: this.props.handleRowChange,\n      handleStateChange: this.handleStateChange,\n      showArray: this.state[type + \"_keys\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }); // (\n    //   <>\n    //     {\" \"}\n    //     <Container>\n    //       {Object.keys(pairs).map((key, key_idx) => {\n    //         var checkbox = key;\n    //         // console.log(\"$$$$$$$$$$$$$$\");\n    //         // console.log(this.props);\n    //         // console.log(type, hypo);\n    //         if (checkboxes === true) {\n    //           checkbox = (\n    //             <Form>\n    //               <Form.Check\n    //                 custom\n    //                 type={\"checkbox\"}\n    //                 defaultChecked={\n    //                   this.props[type.toLowerCase() + \"h\"][hypo][2].includes(\n    //                     key\n    //                   )\n    //                     ? true\n    //                     : false\n    //                 }\n    //                 id={type + \"_check_\" + key}\n    //                 label={key}\n    //                 className=\"checkbox label\"\n    //                 onChange={() => {\n    //                   this.props.handleRowChange(type, key, hypo);\n    //                 }}\n    //               />\n    //             </Form>\n    //           );\n    //         }\n    //         return (\n    //           <Container style={{ marginBottom: \"20px\" }}>\n    //             <Droppable droppableId={type + \"_\" + key}>\n    //               {(provided, snapshot) => (\n    //                 <div\n    //                   ref={provided.innerRef}\n    //                   style={getListStyle(snapshot.isDraggingOver, type)}\n    //                   {...provided.droppableProps}\n    //                 >\n    //                   {!checkboxes && (\n    //                     <div\n    //                       style={{\n    //                         display: \"inline-block\",\n    //                         whiteSpace: \"nowrap\",\n    //                         width: \"100%\",\n    //                       }}\n    //                     >\n    //                       {\" \"}\n    //                       <center>\n    //                         <strong>{checkbox}</strong>{\" \"}\n    //                         <IconButton\n    //                           size=\"small\"\n    //                           style={{ marginLeft: \"auto\" }}\n    //                           onClick={() => {\n    //                             var newState = this.getDefaultState();\n    //                             newState[type + \"_keys\"][key_idx] = 1;\n    //                             this.setState(newState);\n    //                           }}\n    //                         >\n    //                           {type !== \"original\" && (\n    //                             <EditIcon\n    //                               className=\"float-right\"\n    //                               style={{\n    //                                 width: \"15px\",\n    //                                 height: \"15px\",\n    //                                 opacity: \"0.5\",\n    //                               }}\n    //                             />\n    //                           )}\n    //                         </IconButton>\n    //                         {type !== \"original\" && (\n    //                           <KeyModal\n    //                             show={this.state[type + \"_keys\"][key_idx]}\n    //                             onHide={() =>\n    //                               this.setState(this.getDefaultState())\n    //                             }\n    //                             onDelete={(type, key) => {\n    //                               this.props.deleteSection(type, key);\n    //                             }}\n    //                             onEdit={(new_key) => {\n    //                               this.props.editSectionName(\n    //                                 type,\n    //                                 key,\n    //                                 new_key\n    //                               );\n    //                             }}\n    //                             section_name={key}\n    //                             type={type}\n    //                           />\n    //                         )}\n    //                       </center>\n    //                     </div>\n    //                   )}\n    //                   {checkboxes && (\n    //                     <div\n    //                       style={{\n    //                         backgroundColor: bgcolors_dict[type],\n    //                         marginLeft: \"20px\",\n    //                       }}\n    //                     >\n    //                       <strong>{checkbox}</strong>\n    //                     </div>\n    //                   )}\n    //                   {pairs[key].map((value, id) => {\n    //                     // console.log(\"value is ^^^^^\");\n    //                     // console.log(value);\n    //                     return (\n    //                       <Draggable\n    //                         draggableId={type + \"_\" + key + \"_\" + id}\n    //                         index={id}\n    //                         className=\"draggable\"\n    //                       >\n    //                         {(provided, snapshot) => (\n    //                           <div\n    //                             ref={provided.innerRef}\n    //                             {...provided.draggableProps}\n    //                             {...provided.dragHandleProps}\n    //                             style={getItemStyle(\n    //                               snapshot.isDragging,\n    //                               provided.draggableProps.style\n    //                             )}\n    //                           >\n    //                             <Row>\n    //                               <TextareaAutosize\n    //                                 style={{\n    //                                   marginLeft: \"20px\",\n    //                                   background: \"transparent\",\n    //                                   resize: \"none\",\n    //                                   backgroundColor: \"rgba(0, 0, 0, 0)\",\n    //                                   borderColor: \"rgba(0, 0, 0, 0)\",\n    //                                 }}\n    //                                 name={name}\n    //                                 id={\"item_\" + type + \"_\" + key + \"_\" + id}\n    //                                 value={\n    //                                   type === \"original\"\n    //                                     ? value\n    //                                     : Object.keys(value)[0]\n    //                                 }\n    //                                 onChange={(e) =>\n    //                                   this.props.handleChange(\n    //                                     e,\n    //                                     \"item_\" + type + \"_\" + key + \"_\" + id\n    //                                   )\n    //                                 }\n    //                               />\n    //                             </Row>\n    //                           </div>\n    //                         )}\n    //                       </Draggable>\n    //                     );\n    //                   })}\n    //                 </div>\n    //               )}\n    //             </Droppable>\n    //           </Container>\n    //         );\n    //       })}\n    //     </Container>\n    //     {type !== \"original\" && !checkboxes && (\n    //       <Container>\n    //         {\" \"}\n    //         <Row>\n    //           <div className=\"float-right\" style={{ width: \"100%\" }}>\n    //             <Button\n    //               onClick={() => {\n    //                 var lastIdx = this.props.addSection(\n    //                   type,\n    //                   \"New Section Name\"\n    //                 );\n    //                 var newState = this.getDefaultState();\n    //                 newState[type + \"_keys\"][lastIdx] = 1;\n    //                 this.setState(newState);\n    //               }}\n    //               className=\"text-white ml-auto float-right\"\n    //               style={{\n    //                 alignContent: \"right\",\n    //                 fontSize: \"15px\",\n    //                 marginRight: \"-16px\",\n    //                 marginTop: \"-15px\",\n    //               }}\n    //             >\n    //               Add section\n    //               <AddIcon />\n    //             </Button>\n    //           </div>\n    //         </Row>\n    //       </Container>\n    //     )}\n    //   </>\n    // );\n  }\n\n  handleStateChange(newState) {\n    console.log(newState);\n    this.setState(newState);\n  }\n\n  hypothesesDisplay(hypo, hypo_info, type, idx) {\n    return /*#__PURE__*/React.createElement(Hypothesis, {\n      hypo: hypo,\n      hypo_info: hypo_info,\n      type: type,\n      idx: idx,\n      showValue: type == \"original\" ? false : this.state[type][idx],\n      getDefaultState: () => this.getDefaultState(),\n      handleHypothesisChange: (e, type, hypo) => this.props.handleHypothesisChange(e, type, hypo),\n      handleLabelChange: (e, type, idx) => this.props.handleLabelChange(e, type, idx),\n      handleStrategyChange: this.props.handleStrategyChange,\n      info: this.props[type.toLowerCase() + \"h\"],\n      rows: this.props[type],\n      tableRows: this.tableRows,\n      handleStateChange: this.handleStateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 7\n      }\n    });\n  }\n\n  showView(type) {\n    const ohy = Object.keys(this.props.oh).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, this.props.oh[hypo], \"original\", idx);\n    });\n    var ah_items = Object.keys(this.props.ah).map(key => [key, this.props.ah[key]]);\n    ah_items.sort((first, second) => second[1][3] - first[1][3]); // console.log(ah_items);\n\n    const ahy = ah_items.map((hypo, idx) => {\n      // console.log(hypo);\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"A\", idx);\n    });\n    var bh_items = Object.keys(this.props.bh).map(key => [key, this.props.bh[key]]);\n    bh_items.sort((first, second) => second[1][3] - first[1][3]);\n    const bhy = bh_items.map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"B\", idx);\n    });\n    var ch_items = Object.keys(this.props.ch).map(key => [key, this.props.ch[key]]);\n    ch_items.sort((first, second) => second[1][3] - first[1][3]);\n    const chy = ch_items.map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"C\", idx);\n    });\n\n    if (type === \"drag\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          marginBottom: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 17\n        }\n      }, \"Original Table\")), this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          marginBottom: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 17\n        }\n      }, \"Table A\")), this.tableRows(this.props.A, \"A\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          marginBottom: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 17\n        }\n      }, \"Table B\")), this.tableRows(this.props.B, \"B\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          marginBottom: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 17\n        }\n      }, \"Table C\")), this.tableRows(this.props.C, \"C\"))), /*#__PURE__*/React.createElement(Row, {\n        style: {\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          width: \"100%\",\n          paddingRight: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 17\n        }\n      }, \"Original Hypotheses\")), ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 17\n        }\n      }, \"Table A Hypotheses\")), ahy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 17\n        }\n      }, \"Table B Hypotheses\")), bhy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 17\n        }\n      }, \"Table C Hypotheses\")), chy)));\n    } else if (type === \"focusA\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 17\n        }\n      }, \"Original Table\")), this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 17\n        }\n      }, \"Table A\")), this.tableRows(this.props.A, \"A\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 17\n        }\n      }, \"Original Hypotheses\")), ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 17\n        }\n      }, \"Table A Hypotheses\")), ahy)));\n    } else if (type === \"focusB\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 17\n        }\n      }, \"Original Table\")), this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 17\n        }\n      }, \"Table B\")), this.tableRows(this.props.B, \"B\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 17\n        }\n      }, \"Original Hypotheses\")), ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 17\n        }\n      }, \"Table B Hypotheses\")), bhy)));\n    } else if (type === \"focusC\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        className: \"mt-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 17\n        }\n      }, \"Original Table\")), this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 17\n        }\n      }, \"Table C\")), this.tableRows(this.props.C, \"C\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 17\n        }\n      }, \"Original Hypotheses\")), ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"justify-content-center mt-3 white-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 17\n        }\n      }, \"Table C Hypotheses\")), chy)));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.showView(this.props.type));\n  }\n\n}\n\nView.defaultProps = {\n  A: {},\n  B: {},\n  C: {},\n  oh: {},\n  ah: {},\n  bh: {},\n  ch: {}\n};\nexport default View;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/View.js"],"names":["React","Component","Droppable","Draggable","Container","Row","Col","Form","Button","AddIcon","EditIcon","getListStyle","getItemStyle","IconButton","TextareaAutosize","HypothesisModal","KeyModal","Hypothesis","Table","bgcolors_dict","original","A","B","C","trash","add","hypotheses_dark_colour","hypotheses_light_colour","View","constructor","props","tableRows","bind","showView","hypothesesDisplay","getDefaultState","handleStateChange","state","a","Array","fill","b","c","a_rows","Object","keys","length","b_rows","c_rows","state_var","A_keys","B_keys","C_keys","pairs","type","name","editable","checkboxes","hypotheses","toLowerCase","deleteSection","editSectionName","handleChange","addSection","handleRowChange","newState","console","log","setState","hypo","hypo_info","idx","e","handleHypothesisChange","handleLabelChange","handleStrategyChange","ohy","oh","map","ah_items","ah","key","sort","first","second","ahy","bh_items","bh","bhy","ch_items","ch","chy","marginBottom","marginLeft","width","paddingRight","render","defaultProps"],"mappings":"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Aa,EAAE,KAAK7B,KAAL,CAAW8B,aAR5B;AASE,MAAA,eAAe,EAAE,KAAK9B,KAAL,CAAW+B,eAT9B;AAUE,MAAA,YAAY,EAAE,KAAK/B,KAAL,CAAWgC,YAV3B;AAWE,MAAA,UAAU,EAAE,KAAKhC,KAAL,CAAWiC,UAXzB;AAYE,MAAA,eAAe,EAAE,KAAK5B,eAZxB;AAaE,MAAA,eAAe,EAAE,KAAKL,KAAL,CAAWkC,eAb9B;AAcE,MAAA,iBAAiB,EAAE,KAAK5B,iBAd1B;AAeE,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWiB,IAAI,GAAG,OAAlB,CAfb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA,CAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","sourcesContent":["import React, { Component } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { getListStyle, getItemStyle } from \"./Colours\";\nimport { IconButton, TextareaAutosize } from \"@material-ui/core\";\nimport HypothesisModal from \"./HypothesisModal\";\nimport KeyModal from \"./KeyModal\";\nimport Hypothesis from \"./Hypothesis\";\nimport Table from \"./Table\";\n\n// for dark mode\nconst bgcolors_dict = {\n  original: \"#DEB2F4\",\n  A: \"#A4CDF0\",\n  B: \"#A2DCE2\",\n  C: \"#F9D3BC\",\n  trash: \"#ccc5b4\",\n  add: \"#ccc5b4\",\n};\n\n// for light mode\n// const bgcolors_dict = {\n//   original: \"#ca76f5\",\n//   A: \"#5ca1db\",\n//   B: \"#56d3e3\",\n//   C: \"#ffae7d\",\n//   trash: \"#ccc5b4\",\n//   add: \"#ccc5b4\",\n// };\nconst hypotheses_dark_colour = \"#92d5e6\";\nconst hypotheses_light_colour = \"#e1edf0\";\nclass View extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRows = this.tableRows.bind(this);\n    this.showView = this.showView.bind(this);\n    this.hypothesesDisplay = this.hypothesesDisplay.bind(this);\n    this.getDefaultState = this.getDefaultState.bind(this);\n    this.handleStateChange = this.handleStateChange.bind(this);\n    this.state = this.getDefaultState();\n  }\n\n  getDefaultState() {\n    let a = new Array(9).fill(0);\n    let b = new Array(9).fill(0);\n    let c = new Array(9).fill(0);\n\n    let a_rows = new Array(Object.keys(this.props.A).length).fill(0);\n    let b_rows = new Array(Object.keys(this.props.B).length).fill(0);\n    let c_rows = new Array(Object.keys(this.props.C).length).fill(0);\n\n    let state_var = {\n      A: a,\n      B: b,\n      C: c,\n      A_keys: a_rows,\n      B_keys: b_rows,\n      C_keys: c_rows,\n    };\n    return state_var;\n  }\n\n  tableRows(\n    pairs,\n    type,\n    name = \"draggable\",\n    editable = true,\n    checkboxes = false,\n    hypotheses\n  ) {\n    return (\n      <Table\n        pairs={pairs}\n        type={type}\n        name={name}\n        editable={editable}\n        checkboxes={checkboxes}\n        hypotheses={hypotheses}\n        hypo_info={this.props[type.toLowerCase() + \"h\"]}\n        deleteSection={this.props.deleteSection}\n        editSectionName={this.props.editSectionName}\n        handleChange={this.props.handleChange}\n        addSection={this.props.addSection}\n        getDefaultState={this.getDefaultState}\n        handleRowChange={this.props.handleRowChange}\n        handleStateChange={this.handleStateChange}\n        showArray={this.state[type + \"_keys\"]}\n      />\n    );\n    // (\n    //   <>\n    //     {\" \"}\n    //     <Container>\n    //       {Object.keys(pairs).map((key, key_idx) => {\n    //         var checkbox = key;\n    //         // console.log(\"$$$$$$$$$$$$$$\");\n    //         // console.log(this.props);\n    //         // console.log(type, hypo);\n    //         if (checkboxes === true) {\n    //           checkbox = (\n    //             <Form>\n    //               <Form.Check\n    //                 custom\n    //                 type={\"checkbox\"}\n    //                 defaultChecked={\n    //                   this.props[type.toLowerCase() + \"h\"][hypo][2].includes(\n    //                     key\n    //                   )\n    //                     ? true\n    //                     : false\n    //                 }\n    //                 id={type + \"_check_\" + key}\n    //                 label={key}\n    //                 className=\"checkbox label\"\n    //                 onChange={() => {\n    //                   this.props.handleRowChange(type, key, hypo);\n    //                 }}\n    //               />\n    //             </Form>\n    //           );\n    //         }\n\n    //         return (\n    //           <Container style={{ marginBottom: \"20px\" }}>\n    //             <Droppable droppableId={type + \"_\" + key}>\n    //               {(provided, snapshot) => (\n    //                 <div\n    //                   ref={provided.innerRef}\n    //                   style={getListStyle(snapshot.isDraggingOver, type)}\n    //                   {...provided.droppableProps}\n    //                 >\n    //                   {!checkboxes && (\n    //                     <div\n    //                       style={{\n    //                         display: \"inline-block\",\n    //                         whiteSpace: \"nowrap\",\n    //                         width: \"100%\",\n    //                       }}\n    //                     >\n    //                       {\" \"}\n    //                       <center>\n    //                         <strong>{checkbox}</strong>{\" \"}\n    //                         <IconButton\n    //                           size=\"small\"\n    //                           style={{ marginLeft: \"auto\" }}\n    //                           onClick={() => {\n    //                             var newState = this.getDefaultState();\n    //                             newState[type + \"_keys\"][key_idx] = 1;\n    //                             this.setState(newState);\n    //                           }}\n    //                         >\n    //                           {type !== \"original\" && (\n    //                             <EditIcon\n    //                               className=\"float-right\"\n    //                               style={{\n    //                                 width: \"15px\",\n    //                                 height: \"15px\",\n    //                                 opacity: \"0.5\",\n    //                               }}\n    //                             />\n    //                           )}\n    //                         </IconButton>\n    //                         {type !== \"original\" && (\n    //                           <KeyModal\n    //                             show={this.state[type + \"_keys\"][key_idx]}\n    //                             onHide={() =>\n    //                               this.setState(this.getDefaultState())\n    //                             }\n    //                             onDelete={(type, key) => {\n    //                               this.props.deleteSection(type, key);\n    //                             }}\n    //                             onEdit={(new_key) => {\n    //                               this.props.editSectionName(\n    //                                 type,\n    //                                 key,\n    //                                 new_key\n    //                               );\n    //                             }}\n    //                             section_name={key}\n    //                             type={type}\n    //                           />\n    //                         )}\n    //                       </center>\n    //                     </div>\n    //                   )}\n    //                   {checkboxes && (\n    //                     <div\n    //                       style={{\n    //                         backgroundColor: bgcolors_dict[type],\n    //                         marginLeft: \"20px\",\n    //                       }}\n    //                     >\n    //                       <strong>{checkbox}</strong>\n    //                     </div>\n    //                   )}\n    //                   {pairs[key].map((value, id) => {\n    //                     // console.log(\"value is ^^^^^\");\n    //                     // console.log(value);\n    //                     return (\n    //                       <Draggable\n    //                         draggableId={type + \"_\" + key + \"_\" + id}\n    //                         index={id}\n    //                         className=\"draggable\"\n    //                       >\n    //                         {(provided, snapshot) => (\n    //                           <div\n    //                             ref={provided.innerRef}\n    //                             {...provided.draggableProps}\n    //                             {...provided.dragHandleProps}\n    //                             style={getItemStyle(\n    //                               snapshot.isDragging,\n    //                               provided.draggableProps.style\n    //                             )}\n    //                           >\n    //                             <Row>\n    //                               <TextareaAutosize\n    //                                 style={{\n    //                                   marginLeft: \"20px\",\n    //                                   background: \"transparent\",\n    //                                   resize: \"none\",\n    //                                   backgroundColor: \"rgba(0, 0, 0, 0)\",\n    //                                   borderColor: \"rgba(0, 0, 0, 0)\",\n    //                                 }}\n    //                                 name={name}\n    //                                 id={\"item_\" + type + \"_\" + key + \"_\" + id}\n    //                                 value={\n    //                                   type === \"original\"\n    //                                     ? value\n    //                                     : Object.keys(value)[0]\n    //                                 }\n    //                                 onChange={(e) =>\n    //                                   this.props.handleChange(\n    //                                     e,\n    //                                     \"item_\" + type + \"_\" + key + \"_\" + id\n    //                                   )\n    //                                 }\n    //                               />\n    //                             </Row>\n    //                           </div>\n    //                         )}\n    //                       </Draggable>\n    //                     );\n    //                   })}\n    //                 </div>\n    //               )}\n    //             </Droppable>\n    //           </Container>\n    //         );\n    //       })}\n    //     </Container>\n    //     {type !== \"original\" && !checkboxes && (\n    //       <Container>\n    //         {\" \"}\n    //         <Row>\n    //           <div className=\"float-right\" style={{ width: \"100%\" }}>\n    //             <Button\n    //               onClick={() => {\n    //                 var lastIdx = this.props.addSection(\n    //                   type,\n    //                   \"New Section Name\"\n    //                 );\n    //                 var newState = this.getDefaultState();\n    //                 newState[type + \"_keys\"][lastIdx] = 1;\n    //                 this.setState(newState);\n    //               }}\n    //               className=\"text-white ml-auto float-right\"\n    //               style={{\n    //                 alignContent: \"right\",\n    //                 fontSize: \"15px\",\n    //                 marginRight: \"-16px\",\n    //                 marginTop: \"-15px\",\n    //               }}\n    //             >\n    //               Add section\n    //               <AddIcon />\n    //             </Button>\n    //           </div>\n    //         </Row>\n    //       </Container>\n    //     )}\n    //   </>\n    // );\n  }\n\n  handleStateChange(newState) {\n    console.log(newState);\n    this.setState(newState);\n  }\n\n  hypothesesDisplay(hypo, hypo_info, type, idx) {\n    return (\n      <Hypothesis\n        hypo={hypo}\n        hypo_info={hypo_info}\n        type={type}\n        idx={idx}\n        showValue={type == \"original\" ? false : this.state[type][idx]}\n        getDefaultState={() => this.getDefaultState()}\n        handleHypothesisChange={(e, type, hypo) =>\n          this.props.handleHypothesisChange(e, type, hypo)\n        }\n        handleLabelChange={(e, type, idx) =>\n          this.props.handleLabelChange(e, type, idx)\n        }\n        handleStrategyChange={this.props.handleStrategyChange}\n        info={this.props[type.toLowerCase() + \"h\"]}\n        rows={this.props[type]}\n        tableRows={this.tableRows}\n        handleStateChange={this.handleStateChange}\n      />\n    );\n  }\n\n  showView(type) {\n    const ohy = Object.keys(this.props.oh).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, this.props.oh[hypo], \"original\", idx);\n    });\n    var ah_items = Object.keys(this.props.ah).map((key) => [\n      key,\n      this.props.ah[key],\n    ]);\n    ah_items.sort((first, second) => second[1][3] - first[1][3]);\n    // console.log(ah_items);\n    const ahy = ah_items.map((hypo, idx) => {\n      // console.log(hypo);\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"A\", idx);\n    });\n    var bh_items = Object.keys(this.props.bh).map((key) => [\n      key,\n      this.props.bh[key],\n    ]);\n    bh_items.sort((first, second) => second[1][3] - first[1][3]);\n    const bhy = bh_items.map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"B\", idx);\n    });\n    var ch_items = Object.keys(this.props.ch).map((key) => [\n      key,\n      this.props.ch[key],\n    ]);\n    ch_items.sort((first, second) => second[1][3] - first[1][3]);\n    const chy = ch_items.map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo[0], hypo[1], \"C\", idx);\n    });\n    if (type === \"drag\") {\n      return (\n        <>\n          <Row>\n            <Col md={3} style={{ marginBottom: \"15px\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Table</h5>\n              </Row>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={3} style={{ marginBottom: \"15px\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table A</h5>\n              </Row>\n              {this.tableRows(this.props.A, \"A\")}\n            </Col>\n            <Col md={3} style={{ marginBottom: \"15px\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table B</h5>\n              </Row>\n              {this.tableRows(this.props.B, \"B\")}\n            </Col>\n            <Col md={3} style={{ marginBottom: \"15px\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table C</h5>\n              </Row>\n              {this.tableRows(this.props.C, \"C\")}\n            </Col>\n          </Row>\n          <Row style={{ marginLeft: \"10px\" }}>\n            <Col md={3} style={{ width: \"100%\", paddingRight: \"10px\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h6>Original Hypotheses</h6>\n              </Row>\n              {ohy}\n            </Col>\n            <Col md={3} style={{ width: \"100%\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h6>Table A Hypotheses</h6>\n              </Row>\n              {ahy}\n            </Col>\n            <Col md={3} style={{ width: \"100%\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h6>Table B Hypotheses</h6>\n              </Row>\n              {bhy}\n            </Col>\n            <Col md={3} style={{ width: \"100%\" }}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h6>Table C Hypotheses</h6>\n              </Row>\n              {chy}\n            </Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusA\") {\n      return (\n        <>\n          <Row className=\"mt-3\">\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Table</h5>\n              </Row>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table A</h5>\n              </Row>\n              {this.tableRows(this.props.A, \"A\")}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Hypotheses</h5>\n              </Row>\n              {ohy}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table A Hypotheses</h5>\n              </Row>\n              {ahy}\n            </Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusB\") {\n      return (\n        <>\n          <Row className=\"mt-3\">\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Table</h5>\n              </Row>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table B</h5>\n              </Row>\n              {this.tableRows(this.props.B, \"B\")}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Hypotheses</h5>\n              </Row>\n              {ohy}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table B Hypotheses</h5>\n              </Row>\n              {bhy}\n            </Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusC\") {\n      return (\n        <>\n          <Row className=\"mt-3\">\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Table</h5>\n              </Row>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table C</h5>\n              </Row>\n              {this.tableRows(this.props.C, \"C\")}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Original Hypotheses</h5>\n              </Row>\n              {ohy}\n            </Col>\n            <Col md={3}>\n              <Row className=\"justify-content-center mt-3 white-text\">\n                <h5>Table C Hypotheses</h5>\n              </Row>\n              {chy}\n            </Col>\n          </Row>\n        </>\n      );\n    }\n  }\n\n  render() {\n    return <>{this.showView(this.props.type)}</>;\n  }\n}\n\nView.defaultProps = {\n  A: {},\n  B: {},\n  C: {},\n  oh: {},\n  ah: {},\n  bh: {},\n  ch: {},\n};\n\nexport default View;\n"]},"metadata":{},"sourceType":"module"}