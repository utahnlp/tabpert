{"ast":null,"code":"var _jsxFileName = \"/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/View.js\";\nimport React, { Component } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { IconButton, Input } from \"@material-ui/core\";\nimport ShowModal from \"./Modal\";\nconst grid = 5;\n\nclass View extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRows = this.tableRows.bind(this);\n    this.showView = this.showView.bind(this);\n    this.hypothesesDisplay = this.hypothesesDisplay.bind(this);\n    this.state = this.getDefaultState();\n  }\n\n  getDefaultState() {\n    let a = new Array(9).fill(0);\n    let b = new Array(9).fill(0);\n    let c = new Array(9).fill(0);\n    let state_var = {\n      A: a,\n      B: b,\n      C: c\n    };\n    return state_var;\n  }\n\n  getListStyle(isDraggingOver) {\n    return {\n      background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n      padding: grid,\n      minWidth: \"250px\",\n      minHeight: \"50px\"\n    };\n  }\n\n  getItemStyle(isDragging, draggableStyle) {\n    return {\n      // some basic styles to make the items look a bit nicer\n      userSelect: \"none\",\n      padding: grid * 2,\n      margin: `0 0 ${grid}px 0`,\n      // change background colour if dragging\n      background: isDragging ? \"lightgreen\" : \"grey\",\n      // styles we need to apply on draggables\n      ...draggableStyle\n    };\n  }\n\n  tableRows(pairs, type, name = \"draggable\", editable = true, checkboxes = false, hypo) {\n    return Object.keys(pairs).map(key => {\n      var checkbox = key; // console.log(\"$$$$$$$$$$$$$$\");\n      // console.log(this.props);\n      // console.log(type, hypo);\n\n      if (checkboxes === true) {\n        checkbox = /*#__PURE__*/React.createElement(Form, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check, {\n          custom: true,\n          type: \"checkbox\",\n          defaultChecked: this.props[type.toLowerCase() + \"h\"][hypo][2].includes(key) ? true : false,\n          id: type + \"_check_\" + key,\n          label: key,\n          onChange: () => {\n            this.props.handleRowChange(type, key, hypo);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, checkbox)), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: type + \"_\" + key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef,\n        style: this.getListStyle(snapshot.isDraggingOver)\n      }, provided.droppableProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      }), pairs[key].map((value, id) => {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          draggableId: type + \"_\" + key + \"_\" + id,\n          index: id,\n          key: type + \"_\" + key + \"_\" + id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }\n        }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          style: this.getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          style: {\n            margin: \"5px\",\n            background: \"transparent\"\n          },\n          name: name,\n          id: \"item_\" + type + \"_\" + key + \"_\" + id,\n          value: type === \"original\" ? value : Object.keys(value)[0],\n          onChange: e => this.props.handleChange(e, \"item_\" + type + \"_\" + key + \"_\" + id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }\n        }))));\n      }))))));\n    });\n  }\n\n  hypothesesDisplay(hypo, hypo_info, type, idx) {\n    var stylecolor = idx % 2 ? {\n      backgroundColor: \"#E1ECF4\"\n    } : {\n      backgroundColor: \"light green\"\n    };\n    var showModal = /*#__PURE__*/React.createElement(React.Fragment, null); // console.log(type, hypo_info, type, idx);\n\n    if (type !== \"original\") {\n      // console.log(\"~~~~~~~~~~~~~~~\");\n      // console.log(this.props[type.toLowerCase() + \"h\"][hypo]);\n      // console.log(hypo);\n      // console.log(\"show modal is \");\n      // console.log(type == \"original\" ? false : this.state[type][idx]);\n      showModal = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => {\n          if (type == \"original\") return;\n          var newState = this.getDefaultState();\n          newState[type][idx] = 1;\n          this.setState(newState); // console.log(\"^^^^^^^^^we changed the state!\");\n          // console.log(newState[type][idx]);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(ShowModal, {\n        show: type == \"original\" ? false : this.state[type][idx],\n        onHide: () => this.setState(this.getDefaultState()),\n        hypo: hypo,\n        idx: idx,\n        type: type,\n        table: this.tableRows(this.props[type], type, \"non-draggable\", false, true, hypo),\n        strategies: this.props[type.toLowerCase() + \"h\"][hypo][1],\n        rows: this.props[type.toLowerCase() + \"h\"][hypo][2],\n        handleStrategyChange: this.props.handleStrategyChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }\n      }));\n    } // console.log(showModal);\n\n\n    return /*#__PURE__*/React.createElement(Row, {\n      style: stylecolor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }\n    }, showModal, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"hypothesis_\" + type + idx,\n      type: \"textarea\",\n      defaultValue: hypo,\n      onChange: e => this.props.handleHypothesisChange(e, type, hypo),\n      contentEditable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"select\", {\n      defaultValue: type == \"original\" ? this.props[type][hypo] : this.props[type.toLowerCase() + \"h\"][hypo][0],\n      id: \"label_\" + type + idx,\n      onChange: e => this.props.handleLabelChange(e, type),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"E\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }\n    }, \"E\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"N\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, \"N\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, \"C\")));\n  }\n\n  trash() {\n    return /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef,\n      style: this.getListStyle(snapshot.isDraggingOver)\n    }, provided.droppableProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    }), () => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }));\n  }\n\n  addCard() {\n    // console.log(\"ADD\");\n    return /*#__PURE__*/React.createElement(Droppable, {\n      droppableId: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 7\n      }\n    }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      ref: provided.innerRef,\n      style: this.getListStyle(snapshot.isDraggingOver)\n    }, provided.droppableProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    }), [1].map(value => {\n      return /*#__PURE__*/React.createElement(Draggable, {\n        draggableId: \"new\",\n        key: \"new\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 17\n        }\n      }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef\n      }, provided.draggableProps, provided.dragHandleProps, {\n        style: this.getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        style: {\n          margin: \"5px\",\n          background: \"transparent\"\n        },\n        name: \"draggable\",\n        id: \"NEW\",\n        defaultValue: \"ADD TEXT HERE\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 25\n        }\n      }))));\n    })));\n  }\n\n  showView(type) {\n    const ohy = Object.keys(this.props.oh).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, this.props.oh[hypo], \"original\", idx);\n    }); // console.log(\"**********\");\n    // console.log(this.props.ah);\n\n    var ah_items = Object.keys(this.props.ah).map(function (key) {\n      return [key, dict[key]];\n    });\n    ah_items.sort((first, second) => second[1][3] - first[1][3]);\n    const ahy = Object.keys(ah_items).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo[0], ah_items[idx][1], \"A\", idx);\n    });\n    const bhy = Object.keys(this.props.bh).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, this.props.bh[hypo], \"B\", idx);\n    });\n    const chy = Object.keys(this.props.ch).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, this.props.ch[hypo], \"C\", idx);\n    });\n\n    if (type === \"drag\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.A, \"A\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.B, \"B\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.C, \"C\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }\n      }, ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }\n      }, ahy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }\n      }, bhy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }\n      }, chy)));\n    } else if (type === \"focusA\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.A, \"A\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }\n      }, ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }\n      }, ahy)));\n    } else if (type === \"focusB\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.B, \"B\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }\n      }, ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }\n      }, bhy)));\n    } else if (type === \"focusC\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.original, \"original\", \"non-draggable\", false)), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.C, \"C\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }\n      }, ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }\n      }, chy)));\n    } else if (type == \"trash\") {\n      return /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 14\n        }\n      }, this.trash());\n    } else if (type == \"add\") {\n      return /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 14\n        }\n      }, this.addCard());\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.showView(this.props.type));\n  }\n\n}\n\nexport default View;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/View.js"],"names":["React","Component","Droppable","Draggable","Container","Row","Col","Form","AddIcon","IconButton","Input","ShowModal","grid","View","constructor","props","tableRows","bind","showView","hypothesesDisplay","state","getDefaultState","a","Array","fill","b","c","state_var","A","B","C","getListStyle","isDraggingOver","background","padding","minWidth","minHeight","getItemStyle","isDragging","draggableStyle","userSelect","margin","pairs","type","name","editable","checkboxes","hypo","Object","keys","map","key","checkbox","toLowerCase","includes","handleRowChange","provided","snapshot","innerRef","droppableProps","value","id","draggableProps","dragHandleProps","style","e","handleChange","hypo_info","idx","stylecolor","backgroundColor","showModal","newState","setState","handleStrategyChange","handleHypothesisChange","handleLabelChange","trash","addCard","ohy","oh","ah_items","ah","dict","sort","first","second","ahy","bhy","bh","chy","ch","original","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { IconButton, Input } from \"@material-ui/core\";\nimport ShowModal from \"./Modal\";\n\nconst grid = 5;\nclass View extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRows = this.tableRows.bind(this);\n    this.showView = this.showView.bind(this);\n    this.hypothesesDisplay = this.hypothesesDisplay.bind(this);\n    this.state = this.getDefaultState();\n  }\n\n  getDefaultState() {\n    let a = new Array(9).fill(0);\n    let b = new Array(9).fill(0);\n    let c = new Array(9).fill(0);\n    let state_var = { A: a, B: b, C: c };\n    return state_var;\n  }\n  getListStyle(isDraggingOver) {\n    return {\n      background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n      padding: grid,\n      minWidth: \"250px\",\n      minHeight: \"50px\",\n    };\n  }\n  getItemStyle(isDragging, draggableStyle) {\n    return {\n      // some basic styles to make the items look a bit nicer\n      userSelect: \"none\",\n      padding: grid * 2,\n      margin: `0 0 ${grid}px 0`,\n\n      // change background colour if dragging\n      background: isDragging ? \"lightgreen\" : \"grey\",\n\n      // styles we need to apply on draggables\n      ...draggableStyle,\n    };\n  }\n  tableRows(\n    pairs,\n    type,\n    name = \"draggable\",\n    editable = true,\n    checkboxes = false,\n    hypo\n  ) {\n    return Object.keys(pairs).map((key) => {\n      var checkbox = key;\n      // console.log(\"$$$$$$$$$$$$$$\");\n      // console.log(this.props);\n      // console.log(type, hypo);\n      if (checkboxes === true) {\n        checkbox = (\n          <Form>\n            <Form.Check\n              custom\n              type={\"checkbox\"}\n              defaultChecked={\n                this.props[type.toLowerCase() + \"h\"][hypo][2].includes(key)\n                  ? true\n                  : false\n              }\n              id={type + \"_check_\" + key}\n              label={key}\n              onChange={() => {\n                this.props.handleRowChange(type, key, hypo);\n              }}\n            />\n          </Form>\n        );\n      }\n      return (\n        <Container>\n          <Row>\n            <Col>\n              <strong>{checkbox}</strong>\n            </Col>\n            <Col>\n              <Droppable droppableId={type + \"_\" + key}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    style={this.getListStyle(snapshot.isDraggingOver)}\n                    {...provided.droppableProps}\n                  >\n                    {pairs[key].map((value, id) => {\n                      return (\n                        <Draggable\n                          draggableId={type + \"_\" + key + \"_\" + id}\n                          index={id}\n                          key={type + \"_\" + key + \"_\" + id}\n                        >\n                          {(provided, snapshot) => (\n                            <div\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              style={this.getItemStyle(\n                                snapshot.isDragging,\n                                provided.draggableProps.style\n                              )}\n                            >\n                              <Row>\n                                <input\n                                  style={{\n                                    margin: \"5px\",\n                                    background: \"transparent\",\n                                  }}\n                                  name={name}\n                                  id={\"item_\" + type + \"_\" + key + \"_\" + id}\n                                  value={\n                                    type === \"original\"\n                                      ? value\n                                      : Object.keys(value)[0]\n                                  }\n                                  onChange={(e) =>\n                                    this.props.handleChange(\n                                      e,\n                                      \"item_\" + type + \"_\" + key + \"_\" + id\n                                    )\n                                  }\n                                />\n                              </Row>\n                            </div>\n                          )}\n                        </Draggable>\n                      );\n                    })}\n                  </div>\n                )}\n              </Droppable>\n            </Col>\n          </Row>\n        </Container>\n      );\n    });\n  }\n\n  hypothesesDisplay(hypo, hypo_info, type, idx) {\n    var stylecolor =\n      idx % 2\n        ? { backgroundColor: \"#E1ECF4\" }\n        : { backgroundColor: \"light green\" };\n\n    var showModal = <></>;\n    // console.log(type, hypo_info, type, idx);\n    if (type !== \"original\") {\n      // console.log(\"~~~~~~~~~~~~~~~\");\n      // console.log(this.props[type.toLowerCase() + \"h\"][hypo]);\n      // console.log(hypo);\n      // console.log(\"show modal is \");\n      // console.log(type == \"original\" ? false : this.state[type][idx]);\n      showModal = (\n        <>\n          <IconButton\n            onClick={() => {\n              if (type == \"original\") return;\n              var newState = this.getDefaultState();\n              newState[type][idx] = 1;\n              this.setState(newState);\n              // console.log(\"^^^^^^^^^we changed the state!\");\n              // console.log(newState[type][idx]);\n            }}\n          >\n            <AddIcon />\n          </IconButton>\n          <ShowModal\n            show={type == \"original\" ? false : this.state[type][idx]}\n            onHide={() => this.setState(this.getDefaultState())}\n            hypo={hypo}\n            idx={idx}\n            type={type}\n            table={this.tableRows(\n              this.props[type],\n              type,\n              \"non-draggable\",\n              false,\n              true,\n              hypo\n            )}\n            strategies={this.props[type.toLowerCase() + \"h\"][hypo][1]}\n            rows={this.props[type.toLowerCase() + \"h\"][hypo][2]}\n            handleStrategyChange={this.props.handleStrategyChange}\n          />\n        </>\n      );\n    }\n    // console.log(showModal);\n    return (\n      <Row style={stylecolor}>\n        {showModal}\n        <Col>\n          <input\n            id={\"hypothesis_\" + type + idx}\n            type=\"textarea\"\n            defaultValue={hypo}\n            onChange={(e) => this.props.handleHypothesisChange(e, type, hypo)}\n            contentEditable\n          />\n        </Col>\n        <select\n          defaultValue={\n            type == \"original\"\n              ? this.props[type][hypo]\n              : this.props[type.toLowerCase() + \"h\"][hypo][0]\n          }\n          id={\"label_\" + type + idx}\n          onChange={(e) => this.props.handleLabelChange(e, type)}\n        >\n          <option value=\"E\">E</option>\n          <option value=\"N\">N</option>\n          <option value=\"C\">C</option>\n        </select>\n      </Row>\n    );\n  }\n  trash() {\n    return (\n      <Droppable droppableId={\"trash\"}>\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            style={this.getListStyle(snapshot.isDraggingOver)}\n            {...provided.droppableProps}\n          >\n            {() => {\n              return <></>;\n            }}\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n  addCard() {\n    // console.log(\"ADD\");\n    return (\n      <Droppable droppableId={\"add\"}>\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            style={this.getListStyle(snapshot.isDraggingOver)}\n            {...provided.droppableProps}\n          >\n            {[1].map((value) => {\n              return (\n                <Draggable draggableId={\"new\"} key={\"new\"}>\n                  {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                      style={this.getItemStyle(\n                        snapshot.isDragging,\n                        provided.draggableProps.style\n                      )}\n                    >\n                      <Row>\n                        <input\n                          style={{ margin: \"5px\", background: \"transparent\" }}\n                          name=\"draggable\"\n                          id={\"NEW\"}\n                          defaultValue={\"ADD TEXT HERE\"}\n                        />\n                      </Row>\n                    </div>\n                  )}\n                </Draggable>\n              );\n            })}\n          </div>\n        )}\n      </Droppable>\n    );\n  }\n  showView(type) {\n    const ohy = Object.keys(this.props.oh).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, this.props.oh[hypo], \"original\", idx);\n    });\n    // console.log(\"**********\");\n    // console.log(this.props.ah);\n    var ah_items = Object.keys(this.props.ah).map(function (key) {\n      return [key, dict[key]];\n    });\n    ah_items.sort((first, second) => second[1][3] - first[1][3]);\n    const ahy = Object.keys(ah_items).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo[0], ah_items[idx][1], \"A\", idx);\n    });\n    const bhy = Object.keys(this.props.bh).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, this.props.bh[hypo], \"B\", idx);\n    });\n    const chy = Object.keys(this.props.ch).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, this.props.ch[hypo], \"C\", idx);\n    });\n    if (type === \"drag\") {\n      return (\n        <>\n          <Row>\n            <Col md={3}>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={3}>{this.tableRows(this.props.A, \"A\")}</Col>\n            <Col md={3}>{this.tableRows(this.props.B, \"B\")}</Col>\n            <Col md={3}>{this.tableRows(this.props.C, \"C\")}</Col>\n          </Row>\n          <Row>\n            <Col md={3}>{ohy}</Col>\n            <Col md={3}>{ahy}</Col>\n            <Col md={3}>{bhy}</Col>\n            <Col md={3}>{chy}</Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusA\") {\n      return (\n        <>\n          <Row>\n            <Col md={6}>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={6}>{this.tableRows(this.props.A, \"A\")}</Col>\n          </Row>\n          <Row>\n            <Col md={6}>{ohy}</Col>\n            <Col md={6}>{ahy}</Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusB\") {\n      return (\n        <>\n          <Row>\n            {\" \"}\n            <Col md={6}>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={6}>{this.tableRows(this.props.B, \"B\")}</Col>\n          </Row>\n          <Row>\n            <Col md={6}>{ohy}</Col>\n            <Col md={6}>{bhy}</Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusC\") {\n      return (\n        <>\n          <Row>\n            <Col md={6}>\n              {this.tableRows(\n                this.props.original,\n                \"original\",\n                \"non-draggable\",\n                false\n              )}\n            </Col>\n            <Col md={6}>{this.tableRows(this.props.C, \"C\")}</Col>\n          </Row>\n          <Row>\n            <Col md={6}>{ohy}</Col>\n            <Col md={6}>{chy}</Col>\n          </Row>\n        </>\n      );\n    } else if (type == \"trash\") {\n      return <Col md={6}>{this.trash()}</Col>;\n    } else if (type == \"add\") {\n      return <Col md={6}>{this.addCard()}</Col>;\n    }\n  }\n\n  render() {\n    return <>{this.showView(this.props.type)}</>;\n  }\n}\n\nexport default View;\n"]},"metadata":{},"sourceType":"module"}