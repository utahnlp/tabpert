{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { visuallyHidden } from '@material-ui/system';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { useTheme, withStyles } from '../styles';\nimport { capitalize, useForkRef, useIsFocusVisible, useControlled, unstable_useId as useId } from '../utils';\nimport Star from '../internal/svg-icons/Star';\nimport StarBorder from '../internal/svg-icons/StarBorder';\n\nfunction clamp(value, min, max) {\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n}\n\nfunction getDecimalPrecision(num) {\n  const decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction roundValueToPrecision(value, precision) {\n  if (value == null) {\n    return value;\n  }\n\n  const nearest = Math.round(value / precision) * precision;\n  return Number(nearest.toFixed(getDecimalPrecision(precision)));\n}\n\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    // Required to position the pristine input absolutely\n    position: 'relative',\n    fontSize: theme.typography.pxToRem(24),\n    color: '#faaf00',\n    cursor: 'pointer',\n    textAlign: 'left',\n    WebkitTapHighlightColor: 'transparent',\n    '&$disabled': {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    '&$focusVisible $iconActive': {\n      outline: '1px solid #999'\n    }\n  },\n\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {\n    fontSize: theme.typography.pxToRem(18)\n  },\n\n  /* Styles applied to the root element if `size=\"large\"`. */\n  sizeLarge: {\n    fontSize: theme.typography.pxToRem(30)\n  },\n\n  /* Styles applied to the root element if `readOnly={true}`. */\n  readOnly: {\n    pointerEvents: 'none'\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if keyboard focused. */\n  focusVisible: {},\n\n  /* Visually hide an element. */\n  visuallyHidden,\n\n  /* Styles applied to the label elements. */\n  label: {\n    cursor: 'inherit'\n  },\n\n  /* Styles applied to the label of the \"no value\" input when it is active. */\n  labelEmptyValueActive: {\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    outline: '1px solid #999',\n    width: '100%'\n  },\n\n  /* Styles applied to the icon wrapping elements. */\n  icon: {\n    // Fit wrapper to actual icon size.\n    display: 'flex',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    }),\n    // Fix mouseLeave issue.\n    // https://github.com/facebook/react/issues/4492\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied to the icon wrapping elements when empty. */\n  iconEmpty: {\n    color: theme.palette.action.disabled\n  },\n\n  /* Styles applied to the icon wrapping elements when filled. */\n  iconFilled: {},\n\n  /* Styles applied to the icon wrapping elements when hover. */\n  iconHover: {},\n\n  /* Styles applied to the icon wrapping elements when focus. */\n  iconFocus: {},\n\n  /* Styles applied to the icon wrapping elements when active. */\n  iconActive: {\n    transform: 'scale(1.2)'\n  },\n\n  /* Styles applied to the icon wrapping elements when decimals are necessary. */\n  decimal: {\n    position: 'relative'\n  }\n});\n\nfunction IconContainer(props) {\n  const other = _objectWithoutPropertiesLoose(props, [\"value\"]);\n\n  return /*#__PURE__*/React.createElement(\"span\", other);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? IconContainer.propTypes = {\n  value: PropTypes.number.isRequired\n} : void 0;\nconst defaultIcon = /*#__PURE__*/React.createElement(Star, {\n  fontSize: \"inherit\"\n});\nconst defaultEmptyIcon = /*#__PURE__*/React.createElement(StarBorder, {\n  fontSize: \"inherit\"\n});\n\nfunction defaultLabelText(value) {\n  return `${value} Star${value !== 1 ? 's' : ''}`;\n}\n\nconst Rating = /*#__PURE__*/React.forwardRef(function Rating(props, ref) {\n  const {\n    classes,\n    className,\n    defaultValue = null,\n    disabled = false,\n    emptyIcon = defaultEmptyIcon,\n    emptyLabelText = 'Empty',\n    getLabelText = defaultLabelText,\n    icon = defaultIcon,\n    IconContainerComponent = IconContainer,\n    max = 5,\n    name: nameProp,\n    onChange,\n    onChangeActive,\n    onMouseLeave,\n    onMouseMove,\n    precision = 1,\n    readOnly = false,\n    size = 'medium',\n    value: valueProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"defaultValue\", \"disabled\", \"emptyIcon\", \"emptyLabelText\", \"getLabelText\", \"icon\", \"IconContainerComponent\", \"max\", \"name\", \"onChange\", \"onChangeActive\", \"onMouseLeave\", \"onMouseMove\", \"precision\", \"readOnly\", \"size\", \"value\"]);\n\n  const name = useId(nameProp);\n  const [valueDerived, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Rating'\n  });\n  const valueRounded = roundValueToPrecision(valueDerived, precision);\n  const theme = useTheme();\n  const [{\n    hover,\n    focus\n  }, setState] = React.useState({\n    hover: -1,\n    focus: -1\n  });\n  let value = valueRounded;\n\n  if (hover !== -1) {\n    value = hover;\n  }\n\n  if (focus !== -1) {\n    value = focus;\n  }\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const rootRef = React.useRef();\n  const handleFocusRef = useForkRef(focusVisibleRef, rootRef);\n  const handleRef = useForkRef(handleFocusRef, ref);\n\n  const handleMouseMove = event => {\n    if (onMouseMove) {\n      onMouseMove(event);\n    }\n\n    const rootNode = rootRef.current;\n    const {\n      right,\n      left\n    } = rootNode.getBoundingClientRect();\n    const {\n      width\n    } = rootNode.firstChild.getBoundingClientRect();\n    let percent;\n\n    if (theme.direction === 'rtl') {\n      percent = (right - event.clientX) / (width * max);\n    } else {\n      percent = (event.clientX - left) / (width * max);\n    }\n\n    let newHover = roundValueToPrecision(max * percent + precision / 2, precision);\n    newHover = clamp(newHover, precision, max);\n    setState(prev => prev.hover === newHover && prev.focus === newHover ? prev : {\n      hover: newHover,\n      focus: newHover\n    });\n    setFocusVisible(false);\n\n    if (onChangeActive && hover !== newHover) {\n      onChangeActive(event, newHover);\n    }\n  };\n\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    const newHover = -1;\n    setState({\n      hover: newHover,\n      focus: newHover\n    });\n\n    if (onChangeActive && hover !== newHover) {\n      onChangeActive(event, newHover);\n    }\n  };\n\n  const handleChange = event => {\n    let newValue = parseFloat(event.target.value); // Give mouse priority over keyboard\n    // Fix https://github.com/mui-org/material-ui/issues/22827\n\n    if (hover !== -1) {\n      newValue = hover;\n    }\n\n    setValueState(newValue);\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n  };\n\n  const handleClear = event => {\n    // Ignore keyboard events\n    // https://github.com/facebook/react/issues/7407\n    if (event.clientX === 0 && event.clientY === 0) {\n      return;\n    }\n\n    setState({\n      hover: -1,\n      focus: -1\n    });\n    setValueState(null);\n\n    if (onChange && parseFloat(event.target.value) === valueRounded) {\n      onChange(event, null);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    const newFocus = parseFloat(event.target.value);\n    setState(prev => ({\n      hover: prev.hover,\n      focus: newFocus\n    }));\n\n    if (onChangeActive && focus !== newFocus) {\n      onChangeActive(event, newFocus);\n    }\n  };\n\n  const handleBlur = event => {\n    if (hover !== -1) {\n      return;\n    }\n\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    const newFocus = -1;\n    setState(prev => ({\n      hover: prev.hover,\n      focus: newFocus\n    }));\n\n    if (onChangeActive && focus !== newFocus) {\n      onChangeActive(event, newFocus);\n    }\n  };\n\n  const [emptyValueFocused, setEmptyValueFocused] = React.useState(false);\n\n  const item = (state, labelProps) => {\n    const id = `${name}-${String(state.value).replace('.', '-')}`;\n    const container = /*#__PURE__*/React.createElement(IconContainerComponent, {\n      value: state.value,\n      className: clsx(classes.icon, state.filled ? classes.iconFilled : classes.iconEmpty, state.hover && classes.iconHover, state.focus && classes.iconFocus, state.active && classes.iconActive)\n    }, emptyIcon && !state.filled ? emptyIcon : icon);\n\n    if (readOnly) {\n      return /*#__PURE__*/React.createElement(\"span\", _extends({\n        key: state.value\n      }, labelProps), container);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: state.value\n    }, /*#__PURE__*/React.createElement(\"label\", _extends({\n      className: classes.label,\n      htmlFor: id\n    }, labelProps), container, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.visuallyHidden\n    }, getLabelText(state.value))), /*#__PURE__*/React.createElement(\"input\", {\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      onClick: handleClear,\n      disabled: disabled,\n      value: state.value,\n      id: id,\n      type: \"radio\",\n      name: name,\n      checked: state.checked,\n      className: classes.visuallyHidden\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    ref: handleRef,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    className: clsx(classes.root, className, size !== 'medium' && classes[`size${capitalize(size)}`], disabled && classes.disabled, focusVisible && classes.focusVisible, readOnly && classes.readOnly),\n    role: readOnly ? 'img' : null,\n    \"aria-label\": readOnly ? getLabelText(value) : null\n  }, other), Array.from(new Array(max)).map((_, index) => {\n    const itemValue = index + 1;\n\n    if (precision < 1) {\n      const items = Array.from(new Array(1 / precision));\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: itemValue,\n        className: clsx(classes.decimal, itemValue === Math.ceil(value) && (hover !== -1 || focus !== -1) && classes.iconActive)\n      }, items.map(($, indexDecimal) => {\n        const itemDecimalValue = roundValueToPrecision(itemValue - 1 + (indexDecimal + 1) * precision, precision);\n        return item({\n          value: itemDecimalValue,\n          filled: itemDecimalValue <= value,\n          hover: itemDecimalValue <= hover,\n          focus: itemDecimalValue <= focus,\n          checked: itemDecimalValue === valueRounded\n        }, {\n          style: items.length - 1 === indexDecimal ? {} : {\n            width: itemDecimalValue === value ? `${(indexDecimal + 1) * precision * 100}%` : '0%',\n            overflow: 'hidden',\n            zIndex: 1,\n            position: 'absolute'\n          }\n        });\n      }));\n    }\n\n    return item({\n      value: itemValue,\n      active: itemValue === value && (hover !== -1 || focus !== -1),\n      filled: itemValue <= value,\n      hover: itemValue <= hover,\n      focus: itemValue <= focus,\n      checked: itemValue === valueRounded\n    });\n  }), !readOnly && !disabled && valueRounded == null && /*#__PURE__*/React.createElement(\"label\", {\n    className: clsx(emptyValueFocused && classes.labelEmptyValueActive)\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: \"\",\n    id: `${name}-empty`,\n    type: \"radio\",\n    name: name,\n    defaultChecked: true,\n    className: classes.visuallyHidden,\n    onFocus: () => setEmptyValueFocused(true),\n    onBlur: () => setEmptyValueFocused(false)\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.visuallyHidden\n  }, emptyLabelText)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Rating.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default null\n   */\n  defaultValue: PropTypes.number,\n\n  /**\n   * If `true`, the rating will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when empty.\n   * @default <StarBorder fontSize=\"inherit\" />\n   */\n  emptyIcon: PropTypes.node,\n\n  /**\n   * The label read when the rating input is empty.\n   * @default 'Empty'\n   */\n  emptyLabelText: PropTypes.node,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {number} value The rating label's value to format.\n   * @returns {string}\n   *\n   * @default function defaultLabelText(value) {\n   *   return `${value} Star${value !== 1 ? 's' : ''}`;\n   * }\n   */\n  getLabelText: PropTypes.func,\n\n  /**\n   * The icon to display.\n   * @default <Star fontSize=\"inherit\" />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component containing the icon.\n   * @default function IconContainer(props) {\n   *   const { value, ...other } = props;\n   *   return <span {...other} />;\n   * }\n   */\n  IconContainerComponent: PropTypes.elementType,\n\n  /**\n   * Maximum rating.\n   * @default 5\n   */\n  max: PropTypes.number,\n\n  /**\n   * The name attribute of the radio `input` elements.\n   * This input `name` should be unique within the page.\n   * Being unique within a form is insufficient since the `name` is used to generated IDs.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} value The new value.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback function that is fired when the hover state changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} value The new value.\n   */\n  onChangeActive: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseMove: PropTypes.func,\n\n  /**\n   * The minimum increment value change allowed.\n   * @default 1\n   */\n  precision: chainPropTypes(PropTypes.number, props => {\n    if (props.precision < 0.1) {\n      return new Error(['Material-UI: The prop `precision` should be above 0.1.', 'A value below this limit has an imperceptible impact.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Removes all hover effects and pointer events.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * The size of the rating.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The rating value.\n   */\n  value: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRating'\n})(Rating);","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/node_modules/@material-ui/core/Rating/Rating.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","visuallyHidden","chainPropTypes","useTheme","withStyles","capitalize","useForkRef","useIsFocusVisible","useControlled","unstable_useId","useId","Star","StarBorder","clamp","value","min","max","getDecimalPrecision","num","decimalPart","toString","split","length","roundValueToPrecision","precision","nearest","Math","round","Number","toFixed","styles","theme","root","display","position","fontSize","typography","pxToRem","color","cursor","textAlign","WebkitTapHighlightColor","opacity","palette","action","disabledOpacity","pointerEvents","outline","sizeSmall","sizeLarge","readOnly","disabled","focusVisible","label","labelEmptyValueActive","top","bottom","width","icon","transition","transitions","create","duration","shortest","iconEmpty","iconFilled","iconHover","iconFocus","iconActive","transform","decimal","IconContainer","props","other","createElement","process","env","NODE_ENV","propTypes","number","isRequired","defaultIcon","defaultEmptyIcon","defaultLabelText","Rating","forwardRef","ref","classes","className","defaultValue","emptyIcon","emptyLabelText","getLabelText","IconContainerComponent","name","nameProp","onChange","onChangeActive","onMouseLeave","onMouseMove","size","valueProp","valueDerived","setValueState","controlled","default","valueRounded","hover","focus","setState","useState","isFocusVisibleRef","onBlur","handleBlurVisible","onFocus","handleFocusVisible","focusVisibleRef","setFocusVisible","rootRef","useRef","handleFocusRef","handleRef","handleMouseMove","event","rootNode","current","right","left","getBoundingClientRect","firstChild","percent","direction","clientX","newHover","prev","handleMouseLeave","handleChange","newValue","parseFloat","target","handleClear","clientY","handleFocus","newFocus","handleBlur","emptyValueFocused","setEmptyValueFocused","item","state","labelProps","id","String","replace","container","filled","active","key","Fragment","htmlFor","onClick","type","checked","role","Array","from","map","_","index","itemValue","items","ceil","$","indexDecimal","itemDecimalValue","style","overflow","zIndex","defaultChecked","object","string","bool","node","func","elementType","Error","join","oneOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { visuallyHidden } from '@material-ui/system';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { useTheme, withStyles } from '../styles';\nimport { capitalize, useForkRef, useIsFocusVisible, useControlled, unstable_useId as useId } from '../utils';\nimport Star from '../internal/svg-icons/Star';\nimport StarBorder from '../internal/svg-icons/StarBorder';\n\nfunction clamp(value, min, max) {\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n}\n\nfunction getDecimalPrecision(num) {\n  const decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction roundValueToPrecision(value, precision) {\n  if (value == null) {\n    return value;\n  }\n\n  const nearest = Math.round(value / precision) * precision;\n  return Number(nearest.toFixed(getDecimalPrecision(precision)));\n}\n\nexport const styles = theme => ({\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    // Required to position the pristine input absolutely\n    position: 'relative',\n    fontSize: theme.typography.pxToRem(24),\n    color: '#faaf00',\n    cursor: 'pointer',\n    textAlign: 'left',\n    WebkitTapHighlightColor: 'transparent',\n    '&$disabled': {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    '&$focusVisible $iconActive': {\n      outline: '1px solid #999'\n    }\n  },\n\n  /* Styles applied to the root element if `size=\"small\"`. */\n  sizeSmall: {\n    fontSize: theme.typography.pxToRem(18)\n  },\n\n  /* Styles applied to the root element if `size=\"large\"`. */\n  sizeLarge: {\n    fontSize: theme.typography.pxToRem(30)\n  },\n\n  /* Styles applied to the root element if `readOnly={true}`. */\n  readOnly: {\n    pointerEvents: 'none'\n  },\n\n  /* Pseudo-class applied to the root element if `disabled={true}`. */\n  disabled: {},\n\n  /* Pseudo-class applied to the root element if keyboard focused. */\n  focusVisible: {},\n\n  /* Visually hide an element. */\n  visuallyHidden,\n\n  /* Styles applied to the label elements. */\n  label: {\n    cursor: 'inherit'\n  },\n\n  /* Styles applied to the label of the \"no value\" input when it is active. */\n  labelEmptyValueActive: {\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    outline: '1px solid #999',\n    width: '100%'\n  },\n\n  /* Styles applied to the icon wrapping elements. */\n  icon: {\n    // Fit wrapper to actual icon size.\n    display: 'flex',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    }),\n    // Fix mouseLeave issue.\n    // https://github.com/facebook/react/issues/4492\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied to the icon wrapping elements when empty. */\n  iconEmpty: {\n    color: theme.palette.action.disabled\n  },\n\n  /* Styles applied to the icon wrapping elements when filled. */\n  iconFilled: {},\n\n  /* Styles applied to the icon wrapping elements when hover. */\n  iconHover: {},\n\n  /* Styles applied to the icon wrapping elements when focus. */\n  iconFocus: {},\n\n  /* Styles applied to the icon wrapping elements when active. */\n  iconActive: {\n    transform: 'scale(1.2)'\n  },\n\n  /* Styles applied to the icon wrapping elements when decimals are necessary. */\n  decimal: {\n    position: 'relative'\n  }\n});\n\nfunction IconContainer(props) {\n  const other = _objectWithoutPropertiesLoose(props, [\"value\"]);\n\n  return /*#__PURE__*/React.createElement(\"span\", other);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? IconContainer.propTypes = {\n  value: PropTypes.number.isRequired\n} : void 0;\nconst defaultIcon = /*#__PURE__*/React.createElement(Star, {\n  fontSize: \"inherit\"\n});\nconst defaultEmptyIcon = /*#__PURE__*/React.createElement(StarBorder, {\n  fontSize: \"inherit\"\n});\n\nfunction defaultLabelText(value) {\n  return `${value} Star${value !== 1 ? 's' : ''}`;\n}\n\nconst Rating = /*#__PURE__*/React.forwardRef(function Rating(props, ref) {\n  const {\n    classes,\n    className,\n    defaultValue = null,\n    disabled = false,\n    emptyIcon = defaultEmptyIcon,\n    emptyLabelText = 'Empty',\n    getLabelText = defaultLabelText,\n    icon = defaultIcon,\n    IconContainerComponent = IconContainer,\n    max = 5,\n    name: nameProp,\n    onChange,\n    onChangeActive,\n    onMouseLeave,\n    onMouseMove,\n    precision = 1,\n    readOnly = false,\n    size = 'medium',\n    value: valueProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"className\", \"defaultValue\", \"disabled\", \"emptyIcon\", \"emptyLabelText\", \"getLabelText\", \"icon\", \"IconContainerComponent\", \"max\", \"name\", \"onChange\", \"onChangeActive\", \"onMouseLeave\", \"onMouseMove\", \"precision\", \"readOnly\", \"size\", \"value\"]);\n\n  const name = useId(nameProp);\n  const [valueDerived, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Rating'\n  });\n  const valueRounded = roundValueToPrecision(valueDerived, precision);\n  const theme = useTheme();\n  const [{\n    hover,\n    focus\n  }, setState] = React.useState({\n    hover: -1,\n    focus: -1\n  });\n  let value = valueRounded;\n\n  if (hover !== -1) {\n    value = hover;\n  }\n\n  if (focus !== -1) {\n    value = focus;\n  }\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const rootRef = React.useRef();\n  const handleFocusRef = useForkRef(focusVisibleRef, rootRef);\n  const handleRef = useForkRef(handleFocusRef, ref);\n\n  const handleMouseMove = event => {\n    if (onMouseMove) {\n      onMouseMove(event);\n    }\n\n    const rootNode = rootRef.current;\n    const {\n      right,\n      left\n    } = rootNode.getBoundingClientRect();\n    const {\n      width\n    } = rootNode.firstChild.getBoundingClientRect();\n    let percent;\n\n    if (theme.direction === 'rtl') {\n      percent = (right - event.clientX) / (width * max);\n    } else {\n      percent = (event.clientX - left) / (width * max);\n    }\n\n    let newHover = roundValueToPrecision(max * percent + precision / 2, precision);\n    newHover = clamp(newHover, precision, max);\n    setState(prev => prev.hover === newHover && prev.focus === newHover ? prev : {\n      hover: newHover,\n      focus: newHover\n    });\n    setFocusVisible(false);\n\n    if (onChangeActive && hover !== newHover) {\n      onChangeActive(event, newHover);\n    }\n  };\n\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    const newHover = -1;\n    setState({\n      hover: newHover,\n      focus: newHover\n    });\n\n    if (onChangeActive && hover !== newHover) {\n      onChangeActive(event, newHover);\n    }\n  };\n\n  const handleChange = event => {\n    let newValue = parseFloat(event.target.value); // Give mouse priority over keyboard\n    // Fix https://github.com/mui-org/material-ui/issues/22827\n\n    if (hover !== -1) {\n      newValue = hover;\n    }\n\n    setValueState(newValue);\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n  };\n\n  const handleClear = event => {\n    // Ignore keyboard events\n    // https://github.com/facebook/react/issues/7407\n    if (event.clientX === 0 && event.clientY === 0) {\n      return;\n    }\n\n    setState({\n      hover: -1,\n      focus: -1\n    });\n    setValueState(null);\n\n    if (onChange && parseFloat(event.target.value) === valueRounded) {\n      onChange(event, null);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    const newFocus = parseFloat(event.target.value);\n    setState(prev => ({\n      hover: prev.hover,\n      focus: newFocus\n    }));\n\n    if (onChangeActive && focus !== newFocus) {\n      onChangeActive(event, newFocus);\n    }\n  };\n\n  const handleBlur = event => {\n    if (hover !== -1) {\n      return;\n    }\n\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    const newFocus = -1;\n    setState(prev => ({\n      hover: prev.hover,\n      focus: newFocus\n    }));\n\n    if (onChangeActive && focus !== newFocus) {\n      onChangeActive(event, newFocus);\n    }\n  };\n\n  const [emptyValueFocused, setEmptyValueFocused] = React.useState(false);\n\n  const item = (state, labelProps) => {\n    const id = `${name}-${String(state.value).replace('.', '-')}`;\n    const container = /*#__PURE__*/React.createElement(IconContainerComponent, {\n      value: state.value,\n      className: clsx(classes.icon, state.filled ? classes.iconFilled : classes.iconEmpty, state.hover && classes.iconHover, state.focus && classes.iconFocus, state.active && classes.iconActive)\n    }, emptyIcon && !state.filled ? emptyIcon : icon);\n\n    if (readOnly) {\n      return /*#__PURE__*/React.createElement(\"span\", _extends({\n        key: state.value\n      }, labelProps), container);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: state.value\n    }, /*#__PURE__*/React.createElement(\"label\", _extends({\n      className: classes.label,\n      htmlFor: id\n    }, labelProps), container, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.visuallyHidden\n    }, getLabelText(state.value))), /*#__PURE__*/React.createElement(\"input\", {\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      onClick: handleClear,\n      disabled: disabled,\n      value: state.value,\n      id: id,\n      type: \"radio\",\n      name: name,\n      checked: state.checked,\n      className: classes.visuallyHidden\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    ref: handleRef,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    className: clsx(classes.root, className, size !== 'medium' && classes[`size${capitalize(size)}`], disabled && classes.disabled, focusVisible && classes.focusVisible, readOnly && classes.readOnly),\n    role: readOnly ? 'img' : null,\n    \"aria-label\": readOnly ? getLabelText(value) : null\n  }, other), Array.from(new Array(max)).map((_, index) => {\n    const itemValue = index + 1;\n\n    if (precision < 1) {\n      const items = Array.from(new Array(1 / precision));\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: itemValue,\n        className: clsx(classes.decimal, itemValue === Math.ceil(value) && (hover !== -1 || focus !== -1) && classes.iconActive)\n      }, items.map(($, indexDecimal) => {\n        const itemDecimalValue = roundValueToPrecision(itemValue - 1 + (indexDecimal + 1) * precision, precision);\n        return item({\n          value: itemDecimalValue,\n          filled: itemDecimalValue <= value,\n          hover: itemDecimalValue <= hover,\n          focus: itemDecimalValue <= focus,\n          checked: itemDecimalValue === valueRounded\n        }, {\n          style: items.length - 1 === indexDecimal ? {} : {\n            width: itemDecimalValue === value ? `${(indexDecimal + 1) * precision * 100}%` : '0%',\n            overflow: 'hidden',\n            zIndex: 1,\n            position: 'absolute'\n          }\n        });\n      }));\n    }\n\n    return item({\n      value: itemValue,\n      active: itemValue === value && (hover !== -1 || focus !== -1),\n      filled: itemValue <= value,\n      hover: itemValue <= hover,\n      focus: itemValue <= focus,\n      checked: itemValue === valueRounded\n    });\n  }), !readOnly && !disabled && valueRounded == null && /*#__PURE__*/React.createElement(\"label\", {\n    className: clsx(emptyValueFocused && classes.labelEmptyValueActive)\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: \"\",\n    id: `${name}-empty`,\n    type: \"radio\",\n    name: name,\n    defaultChecked: true,\n    className: classes.visuallyHidden,\n    onFocus: () => setEmptyValueFocused(true),\n    onBlur: () => setEmptyValueFocused(false)\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.visuallyHidden\n  }, emptyLabelText)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Rating.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default null\n   */\n  defaultValue: PropTypes.number,\n\n  /**\n   * If `true`, the rating will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when empty.\n   * @default <StarBorder fontSize=\"inherit\" />\n   */\n  emptyIcon: PropTypes.node,\n\n  /**\n   * The label read when the rating input is empty.\n   * @default 'Empty'\n   */\n  emptyLabelText: PropTypes.node,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {number} value The rating label's value to format.\n   * @returns {string}\n   *\n   * @default function defaultLabelText(value) {\n   *   return `${value} Star${value !== 1 ? 's' : ''}`;\n   * }\n   */\n  getLabelText: PropTypes.func,\n\n  /**\n   * The icon to display.\n   * @default <Star fontSize=\"inherit\" />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component containing the icon.\n   * @default function IconContainer(props) {\n   *   const { value, ...other } = props;\n   *   return <span {...other} />;\n   * }\n   */\n  IconContainerComponent: PropTypes.elementType,\n\n  /**\n   * Maximum rating.\n   * @default 5\n   */\n  max: PropTypes.number,\n\n  /**\n   * The name attribute of the radio `input` elements.\n   * This input `name` should be unique within the page.\n   * Being unique within a form is insufficient since the `name` is used to generated IDs.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} value The new value.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback function that is fired when the hover state changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} value The new value.\n   */\n  onChangeActive: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseMove: PropTypes.func,\n\n  /**\n   * The minimum increment value change allowed.\n   * @default 1\n   */\n  precision: chainPropTypes(PropTypes.number, props => {\n    if (props.precision < 0.1) {\n      return new Error(['Material-UI: The prop `precision` should be above 0.1.', 'A value below this limit has an imperceptible impact.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Removes all hover effects and pointer events.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * The size of the rating.\n   * @default 'medium'\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The rating value.\n   */\n  value: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRating'\n})(Rating);"]},"metadata":{},"sourceType":"module"}