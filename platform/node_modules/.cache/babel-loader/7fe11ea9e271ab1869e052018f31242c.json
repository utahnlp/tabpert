{"ast":null,"code":"var _jsxFileName = \"/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/View.js\";\nimport React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\nconst grid = 25;\n\nclass View extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRows = this.tableRows.bind(this);\n    this.showView = this.showView.bind(this);\n    this.hypothesesDisplay = this.hypothesesDisplay.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  getListStyle(isDraggingOver) {\n    return {\n      background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n      padding: grid,\n      width: 250\n    };\n  }\n\n  getItemStyle(isDragging, draggableStyle) {\n    return {\n      // some basic styles to make the items look a bit nicer\n      userSelect: \"none\",\n      padding: grid * 2,\n      margin: `0 0 ${grid}px 0`,\n      // change background colour if dragging\n      background: isDragging ? \"lightgreen\" : \"grey\",\n      // styles we need to apply on draggables\n      ...draggableStyle\n    };\n  }\n\n  tableRows(pairs, type) {\n    return Object.keys(pairs).map(key => {\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, key)), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Droppable, {\n        droppableId: type + \"_\" + key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n        ref: provided.innerRef,\n        style: this.getListStyle(snapshot.isDraggingOver)\n      }, provided.droppableProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }\n      }), pairs[key].map((value, id) => {\n        return /*#__PURE__*/React.createElement(Draggable, {\n          draggableId: type + \"_\" + key + \"_\" + id,\n          index: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }\n        }, (provided, snapshot) => /*#__PURE__*/React.createElement(\"div\", Object.assign({\n          ref: provided.innerRef\n        }, provided.draggableProps, provided.dragHandleProps, {\n          style: this.getItemStyle(snapshot.isDragging, provided.draggableProps.style),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 31\n          }\n        }, value)));\n      }))))));\n    });\n  }\n\n  handleInputChange(event) {\n    console.log(event);\n  }\n\n  hypothesesDisplay(hypo, type, idx) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"input\",\n      name: type + idx,\n      type: \"textbox\",\n      onChange: this.props.handleInputChange,\n      contentEditable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, hypo);\n  }\n\n  showView(type) {\n    console.log(this.props.oh);\n    const ohy = Object.keys(this.props.oh).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, \"original\", idx);\n    });\n    const ahy = Object.keys(this.props.ah).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, \"A\", idx);\n    });\n    const bhy = Object.keys(this.props.bh).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, \"B\", idx);\n    });\n    const chy = Object.keys(this.props.ch).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, \"C\", idx);\n    });\n\n    if (type === \"drag\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.original, \"original\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.A, \"A\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.B, \"B\")), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.C, \"C\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, ahy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, bhy), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, chy)));\n    } else if (type === \"focusA\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.original, \"original\")), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.A, \"A\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }, ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, ahy)));\n    } else if (type === \"focusB\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.original, \"original\")), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.B, \"B\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }, ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, chy)));\n    } else if (type === \"focusC\") {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.original, \"original\")), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, this.tableRows(this.props.C, \"C\"))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, ohy), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, chy)));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.showView(this.props.type));\n  }\n\n}\n\nexport default View;","map":{"version":3,"sources":["/home/nupur/infotabs-extension/infotabs-code/interface/frontend/src/components/View.js"],"names":["React","Component","DragDropContext","Droppable","Draggable","Container","Row","Col","Button","grid","View","constructor","props","tableRows","bind","showView","hypothesesDisplay","handleInputChange","getListStyle","isDraggingOver","background","padding","width","getItemStyle","isDragging","draggableStyle","userSelect","margin","pairs","type","Object","keys","map","key","provided","snapshot","innerRef","droppableProps","value","id","draggableProps","dragHandleProps","style","event","console","log","hypo","idx","oh","ohy","ahy","ah","bhy","bh","chy","ch","original","A","B","C","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Container, Row, Col, Button } from \"react-bootstrap\";\n\nconst grid = 25;\nclass View extends Component {\n  constructor(props) {\n    super(props);\n    this.tableRows = this.tableRows.bind(this);\n    this.showView = this.showView.bind(this);\n    this.hypothesesDisplay = this.hypothesesDisplay.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n  getListStyle(isDraggingOver) {\n    return {\n      background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n      padding: grid,\n      width: 250,\n    };\n  }\n  getItemStyle(isDragging, draggableStyle) {\n    return {\n      // some basic styles to make the items look a bit nicer\n      userSelect: \"none\",\n      padding: grid * 2,\n      margin: `0 0 ${grid}px 0`,\n\n      // change background colour if dragging\n      background: isDragging ? \"lightgreen\" : \"grey\",\n\n      // styles we need to apply on draggables\n      ...draggableStyle,\n    };\n  }\n  tableRows(pairs, type) {\n    return Object.keys(pairs).map((key) => {\n      return (\n        <Container>\n          <Row>\n            <Col>\n              <strong>{key}</strong>\n            </Col>\n            <Col>\n              <Droppable droppableId={type + \"_\" + key}>\n                {(provided, snapshot) => (\n                  <div\n                    ref={provided.innerRef}\n                    style={this.getListStyle(snapshot.isDraggingOver)}\n                    {...provided.droppableProps}\n                  >\n                    {pairs[key].map((value, id) => {\n                      return (\n                        <Draggable\n                          draggableId={type + \"_\" + key + \"_\" + id}\n                          index={id}\n                        >\n                          {(provided, snapshot) => (\n                            <div\n                              ref={provided.innerRef}\n                              {...provided.draggableProps}\n                              {...provided.dragHandleProps}\n                              style={this.getItemStyle(\n                                snapshot.isDragging,\n                                provided.draggableProps.style\n                              )}\n                            >\n                              <Row>{value}</Row>\n                            </div>\n                          )}\n                        </Draggable>\n                      );\n                    })}\n                  </div>\n                )}\n              </Droppable>\n            </Col>\n          </Row>\n        </Container>\n      );\n    });\n  }\n  handleInputChange(event) {\n    console.log(event);\n  }\n  hypothesesDisplay(hypo, type, idx) {\n    return (\n      <div\n        class=\"input\"\n        name={type + idx}\n        type=\"textbox\"\n        onChange={this.props.handleInputChange}\n        contentEditable\n      >\n        {hypo}\n      </div>\n    );\n  }\n  showView(type) {\n    console.log(this.props.oh);\n    const ohy = Object.keys(this.props.oh).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, \"original\", idx);\n    });\n    const ahy = Object.keys(this.props.ah).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, \"A\", idx);\n    });\n    const bhy = Object.keys(this.props.bh).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, \"B\", idx);\n    });\n    const chy = Object.keys(this.props.ch).map((hypo, idx) => {\n      return this.hypothesesDisplay(hypo, \"C\", idx);\n    });\n    if (type === \"drag\") {\n      return (\n        <>\n          <Row>\n            <Col md={3}>{this.tableRows(this.props.original, \"original\")}</Col>\n            <Col md={3}>{this.tableRows(this.props.A, \"A\")}</Col>\n            <Col md={3}>{this.tableRows(this.props.B, \"B\")}</Col>\n            <Col md={3}>{this.tableRows(this.props.C, \"C\")}</Col>\n          </Row>\n          <Row>\n            <Col md={3}>{ohy}</Col>\n            <Col md={3}>{ahy}</Col>\n            <Col md={3}>{bhy}</Col>\n            <Col md={3}>{chy}</Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusA\") {\n      return (\n        <>\n          <Row>\n            <Col md={6}>{this.tableRows(this.props.original, \"original\")}</Col>\n            <Col md={6}>{this.tableRows(this.props.A, \"A\")}</Col>\n          </Row>\n          <Row>\n            <Col md={6}>{ohy}</Col>\n            <Col md={6}>{ahy}</Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusB\") {\n      return (\n        <>\n          <Row>\n            {\" \"}\n            <Col md={6}>{this.tableRows(this.props.original, \"original\")}</Col>\n            <Col md={6}>{this.tableRows(this.props.B, \"B\")}</Col>\n          </Row>\n          <Row>\n            <Col md={6}>{ohy}</Col>\n            <Col md={6}>{chy}</Col>\n          </Row>\n        </>\n      );\n    } else if (type === \"focusC\") {\n      return (\n        <>\n          <Row>\n            <Col md={6}>{this.tableRows(this.props.original, \"original\")}</Col>\n            <Col md={6}>{this.tableRows(this.props.C, \"C\")}</Col>\n          </Row>\n          <Row>\n            <Col md={6}>{ohy}</Col>\n            <Col md={6}>{chy}</Col>\n          </Row>\n        </>\n      );\n    }\n  }\n\n  render() {\n    return <>{this.showView(this.props.type)}</>;\n  }\n}\n\nexport default View;\n"]},"metadata":{},"sourceType":"module"}